angular.module('openITCOCKPIT').controller('SystemsettingsIndexController',function($scope,$http,$state,NotyService,RedirectService){$scope.systemsettings={};$scope.dropdownOptionSequence=[];$scope.load=function(){$http.get("/systemsettings/index.json",{params:{'angular':!0,}}).then(function(result){$scope.systemsettings=result.data.all_systemsettings})};$scope.getAnonymousStatisticsValue=function(state){switch(state){case '0':return'Anonymous statistics are disabled';break;case '1':return'Anonymous statistics are enabled';break;case '2':return'Anonymous statistics are disabled - Waiting for your approval';break;default:return'Anonymous statistics are disabled - Waiting for your approval';break}};$scope.generateOptions=function(){for(var i=1;i<107;i++){$scope.dropdownOptionSequence.push(i)}};$scope.submit=function(){$http.post('/systemsettings/index.json?angular=true',$scope.systemsettings).then(function(result){NotyService.genericSuccess();console.log('Data saved successfully');RedirectService.redirectWithFallback('SystemsettingsIndex');$scope.showPageReloadRequired()},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('systemsettings',function(){if($scope.systemsettings.length!=0){jQuery(function(){jQuery("[rel=tooltip]").tooltip()})}});$scope.generateOptions();$scope.load()});angular.module('openITCOCKPIT').controller('StatisticsIndexController',function($scope,$http){$scope.post={statistics:{decision:2}};$scope.init=!0;$scope.load=function(){$http.get("/statistics/index.json",{params:{'angular':!0}}).then(function(result){$scope.settings=result.data.settings;$scope.settings.Systemsetting.value=parseInt($scope.settings.Systemsetting.value,10);$scope.init=!1})};$scope.save=function(value){$scope.post.statistics.decision=value;$http.post("/statistics/saveStatisticDecision.json",$scope.post).then(function(result){$scope.load()})};$scope.load()});angular.module('openITCOCKPIT').controller('LayoutController',function($scope,$http){});angular.module('openITCOCKPIT').controller('ProfileEditController',function($scope,$http,$state,$stateParams,NotyService){$scope.init=!0;$scope.apikeys=[];$scope.isLdapAuth=!1;$scope.post={User:{firstname:'',lastname:'',email:'',phone:'',showstatsinmenu:0,recursive_browser:0,paginatorlength:25,dateformat:'',timezone:'',},Password:{current_password:null,password:null,confirm_password:null},Apikey:{apikey:'',description:''}};$scope.load=function(){$http.get("/profile/edit.json",{params:{'angular':!0}}).then(function(result){$scope.isLdapUser=result.data.isLdapUser;$scope.maxUploadLimit=result.data.maxUploadLimit;$scope.init=!1;var data=result.data.user;data.password='';data.confirm_password='';$scope.post={User:data}},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadApiKey=function(){$http.get("/profile/apikey.json",{params:{'angular':!0}}).then(function(result){$scope.apikeys=result.data.apikeys;$scope.init=!1})};$scope.loadDateformats=function(){$http.get("/users/loadDateformats.json",{params:{'angular':!0}}).then(function(result){$scope.dateformats=result.data.dateformats})};createDropzone=function(){$('.profileImg-dropzone').dropzone({method:'post',maxFilesize:$scope.maxUploadLimit.value,acceptedFiles:'image/*',paramName:"Picture",success:function(obj){var $previewElement=$(obj.previewElement);var response=JSON.parse(obj.xhr.response);if(response.success){$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-success');NotyService.genericSuccess({message:response.message});$scope.showPageReloadRequired();return}
$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');NotyService.genericError({message:response.message})},error:function(obj,errorMessage,xhr){var $previewElement=$(obj.previewElement);$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');if(typeof xhr==="undefined"){NotyService.genericError({message:errorMessage})}else{var response=JSON.parse(obj.xhr.response);NotyService.genericError({message:response.message})}}})};$scope.createApiKey=function(apiKeyId){$scope.getNewApiKey();$('#angularCreateApiKeyModal').modal('show')};$scope.saveApiKey=function(){$http.post("/profile/create_apikey.json",{angular:!0,Apikey:$scope.post.Apikey}).then(function(result){$scope.newApiKey=null;$scope.loadApiKey();$('#angularCreateApiKeyModal').modal('hide')},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.getNewApiKey=function(){$http.get("/profile/create_apikey.json?angular=true").then(function(result){$scope.newApiKey=result.data.apikey;$scope.post.Apikey.apikey=$scope.newApiKey})};$scope.submitUser=function(){$http.post("/profile/edit.json?angular=true",{User:$scope.post.User}).then(function(result){$scope.errors={};NotyService.genericSuccess();$scope.showPageReloadRequired()},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.submitPassword=function(){$http.post("/profile/changePassword.json?angular=true",{Password:$scope.post.Password}).then(function(result){NotyService.genericSuccess({message:result.data.message});$scope.post.Password={current_password:null,password:null,confirm_password:null};$scope.errors={}},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.deleteUserImage=function(){$http.post("/profile/deleteImage.json?angular=true").then(function(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;NotyService.genericError({message:$scope.errors})}else{NotyService.genericSuccess();$scope.showPageReloadRequired()}},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load();$scope.loadDateformats();$scope.loadApiKey();$scope.$watch('maxUploadLimit',function(){if($scope.maxUploadLimit!=null){createDropzone()}},!0)});angular.module('openITCOCKPIT').controller('SupportsIssueController',function($scope,$http){jQuery.ajax({url:"/js/lib/jquery-migrate-1.4.1.min.js",type:"get",cache:!0,dataType:"script"});jQuery.ajax({url:"https://project.it-novum.com/s/706c3049afadd0ca1fb33e95554a86b1-T/-xdky2a/800010/76ebf73be4dd92dad1b7a8c846dfbc44/3.0.7/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?locale=en-US&collectorId=5350ef3b",type:"get",cache:!0,dataType:"script"});window.ATL_JQ_PAGE_PROPS={"triggerFunction":function(showCollectorDialog){jQuery("#JIRAIssue").click(function(e){e.preventDefault();showCollectorDialog()})}}});angular.module('openITCOCKPIT').controller('NotificationsIndexController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','NotificationHosts.start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;var now=new Date();$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={NotificationHosts:{output:'',state:{recovery:!1,down:!1,unreachable:!1},},Hosts:{name:''},Contacts:{name:''},Commands:{name:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/notifications/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[NotificationHosts.output]':$scope.filter.NotificationHosts.output,'filter[NotificationHosts.state][]':$rootScope.currentStateForApi($scope.filter.NotificationHosts.state),'filter[Contacts.name]':$scope.filter.Contacts.name,'filter[Commands.name]':$scope.filter.Commands.name,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.notifications=result.data.all_notifications;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('NotificationsHostNotificationController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','NotificationHosts.start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={NotificationHosts:{state:{recovery:!1,down:!1,unreachable:!1},output:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.init=!0;$scope.showFilter=!1;$scope.hostBrowserMenuConfig={autoload:!0,hostId:$scope.id,includeHoststatus:!0};$scope.load=function(){$http.get("/notifications/hostNotification/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[NotificationHosts.output]':$scope.filter.NotificationHosts.output,'filter[NotificationHosts.state][]':$rootScope.currentStateForApi($scope.filter.NotificationHosts.state),'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.notifications=result.data.all_notifications;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('NotificationsServiceNotificationController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','NotificationServices.start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={NotificationServices:{state:{ok:!1,warning:!1,critical:!1,unknown:!1},output:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.init=!0;$scope.showFilter=!1;$scope.serviceBrowserMenuConfig={autoload:!0,serviceId:$scope.id,includeServicestatus:!0};$scope.load=function(){$http.get("/notifications/serviceNotification/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[NotificationServices.output]':$scope.filter.NotificationServices.output,'filter[NotificationServices.state][]':$rootScope.currentStateForApi($scope.filter.NotificationServices.state),'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.notifications=result.data.all_notifications;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('NotificationsServicesController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','NotificationServices.start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;var now=new Date();$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={NotificationServices:{state:{ok:!1,warning:!1,critical:!1,unknown:!1},output:'',},Hosts:{name:''},Contacts:{name:''},Commands:{name:''},servicename:'',from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/notifications/services.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[NotificationServices.output]':$scope.filter.NotificationServices.output,'filter[NotificationServices.state][]':$rootScope.currentStateForApi($scope.filter.NotificationServices.state),'filter[Contacts.name]':$scope.filter.Contacts.name,'filter[Commands.name]':$scope.filter.Commands.name,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[servicename]':$scope.filter.servicename,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.notifications=result.data.all_notifications;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('CommandsAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService){$scope.post={Command:{name:'',command_type:'1',command_line:'',description:'',commandarguments:[]}};$scope.init=!0;$scope.hasError=null;$scope.hasWebSocketError=!1;$scope.args=[];$scope.macros=[];$scope.jqConsole=null;$scope.load=function(){$http.get("/commands/add/.json",{params:{'angular':!0}}).then(function(result){$scope.defaultMacros=result.data.defaultMacros;setTimeout($scope.highlightCommandLine,250)},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.removeArg=function(arg){var args=[];for(var i in $scope.args){if($scope.args[i].id!==arg.id){args.push($scope.args[i])}}
$scope.args=_.sortBy(args,'id')};$scope.addArg=function(){var argsCount=1;var allIds=_.map($scope.args,'id');while(in_array(argsCount,allIds)){argsCount++}
$scope.args.push({id:argsCount,name:'$ARG'+argsCount+'$',human_name:''});$scope.args=_.sortBy($scope.args,'id')};$scope.checkForMisingArguments=function(){var commandLine=$scope.post.Command.command_line;var usedCommandLineArgs=commandLine.match(/(\$ARG\d+\$)/g);if(usedCommandLineArgs!==null){usedCommandLineArgs=usedCommandLineArgs.length}else{usedCommandLineArgs=0}
$scope.usedCommandLineArgs=usedCommandLineArgs;$scope.definedCommandArguments=$scope.args.length;if($scope.usedCommandLineArgs===$scope.definedCommandArguments){$scope.submit()}else{$('#argumentMisMatchModal').modal('show')}};$scope.submit=function(){$('#argumentMisMatchModal').modal('hide');var index=0;for(var i in $scope.args){if(!/\S/.test($scope.args[i].human_name)){continue}
$scope.post.Command.commandarguments[index]={'name':$scope.args[i].name,'human_name':$scope.args[i].human_name};index++}
$http.post("/commands/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('CommandsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('CommandsIndex')},function errorCallback(result){if(result.data.hasOwnProperty('error')){NotyService.genericError();$scope.errors=result.data.error}})};$scope.showMacros=function(){$http.get('/macros/index/.json',{params:{'angular':!0}}).then(function(result){$scope.macros=result.data.all_macros;$("#MacrosOverview").modal("show")})};$scope.createJQConsole=function(){if(SudoService.hasError()){$scope.hasWebSocketError=!0;$('#console').block({fadeIn:1000,message:'<i class="fa fa-minus-circle fa-5x"></i>',theme:!1});$('.blockElement').css({'background-color':'','border':'none','color':'#FFFFFF'})}
$scope.jqConsole=$('#console').jqconsole('','nagios$ ');$http.get('/commands/getConsoleWelcome/.json',{params:{'angular':!0}}).then(function(result){$scope.jqConsole.Write(result.data.welcomeMessage)});SudoService.onResponse(function(response){if(typeof response.data!=='undefined'){var payload=JSON.parse(response.data);$scope.jqConsole.Write(payload.payload,'jqconsole-output')}});var newLineInPromt=function(){$scope.jqConsole.Prompt(!0,function(input){SudoService.send(SudoService.toJson('execute_nagios_command',input));newLineInPromt()})};newLineInPromt()};$scope.showDefaultMacros=function(){$('#defaultMacrosOverview').modal('show')};$scope.highlightCommandLine=function(){var highlight=[{highlight:/(\$ARG\d+\$)/g,className:'highlight-blue'},{highlight:/(\$USER\d+\$)/g,className:'highlight-green'},{highlight:/(\$_HOST.*\$)/g,className:'highlight-purple'},{highlight:/(\$_SERVICE.*\$)/g,className:'highlight-purple'},{highlight:/(\$_CONTACT.*\$)/g,className:'highlight-purple'}];var escapeDollar=new RegExp('\\$','g');for(var index in $scope.defaultMacros){for(var i in $scope.defaultMacros[index].macros){var macroName=$scope.defaultMacros[index].macros[i].macro;macroName=macroName.replace(escapeDollar,'\\$');highlight.push({highlight:new RegExp(macroName,"g"),className:$scope.defaultMacros[index].class})}}
$('#commandLineTextArea').highlightWithinTextarea({highlight:[highlight]})};$scope.load();setTimeout($scope.createJQConsole,250)});angular.module('openITCOCKPIT').controller('CommandsIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Commands.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Commands:{name:'',service_checks:!0,host_checks:!0,notifications:!0,eventhandler:!0}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/commands/delete/';$scope.init=!0;$scope.showFilter=!1;var getSelectedCommandTypeFilters=function(){var filter=[];if($scope.filter.Commands.service_checks){filter.push(1)}
if($scope.filter.Commands.host_checks){filter.push(2)}
if($scope.filter.Commands.notifications){filter.push(3)}
if($scope.filter.Commands.eventhandler){filter.push(4)}
return filter};var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Commands.name]':$scope.filter.Commands.name,'filter[Commands.command_type][]':getSelectedCommandTypeFilters()};$http.get("/commands/index.json",{params:params}).then(function(result){$scope.commands=result.data.all_commands;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.commands){for(var key in $scope.commands){var id=$scope.commands[key].Command.id;$scope.massChange[id]=!0}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(command){var object={};object[command.Command.id]=command.Command.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.commands){for(var id in selectedObjects){if(id==$scope.commands[key].Command.id){objects[id]=$scope.commands[key].Command.name}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('CommandsUsedByController',function($scope,$http,$stateParams,$state){$scope.id=$stateParams.id;$scope.total=0;$scope.load=function(){$http.get("/commands/usedBy/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.objects=result.data.objects;$scope.total=result.data.total;$scope.command=result.data.command},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.load()});angular.module('openITCOCKPIT').controller('CommandsCopyController',function($scope,$http,$state,$stateParams,QueryStringService,NotyService,RedirectService){var ids=$stateParams.ids.split(',');if(ids.length===0||ids[0]===''){RedirectService.redirectWithFallback('CommandsIndex');return}
$scope.load=function(){$http.get("/commands/copy/"+ids.join('/')+".json",{params:{'angular':!0,}}).then(function(result){$scope.sourceCommands=[];for(var key in result.data.commands){$scope.sourceCommands.push({Source:{id:result.data.commands[key].Command.id,name:result.data.commands[key].Command.name,},Command:{name:result.data.commands[key].Command.name,command_line:result.data.commands[key].Command.command_line,description:result.data.commands[key].Command.description}})}
$scope.init=!1})};$scope.copy=function(){$http.post("/commands/copy/.json?angular=true",{data:$scope.sourceCommands}).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('CommandsIndex')},function errorCallback(result){NotyService.genericError();$scope.sourceCommands=result.data.result})};$scope.load()});angular.module('openITCOCKPIT').controller('CommandsEditController',function($scope,$http,SudoService,QueryStringService,$stateParams,$state,$location,NotyService,RedirectService){$scope.post={Command:{name:'',command_type:'1',command_line:'',description:'',commandarguments:[]}};$scope.id=$stateParams.id;$scope.init=!0;$scope.hasError=null;$scope.hasWebSocketError=!1;$scope.args=[];$scope.macros=[];$scope.jqConsole=null;$scope.load=function(){$http.get("/commands/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.command=result.data.command;$scope.defaultMacros=result.data.defaultMacros;for(key in $scope.command.commandarguments){$scope.args.push({id:$scope.command.commandarguments[key].id,name:$scope.command.commandarguments[key].name,human_name:$scope.command.commandarguments[key].human_name})}
$scope.post.Command.name=$scope.command.name;$scope.post.Command.command_type=String($scope.command.command_type);$scope.post.Command.command_line=$scope.command.command_line;$scope.post.Command.description=$scope.command.description;$scope.init=!1;setTimeout($scope.highlightCommandLine,250)},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.removeArg=function(arg){var args=[];for(var i in $scope.args){if($scope.args[i].id!==arg.id){args.push($scope.args[i])}}
$scope.args=_.sortBy(args,'id')};$scope.addArg=function(){var argsCount=1;var allArgNumbersInUse=_.map($scope.args,function(arg){return arg.name.match(/\d+/g)});while(in_array(argsCount,allArgNumbersInUse)){argsCount++}
$scope.args.push({name:'$ARG'+argsCount+'$',human_name:''});$scope.args=_.sortBy($scope.args,'name')};$scope.checkForMisingArguments=function(){var commandLine=$scope.post.Command.command_line;var usedCommandLineArgs=commandLine.match(/(\$ARG\d+\$)/g);if(usedCommandLineArgs!==null){usedCommandLineArgs=usedCommandLineArgs.length}else{usedCommandLineArgs=0}
$scope.usedCommandLineArgs=usedCommandLineArgs;$scope.definedCommandArguments=$scope.args.length;if($scope.usedCommandLineArgs===$scope.definedCommandArguments){$scope.submit()}else{$('#argumentMisMatchModal').modal('show')}};$scope.submit=function(){$('#argumentMisMatchModal').modal('hide');var index=0;$scope.post.Command.commandarguments=[];for(var i in $scope.args){if(!/\S/.test($scope.args[i].human_name)){continue}
if($scope.args[i].hasOwnProperty('id')){$scope.post.Command.commandarguments[index]={'id':$scope.args[i].id,'name':$scope.args[i].name,'human_name':$scope.args[i].human_name}}else{$scope.post.Command.commandarguments[index]={'name':$scope.args[i].name,'human_name':$scope.args[i].human_name}}
index++}
$http.post("/commands/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:'<u><a href="'+$location.absUrl()+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('CommandsIndex')},function errorCallback(result){if(result.data.hasOwnProperty('error')){NotyService.genericError();$scope.errors=result.data.error}})};$scope.showMacros=function(){$http.get('/macros/index/.json',{params:{'angular':!0}}).then(function(result){$scope.macros=result.data.all_macros;$("#MacrosOverview").modal("show")})};$scope.createJQConsole=function(){if(SudoService.hasError()){$scope.hasWebSocketError=!0;$('#console').block({fadeIn:1000,message:'<i class="fa fa-minus-circle fa-5x"></i>',theme:!1});$('.blockElement').css({'background-color':'','border':'none','color':'#FFFFFF'})}
$scope.jqConsole=$('#console').jqconsole('','nagios$ ');$http.get('/commands/getConsoleWelcome/.json',{params:{'angular':!0}}).then(function(result){$scope.jqConsole.Write(result.data.welcomeMessage)});SudoService.onResponse(function(response){if(typeof response.data!=='undefined'){var payload=JSON.parse(response.data);$scope.jqConsole.Write(payload.payload,'jqconsole-output')}});var newLineInPromt=function(){$scope.jqConsole.Prompt(!0,function(input){SudoService.send(SudoService.toJson('execute_nagios_command',input));newLineInPromt()})};newLineInPromt()};$scope.showDefaultMacros=function(){$('#defaultMacrosOverview').modal('show')};$scope.highlightCommandLine=function(){var highlight=[{highlight:/(\$ARG\d+\$)/g,className:'highlight-blue'},{highlight:/(\$USER\d+\$)/g,className:'highlight-green'},{highlight:/(\$_HOST.*\$)/g,className:'highlight-purple'},{highlight:/(\$_SERVICE.*\$)/g,className:'highlight-purple'},{highlight:/(\$_CONTACT.*\$)/g,className:'highlight-purple'}];var escapeDollar=new RegExp('\\$','g');for(var index in $scope.defaultMacros){for(var i in $scope.defaultMacros[index].macros){var macroName=$scope.defaultMacros[index].macros[i].macro;macroName=macroName.replace(escapeDollar,'\\$');highlight.push({highlight:new RegExp(macroName,"g"),className:$scope.defaultMacros[index].class})}}
$('#commandLineTextArea').highlightWithinTextarea({highlight:[highlight]})};$scope.load();setTimeout($scope.createJQConsole,250)});angular.module('openITCOCKPIT').controller('HostsEditController',function($scope,$http,SudoService,$state,NotyService,LocalStorageService,$stateParams,RedirectService){$scope.id=$stateParams.id;$scope.data={dnsLookUp:LocalStorageService.getItemWithDefault('HostsDnsLookUpEnabled','false')==='true',dnsHostnameNotFound:!1,dnsAddressNotFound:!1,isPrimaryContainerChangeable:!1,allowSharing:!1,isHostOnlyEditableDueToHostSharing:!1,areContactsInheritedFromHosttemplate:!1,disableInheritance:!1};$scope.post={Host:{}};$scope.init=!0;var setValuesFromHosttemplate=function(){var fields=['description','hosttemplate_id','address','command_id','eventhandler_command_id','check_interval','retry_interval','max_check_attempts','first_notification_delay','notification_interval','notify_on_down','notify_on_unreachable','notify_on_recovery','notify_on_flapping','notify_on_downtime','flap_detection_enabled','flap_detection_on_up','flap_detection_on_down','flap_detection_on_unreachable','low_flap_threshold','high_flap_threshold','process_performance_data','freshness_checks_enabled','freshness_threshold','passive_checks_enabled','event_handler_enabled','active_checks_enabled','retain_status_information','retain_nonstatus_information','notifications_enabled','notes','priority','check_period_id','notify_period_id','tags','host_url'];for(var index in fields){var field=fields[index];if($scope.hosttemplate.Hosttemplate.hasOwnProperty(field)){$scope.post.Host[field]=$scope.hosttemplate.Hosttemplate[field]}}
var hasManyAssociations=['hostgroups','contacts','contactgroups'];for(index in hasManyAssociations){field=hasManyAssociations[index];if($scope.hosttemplate.Hosttemplate.hasOwnProperty(field)){$scope.post.Host[field]._ids=$scope.hosttemplate.Hosttemplate[field]._ids}}
$scope.post.Host.customvariables=[];for(index in $scope.hosttemplate.Hosttemplate.customvariables){$scope.post.Host.customvariables.push({objecttype_id:512,name:$scope.hosttemplate.Hosttemplate.customvariables[index].name,value:$scope.hosttemplate.Hosttemplate.customvariables[index].value})}
$scope.post.Host.hostcommandargumentvalues=[];for(index in $scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues){$scope.post.Host.hostcommandargumentvalues.push({commandargument_id:$scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues[index].commandargument_id,value:$scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues[index].value,commandargument:$scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues[index].commandargument})}
$('#HostTagsInput').tagsinput('removeAll');$('#HostTagsInput').tagsinput('add',$scope.post.Host.tags)};var highlight=function($selector){$selector=$selector.parent();var $div=$('<div class="highlight"></div>');$div.css({'width':$selector.width()+'px','height':$selector.height()+'px','left':$selector.css('padding-left')});$selector.append($div);$div.fadeOut(800,function(){$div.remove()})};$scope.loadContainers=function(){var params={'angular':!0};$http.get("/hosts/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.loadHost()})};$scope.loadHost=function(){var params={'angular':!0};$http.get("/hosts/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.commands=result.data.commands;$scope.post.Host=result.data.host.Host;$scope.hosttemplate=result.data.hosttemplate;$scope.data.isPrimaryContainerChangeable=result.data.isPrimaryContainerChangeable;$scope.data.allowSharing=result.data.allowSharing;$scope.data.isHostOnlyEditableDueToHostSharing=result.data.isHostOnlyEditableDueToHostSharing;$scope.data.areContactsInheritedFromHosttemplate=result.data.areContactsInheritedFromHosttemplate;if($scope.data.areContactsInheritedFromHosttemplate){$('#ContactBlocker').block({message:null,overlayCSS:{opacity:0.5,cursor:'not-allowed','background-color':'rgb(255, 255, 255)'}})}
if(result.data.isHostOnlyEditableDueToHostSharing===!0){$scope.containers=result.data.fakeDisplayContainers}
jQuery(function(){$('.tagsinput').tagsinput()});$scope.loadElements();$scope.loadParentHosts('');setTimeout(function(){$scope.init=!1},250)},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Host.command_id;$http.get("/hosts/loadCommandArguments/"+commandId+"/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Host.hostcommandargumentvalues=result.data.hostcommandargumentvalues})};$scope.loadElements=function(){var containerId=$scope.post.Host.container_id;$http.post("/hosts/loadElementsByContainerId/"+containerId+".json?angular=true",{}).then(function(result){$scope.hosttemplates=result.data.hosttemplates;$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.hostgroups=result.data.hostgroups;$scope.satellites=result.data.satellites;$scope.sharingContainers=result.data.sharingContainers})};$scope.loadParentHosts=function(searchString){var containerId=$scope.post.Host.container_id;$http.get("/hosts/loadParentHostsByString.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Host.parenthosts._ids,'containerId':containerId,'hostId':$scope.id}}).then(function(result){$scope.parenthosts=result.data.hosts})};$scope.loadHosttemplate=function(){var hosttemplateId=$scope.post.Host.hosttemplate_id;$http.post("/hosts/loadHosttemplate/"+hosttemplateId+".json?angular=true",{}).then(function(result){$scope.hosttemplate=result.data.hosttemplate;setValuesFromHosttemplate()});setTimeout(function(){$scope.init=!1},500)};$scope.setPriority=function(priority){$scope.post.Host.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Host.customvariables.push({objecttype_id:256,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Host.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.runDnsLookup=function(lookupByHostname){$scope.data.dnsHostnameNotFound=!1;$scope.data.dnsAddressNotFound=!1;if($scope.data.dnsLookUp===!1){return}
var data={hostname:null,address:null};if(lookupByHostname){if($scope.post.Host.name==''){return}
data.hostname=$scope.post.Host.name}else{if($scope.post.Host.address==''){return}
data.address=$scope.post.Host.address}
$http.post("/hosts/runDnsLookup.json?angular=true",data).then(function(result){if(lookupByHostname){var address=result.data.result.address;if(address===null){$scope.data.dnsHostnameNotFound=!0}else{$scope.data.dnsHostnameNotFound=!1;$scope.post.Host.address=address;highlight($('#HostAddress'))}}else{var hostname=result.data.result.hostname;if(hostname===null){$scope.data.dnsAddressNotFound=!0}else{$scope.data.dnsAddressNotFound=!1;$scope.post.Host.name=hostname;highlight($('#HostName'))}}},function errorCallback(result){NotyService.genericError({message:'Error while running DNS lookup'})})};$scope.restoreTemplateTags=function(){$scope.post.Host.tags=$scope.hosttemplate.Hosttemplate.tags;$('#HostTagsInput').tagsinput('removeAll');$('#HostTagsInput').tagsinput('add',$scope.hosttemplate.Hosttemplate.tags)};$scope.submit=function(){$http.post("/hosts/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('HostsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($state.previous.name!==""&&$state.previous.url!=="^"){$state.go($state.previous.name,$state.previous.params).then(function(){NotyService.scrollTop()})}else{RedirectService.redirectWithFallback('HostsIndex')}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadContainers();$scope.$watch('post.Host.container_id',function(){if($scope.init){return}
$scope.loadElements();$scope.loadParentHosts('')},!0);$scope.$watch('post.Host.hosttemplate_id',function(){if($scope.init){return}
$scope.loadHosttemplate()},!0);$scope.$watch('post.Host.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0);$scope.$watch('data.dnsLookUp',function(){if($scope.init){return}
if($scope.data.dnsLookUp===!1){$scope.data.dnsHostnameNotFound=!1;$scope.data.dnsAddressNotFound=!1}
LocalStorageService.setItem('HostsDnsLookUpEnabled',$scope.data.dnsLookUp)},!0);$scope.$watch('data.disableInheritance',function(){if($scope.data.areContactsInheritedFromHosttemplate===!1){return}
if($scope.data.disableInheritance===!0){$('#ContactBlocker').unblock()}else{$('#ContactBlocker').block({message:null,overlayCSS:{opacity:0.5,cursor:'not-allowed','background-color':'rgb(255, 255, 255)'}});if(typeof $scope.hosttemplate!=="undefined"){$scope.post.Host.contacts._ids=$scope.hosttemplate.Hosttemplate.contacts._ids;$scope.post.Host.contactgroups._ids=$scope.hosttemplate.Hosttemplate.contactgroups._ids}}})});angular.module('openITCOCKPIT').controller('HostsNotMonitoredController',function($scope,$http,$httpParamSerializer,SortService,MassChangeService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','Hosts.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;var defaultFilter=function(){$scope.filter={Host:{name:QueryStringService.getValue('filter[Host.name]',''),description:QueryStringService.getValue('filter[Host.description]',''),address:'',satellite_id:[]}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hosts/delete/';$scope.deactivateUrl='/hosts/deactivate/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Host.name,'filter[Hosts.description]':$scope.filter.Host.description,'filter[Hosts.address]':$scope.filter.Host.address,'filter[Hosts.satellite_id][]':$scope.filter.Host.satellite_id};$http.get("/hosts/notMonitored.json",{params:params}).then(function(result){$scope.hosts=result.data.all_hosts;$scope.paging=result.data.paging;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hosts){for(var key in $scope.hosts){if($scope.hosts[key].Host.allow_edit){var id=$scope.hosts[key].Host.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host){var object={};object[host.Host.id]=host.Host.hostname;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hosts){for(var id in selectedObjects){if(id==$scope.hosts[key].Host.id){objects[id]=$scope.hosts[key].Host.hostname}}}
return objects};$scope.linkForCopy=function(){var baseUrl='/hosts/copy/';return buildUrl(baseUrl)};$scope.linkForEditDetails=function(){var baseUrl='/hosts/edit_details/';return buildUrl(baseUrl)};var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('HostsSharingController',function($scope,$http,SudoService,$state,$stateParams,NotyService,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.post={Host:{id:0,hosts_to_containers_sharing:{_ids:[]}}};$scope.load=function(){var params={'angular':!0};$http.get("/hosts/sharing/"+$scope.id+".json",{params:params}).then(function(result){$scope.primaryContainerPathSelect=result.data.primaryContainerPathSelect;$scope.host=result.data.host.Host;$scope.sharingContainers=result.data.sharingContainers;$scope.post.Host.id=result.data.host.Host.id;$scope.post.Host.hosts_to_containers_sharing._ids=result.data.host.Host.hosts_to_containers_sharing._ids;$scope.init=!1})};$scope.submit=function(){$http.post("/hosts/sharing/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('HostsSharing',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HostsIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.load()});angular.module('openITCOCKPIT').controller('HostsAddController',function($scope,$http,SudoService,$state,NotyService,LocalStorageService,RedirectService){$scope.data={createAnother:!1,dnsLookUp:LocalStorageService.getItemWithDefault('HostsDnsLookUpEnabled','false')==='true',dnsHostnameNotFound:!1,dnsAddressNotFound:!1};var clearForm=function(){$scope.post={Host:{name:'',description:'',hosttemplate_id:0,address:'',command_id:0,eventhandler_command_id:0,check_interval:3600,retry_interval:60,max_check_attempts:3,first_notification_delay:0,notification_interval:7200,notify_on_down:1,notify_on_unreachable:1,notify_on_recovery:1,notify_on_flapping:0,notify_on_downtime:0,flap_detection_enabled:0,flap_detection_on_up:0,flap_detection_on_down:0,flap_detection_on_unreachable:0,low_flap_threshold:0,high_flap_threshold:0,process_performance_data:0,freshness_checks_enabled:0,freshness_threshold:0,passive_checks_enabled:1,event_handler_enabled:0,active_checks_enabled:1,retain_status_information:0,retain_nonstatus_information:0,notifications_enabled:0,notes:'',priority:1,check_period_id:0,notify_period_id:0,tags:'',container_id:0,host_url:'',satellite_id:0,contacts:{_ids:[]},contactgroups:{_ids:[]},hostgroups:{_ids:[]},hosts_to_containers_sharing:{_ids:[]},parenthosts:{_ids:[]},customvariables:[],hostcommandargumentvalues:[]}}};clearForm();$scope.init=!0;var setValuesFromHosttemplate=function(){var fields=['description','hosttemplate_id','address','command_id','eventhandler_command_id','check_interval','retry_interval','max_check_attempts','first_notification_delay','notification_interval','notify_on_down','notify_on_unreachable','notify_on_recovery','notify_on_flapping','notify_on_downtime','flap_detection_enabled','flap_detection_on_up','flap_detection_on_down','flap_detection_on_unreachable','low_flap_threshold','high_flap_threshold','process_performance_data','freshness_checks_enabled','freshness_threshold','passive_checks_enabled','event_handler_enabled','active_checks_enabled','retain_status_information','retain_nonstatus_information','notifications_enabled','notes','priority','check_period_id','notify_period_id','tags','host_url'];for(var index in fields){var field=fields[index];if($scope.hosttemplate.Hosttemplate.hasOwnProperty(field)){$scope.post.Host[field]=$scope.hosttemplate.Hosttemplate[field]}}
var hasManyAssociations=['hostgroups','contacts','contactgroups'];for(index in hasManyAssociations){field=hasManyAssociations[index];if($scope.hosttemplate.Hosttemplate.hasOwnProperty(field)){$scope.post.Host[field]._ids=$scope.hosttemplate.Hosttemplate[field]._ids}}
$scope.post.Host.customvariables=[];for(index in $scope.hosttemplate.Hosttemplate.customvariables){$scope.post.Host.customvariables.push({objecttype_id:512,name:$scope.hosttemplate.Hosttemplate.customvariables[index].name,value:$scope.hosttemplate.Hosttemplate.customvariables[index].value})}
$scope.post.Host.hostcommandargumentvalues=[];for(index in $scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues){$scope.post.Host.hostcommandargumentvalues.push({commandargument_id:$scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues[index].commandargument_id,value:$scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues[index].value,commandargument:$scope.hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues[index].commandargument})}
$('#HostTagsInput').tagsinput('removeAll');$('#HostTagsInput').tagsinput('add',$scope.post.Host.tags)};var highlight=function($selector){$selector=$selector.parent();var $div=$('<div class="highlight"></div>');$div.css({'width':$selector.width()+'px','height':$selector.height()+'px','left':$selector.css('padding-left')});$selector.append($div);$div.fadeOut(800,function(){$div.remove()})};$scope.loadContainers=function(){var params={'angular':!0};$http.get("/hosts/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/hosts/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.commands;$scope.init=!1})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Host.command_id;if(commandId===0){return}
$http.get("/hosts/loadCommandArguments/"+commandId+".json",{params:params}).then(function(result){$scope.post.Host.hostcommandargumentvalues=result.data.hostcommandargumentvalues;$scope.init=!1})};$scope.loadElements=function(){var containerId=$scope.post.Host.container_id;if(containerId===0){return}
$http.post("/hosts/loadElementsByContainerId/"+containerId+".json?angular=true",{}).then(function(result){$scope.hosttemplates=result.data.hosttemplates;$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.hostgroups=result.data.hostgroups;$scope.satellites=result.data.satellites;$scope.sharingContainers=result.data.sharingContainers})};$scope.loadParentHosts=function(searchString){var containerId=$scope.post.Host.container_id;if(containerId===0){return}
$http.get("/hosts/loadParentHostsByString.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Host.parenthosts._ids,'containerId':containerId}}).then(function(result){$scope.parenthosts=result.data.hosts})};$scope.loadHosttemplate=function(){var hosttemplateId=$scope.post.Host.hosttemplate_id;if(hosttemplateId===0){$scope.init=!1;return}
$http.post("/hosts/loadHosttemplate/"+hosttemplateId+".json?angular=true",{}).then(function(result){$scope.hosttemplate=result.data.hosttemplate;setValuesFromHosttemplate()});setTimeout(function(){$scope.init=!1},500)};$scope.setPriority=function(priority){$scope.post.Host.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Host.customvariables.push({objecttype_id:256,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Host.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.runDnsLookup=function(lookupByHostname){$scope.data.dnsHostnameNotFound=!1;$scope.data.dnsAddressNotFound=!1;if($scope.data.dnsLookUp===!1){return}
var data={hostname:null,address:null};if(lookupByHostname){if($scope.post.Host.name==''){return}
data.hostname=$scope.post.Host.name}else{if($scope.post.Host.address==''){return}
data.address=$scope.post.Host.address}
$http.post("/hosts/runDnsLookup.json?angular=true",data).then(function(result){if(lookupByHostname){var address=result.data.result.address;if(address===null){$scope.data.dnsHostnameNotFound=!0}else{$scope.data.dnsHostnameNotFound=!1;$scope.post.Host.address=address;highlight($('#HostAddress'))}}else{var hostname=result.data.result.hostname;if(hostname===null){$scope.data.dnsAddressNotFound=!0}else{$scope.data.dnsAddressNotFound=!1;$scope.post.Host.name=hostname;highlight($('#HostName'))}}},function errorCallback(result){NotyService.genericError({message:'Error while running DNS lookup'})})};$scope.restoreTemplateTags=function(){$scope.post.Host.tags=$scope.hosttemplate.Hosttemplate.tags;$('#HostTagsInput').tagsinput('removeAll');$('#HostTagsInput').tagsinput('add',$scope.hosttemplate.Hosttemplate.tags)};$scope.submit=function(redirectState){$http.post("/hosts/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('HostsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){if(typeof redirectState==="undefined"){RedirectService.redirectWithFallback('HostsNotMonitored')}else{$state.go(redirectState,{hostId:result.data.id}).then(function(){NotyService.scrollTop()})}}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadContainers();$scope.loadCommands();jQuery(function(){$('.tagsinput').tagsinput()});$scope.$watch('post.Host.container_id',function(){if($scope.init){return}
$scope.loadElements();$scope.loadParentHosts('')},!0);$scope.$watch('post.Host.hosttemplate_id',function(){if($scope.init){return}
$scope.init=!0;$scope.loadHosttemplate()},!0);$scope.$watch('post.Host.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0);$scope.$watch('data.dnsLookUp',function(){if($scope.init){return}
if($scope.data.dnsLookUp===!1){$scope.data.dnsHostnameNotFound=!1;$scope.data.dnsAddressNotFound=!1}
LocalStorageService.setItem('HostsDnsLookUpEnabled',$scope.data.dnsLookUp)},!0)});angular.module('openITCOCKPIT').controller('DeletedHostsIndexController',function($scope,$http,$httpParamSerializer,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','DeletedHosts.created'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={DeletedHost:{name:QueryStringService.getValue('filter[DeletedHost.name]','')}}};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[DeletedHosts.name]':$scope.filter.DeletedHost.name};$http.get("/deletedHosts/index.json",{params:params}).then(function(result){$scope.hosts=result.data.deletedHosts;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('HostsBrowserController',function($scope,$rootScope,$http,QueryStringService,$stateParams,$state,SortService,$interval,StatusHelperService){$scope.id=$stateParams.id;$scope.activeTab='active';SortService.setSort('Servicestatus.current_state');SortService.setDirection('desc');$scope.currentPage=1;$scope.selectedTab='tab1';$scope.deleteUrl='/services/delete/';$scope.deactivateUrl='/services/deactivate/';$scope.activateUrl='/services/enable/';$scope.parentHostProblems={};$scope.hasParentHostProblems=!1;$scope.showFlashSuccess=!1;$scope.canSubmitExternalCommands=!1;$scope.tags=[];$scope.pingResult=[];$scope.fakeServicestatus={Servicestatus:{currentState:5}};$scope.activeServiceFilter={Servicestatus:{current_state:{ok:!1,warning:!1,critical:!1,unknown:!1},output:''},Service:{name:QueryStringService.getValue('filter[Service.servicename]','')}};$scope.init=!0;$scope.hostStatusTextClass='txt-primary';$scope.visTimeline=null;$scope.visTimelineInit=!0;$scope.visTimelineStart=-1;$scope.visTimelineEnd=-1;$scope.visTimeout=null;$scope.visChangeTimeout=null;$scope.showTimelineTab=!1;$scope.timelineIsLoading=!1;$scope.failureDurationInPercent=null;$scope.lastLoadDate=Date.now();$scope.selectedGrafanaTimerange='now-3h';$scope.selectedGrafanaAutorefresh='60s';var graphStart=0;var graphEnd=0;$scope.showFlashMsg=function(){$scope.showFlashSuccess=!0;$scope.autoRefreshCounter=5;var interval=$interval(function(){$scope.autoRefreshCounter--;if($scope.autoRefreshCounter===0){$scope.loadHost();$interval.cancel(interval);$scope.showFlashSuccess=!1}},1000)};$scope.hostBrowserMenuReschedulingCallback=function(){$scope.rescheduleHost($scope.getObjectsForExternalCommand())};$scope.loadHost=function(){$scope.lastLoadDate=Date.now();$http.get("/hosts/browser/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.mergedHost=result.data.mergedHost;$scope.mergedHost.Host.disabled=parseInt($scope.mergedHost.Host.disabled,10);$scope.tags=$scope.mergedHost.Host.tags.split(',');$scope.hoststatus=result.data.hoststatus;$scope.hoststateForIcon={Hoststatus:$scope.hoststatus};$scope.mainContainer=result.data.mainContainer;$scope.sharedContainers=result.data.sharedContainers;$scope.hostStatusTextClass=getHoststatusTextColor();$scope.parenthosts=result.data.parenthosts;$scope.parentHoststatus=result.data.parentHostStatus;buildParentHostProblems();$scope.acknowledgement=result.data.acknowledgement;$scope.downtime=result.data.downtime;$scope.canSubmitExternalCommands=result.data.canSubmitExternalCommands;$scope.priorities={1:!1,2:!1,3:!1,4:!1,5:!1};var priority=parseInt($scope.mergedHost.Host.priority,10);for(var i=1;i<=priority;i++){$scope.priorities[i]=!0}
$scope.load();$scope.loadGrafanaIframeUrl();if(typeof $scope.hostBrowserMenuConfig==="undefined"){$scope.hostBrowserMenuConfig={autoload:!0,hostId:$scope.mergedHost.Host.id,includeHoststatus:!0,showReschedulingButton:!0,rescheduleCallback:$scope.hostBrowserMenuReschedulingCallback,showBackButton:!1}}
$scope.init=!1})};$scope.loadTimezone=function(){$http.get("/angular/user_timezone.json",{params:{'angular':!0}}).then(function(result){$scope.timezone=result.data.timezone})};$scope.changeTab=function(tab){if(tab!==$scope.activeTab){$scope.services=[];$scope.activeTab=tab;SortService.setSort('servicename');SortService.setDirection('asc');$scope.currentPage=1;$scope.load()}};$scope.load=function(){switch($scope.activeTab){case 'active':$scope.loadActiveServices();break;case 'notMonitored':$scope.loadNotMonitoredServices();break;case 'disabled':$scope.loadDisabledServices();break}};$scope.loadActiveServices=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.id,'filter[servicename]':$scope.activeServiceFilter.Service.name,'filter[Servicestatus.output]':$scope.activeServiceFilter.Servicestatus.output,'filter[Servicestatus.current_state][]':$rootScope.currentStateForApi($scope.activeServiceFilter.Servicestatus.current_state),'filter[Service.disabled]':!1};$http.get("/services/index.json",{params:params}).then(function(result){$scope.services=[];$scope.services=result.data.all_services;$scope.paging=result.data.paging})};$scope.loadNotMonitoredServices=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.id};$http.get("/services/notMonitored.json",{params:params}).then(function(result){$scope.services=[];$scope.services=result.data.all_services;$scope.paging=result.data.paging})};$scope.loadDisabledServices=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.id};$http.get("/services/disabled.json",{params:params}).then(function(result){$scope.services=[];$scope.services=result.data.all_services;$scope.paging=result.data.paging})};$scope.getObjectForDelete=function(hostname,service){var object={};object[service.Service.id]=hostname+'/'+service.Service.servicename;return object};$scope.getObjectForDowntimeDelete=function(){var object={};object[$scope.downtime.internalDowntimeId]=$scope.mergedHost.Host.name;return object};$scope.getObjectsForExternalCommand=function(){return[$scope.mergedHost]};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.mouseenter=function($event,hostUuid,service){$scope.isLoadingGraph=!0;var offset={top:$event.relatedTarget.offsetTop+40,left:$event.relatedTarget.offsetLeft+40};offset.top+=$event.relatedTarget.offsetParent.offsetTop;var currentScrollPosition=$(window).scrollTop();var margin=15;var $popupGraphContainer=$('#serviceGraphContainer');if((offset.top-currentScrollPosition+margin+$popupGraphContainer.height())>$(window).innerHeight()){$popupGraphContainer.css({'top':parseInt(offset.top-$popupGraphContainer.height()-margin+10),'left':parseInt(offset.left+margin),'padding':'6px'})}else{$popupGraphContainer.css({'top':parseInt(offset.top+margin),'left':parseInt(offset.left+margin),'padding':'6px'})}
$popupGraphContainer.show();loadGraph(hostUuid,service)};$scope.mouseleave=function(){$('#serviceGraphContainer').hide();$('#serviceGraphFlot').html('')};var loadGraph=function(hostUuid,service){var serverTime=new Date($scope.timezone.server_time);graphEnd=Math.floor(serverTime.getTime()/1000);graphStart=graphEnd-(3600*4);$http.get('/Graphgenerators/getPerfdataByUuid.json',{params:{angular:!0,host_uuid:hostUuid,service_uuid:service.Service.uuid,start:graphStart,end:graphEnd,jsTimestamp:1}}).then(function(result){$scope.isLoadingGraph=!1;renderGraph(result.data.performance_data)})};var renderGraph=function(performance_data){var graph_data=[];for(var dsCount in performance_data){graph_data[dsCount]=[];for(var timestamp in performance_data[dsCount].data){var frontEndTimestamp=(parseInt(timestamp,10)+($scope.timezone.user_time_to_server_offset*1000));graph_data[dsCount].push([frontEndTimestamp,performance_data[dsCount].data[timestamp]])}}
var GraphDefaultsObj=new GraphDefaults();var color_amount=performance_data.length<3?3:performance_data.length;var colors=GraphDefaultsObj.getColors(color_amount);var options=GraphDefaultsObj.getDefaultOptions();options.colors=colors.border;options.xaxis.tickFormatter=function(val,axis){var fooJS=new Date(val);var fixTime=function(value){if(value<10){return'0'+value}
return value};return fixTime(fooJS.getDate())+'.'+fixTime(fooJS.getMonth()+1)+'.'+fooJS.getFullYear()+' '+fixTime(fooJS.getHours())+':'+fixTime(fooJS.getMinutes())};options.xaxis.min=(graphStart+$scope.timezone.user_time_to_server_offset)*1000;options.xaxis.max=(graphEnd+$scope.timezone.user_time_to_server_offset)*1000;self.plot=$.plot('#serviceGraphFlot',graph_data,options)};$scope.stateIsUp=function(){return parseInt($scope.hoststatus.currentState,10)===0};$scope.stateIsDown=function(){return parseInt($scope.hoststatus.currentState,10)===1};$scope.stateIsUnreachable=function(){return parseInt($scope.hoststatus.currentState,10)===2};$scope.stateIsNotInMonitoring=function(){return!$scope.hoststatus.isInMonitoring};var getHoststatusTextColor=function(){return StatusHelperService.getHoststatusTextColor($scope.hoststatus.currentState)};var buildParentHostProblems=function(){$scope.hasParentHostProblems=!1;for(var key in $scope.parenthosts){var parentHostUuid=$scope.parenthosts[key].uuid;if($scope.parentHoststatus.hasOwnProperty(parentHostUuid)){if($scope.parentHoststatus[parentHostUuid].currentState>0){$scope.parentHostProblems[parentHostUuid]={id:$scope.parenthosts[key].id,name:$scope.parenthosts[key].name,state:$scope.parentHoststatus[parentHostUuid].currentState};$scope.hasParentHostProblems=!0}}}};$scope.loadTimelineData=function(_properties){var properties=_properties||{};var start=properties.start||-1;var end=properties.end||-1;$scope.timelineIsLoading=!0;if(start>$scope.visTimelineStart&&end<$scope.visTimelineEnd){$scope.timelineIsLoading=!1;return}
$http.get("/hosts/timeline/"+$scope.id+".json",{params:{'angular':!0,start:start,end:end}}).then(function(result){var timelinedata={items:new vis.DataSet(result.data.statehistory),groups:new vis.DataSet(result.data.groups)};timelinedata.items.add(result.data.downtimes);timelinedata.items.add(result.data.notifications);timelinedata.items.add(result.data.acknowledgements);timelinedata.items.add(result.data.timeranges);$scope.visTimelineStart=result.data.start;$scope.visTimelineEnd=result.data.end;var options={orientation:"both",start:new Date(result.data.start*1000),end:new Date(result.data.end*1000),min:new Date(new Date(result.data.start*1000).setFullYear(new Date(result.data.start*1000).getFullYear()-1)),max:new Date(result.data.end*1000),zoomMin:1000*10*60*5,format:{minorLabels:{millisecond:'SSS',second:'s',minute:'H:mm',hour:'H:mm',weekday:'ddd D',day:'D',week:'w',month:'MMM',year:'YYYY'},majorLabels:{millisecond:'H:mm:ss',second:'D MMMM H:mm',minute:'DD.MM.YYYY',hour:'DD.MM.YYYY',weekday:'MMMM YYYY',day:'MMMM YYYY',week:'MMMM YYYY',month:'YYYY',year:''}}};renderTimeline(timelinedata,options);$scope.timelineIsLoading=!1})};var renderTimeline=function(timelinedata,options){var container=document.getElementById('visualization');if($scope.visTimeline===null){$scope.visTimeline=new vis.Timeline(container,timelinedata.items,timelinedata.groups,options);$scope.visTimeline.on('rangechanged',function(properties){if($scope.visTimelineInit){$scope.visTimelineInit=!1;return}
if($scope.timelineIsLoading){console.warn('Timeline already loading date. Waiting for server result before sending next request.');return}
if($scope.visTimeout){clearTimeout($scope.visTimeout)}
$scope.visTimeout=setTimeout(function(){$scope.visTimeout=null;$scope.loadTimelineData({start:parseInt(properties.start.getTime()/1000,10),end:parseInt(properties.end.getTime()/1000,10)})},500)})}else{$scope.visTimeline.setItems(timelinedata.items)}
$scope.visTimeline.on('changed',function(){if($scope.visTimelineInit){return}
if($scope.visChangeTimeout){clearTimeout($scope.visChangeTimeout)}
$scope.visChangeTimeout=setTimeout(function(){$scope.visChangeTimeout=null;var timeRange=$scope.visTimeline.getWindow();var visTimelineStartAsTimestamp=new Date(timeRange.start).getTime();var visTimelineEndAsTimestamp=new Date(timeRange.end).getTime();var criticalItems=$scope.visTimeline.itemsData.get({fields:['start','end','className','group'],type:{start:'Date',end:'Date'},filter:function(item){return(item.group==5&&(item.className==='bg-down'||item.className==='bg-down-soft')&&$scope.CheckIfItemInRange(visTimelineStartAsTimestamp,visTimelineEndAsTimestamp,item))}});$scope.failureDurationInPercent=$scope.calculateFailures((visTimelineEndAsTimestamp-visTimelineStartAsTimestamp),criticalItems,visTimelineStartAsTimestamp,visTimelineEndAsTimestamp);$scope.$apply()},500)})};$scope.showTimeline=function(){$scope.showTimelineTab=!0;$scope.loadTimelineData()};$scope.hideTimeline=function(){$scope.showTimelineTab=!1};$scope.CheckIfItemInRange=function(start,end,item){var itemStart=item.start.getTime();var itemEnd=item.end.getTime();if(itemEnd<start){return!1}else if(itemStart>end){return!1}else if(itemStart>=start&&itemEnd<=end){return!0}else if(itemStart>=start&&itemEnd>end){return!0}else if(itemStart<start&&itemEnd>start&&itemEnd<end){return!0}else if(itemStart<start&&itemEnd>=end){return!0}
return!1}
$scope.calculateFailures=function(totalTime,criticalItems,start,end){var failuresDuration=0;criticalItems.forEach(function(criticalItem){var itemStart=criticalItem.start.getTime();var itemEnd=criticalItem.end.getTime();failuresDuration+=((itemEnd>end)?end:itemEnd)-((itemStart<start)?start:itemStart)});return(failuresDuration/totalTime*100).toFixed(3)};$scope.loadGrafanaIframeUrl=function(){$http.get("/hosts/getGrafanaIframeUrlForDatepicker/.json",{params:{'uuid':$scope.mergedHost.Host.uuid,'angular':!0,'from':$scope.selectedGrafanaTimerange,'refresh':$scope.selectedGrafanaAutorefresh}}).then(function(result){$scope.GrafanaDashboardExists=result.data.GrafanaDashboardExists;$scope.GrafanaIframeUrl=result.data.iframeUrl})};$scope.grafanaTimepickerCallback=function(selectedTimerange,selectedAutorefresh){$scope.selectedGrafanaTimerange=selectedTimerange;$scope.selectedGrafanaAutorefresh=selectedAutorefresh;$scope.loadGrafanaIframeUrl()};$scope.loadHost();$scope.loadTimezone();SortService.setCallback($scope.load);$scope.$watch('activeServiceFilter',function(){if($scope.init){return}
$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('BrowsersIndexController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,MassChangeService,QueryStringService,$state){SortService.setSort(QueryStringService.getValue('sort','Hoststatus.current_state'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.containerId=parseInt(QueryStringService.getValue('containerId',1),10);$scope.containers=[];$scope.data={containerFilter:''};$scope.recursiveBrowser=!1;var defaultFilter=function(){$scope.filter={Hoststatus:{current_state:QueryStringService.hoststate(),acknowledged:QueryStringService.getValue('has_been_acknowledged',!1)==='1',not_acknowledged:QueryStringService.getValue('has_not_been_acknowledged',!1)==='1',in_downtime:QueryStringService.getValue('in_downtime',!1)==='1',not_in_downtime:QueryStringService.getValue('not_in_downtime',!1)==='1',output:''},Host:{name:QueryStringService.getValue('filter[Host.name]',''),keywords:'',address:QueryStringService.getValue('filter[Host.address]',''),satellite_id:[]}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hosts/delete/';$scope.deactivateUrl='/hosts/deactivate/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/browsers/index/"+$scope.containerId+".json",{params:{angular:!0}}).then(function(result){$scope.init=!1;$scope.containersFromApi=result.data.containers;$scope.containers=$scope.containersFromApi;$scope.recursiveBrowser=result.data.recursiveBrowser;$scope.breadcrumbs=result.data.breadcrumbs;$scope.loadHosts();$scope.loadStatusCounts()})};$scope.loadHosts=function(){var hasBeenAcknowledged='';var inDowntime='';if($scope.filter.Hoststatus.acknowledged^$scope.filter.Hoststatus.not_acknowledged){hasBeenAcknowledged=$scope.filter.Hoststatus.acknowledged===!0}
if($scope.filter.Hoststatus.in_downtime^$scope.filter.Hoststatus.not_in_downtime){inDowntime=$scope.filter.Hoststatus.in_downtime===!0}
var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Host.name]':$scope.filter.Host.name,'filter[Hoststatus.output]':$scope.filter.Hoststatus.output,'filter[Hoststatus.current_state][]':$rootScope.currentStateForApi($scope.filter.Hoststatus.current_state),'filter[Host.keywords][]':$scope.filter.Host.keywords.split(','),'filter[Hoststatus.problem_has_been_acknowledged]':hasBeenAcknowledged,'filter[Hoststatus.scheduled_downtime_depth]':inDowntime,'filter[Host.address]':$scope.filter.Host.address,'filter[Host.satellite_id][]':$scope.filter.Host.satellite_id,'BrowserContainerId':$scope.containerId};$http.get("/hosts/index.json",{params:params}).then(function(result){$scope.hosts=result.data.all_hosts;$scope.paging=result.data.paging},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadStatusCounts=function(){$http.get("/angular/statuscount.json",{params:{angular:!0,'containerIds[]':$scope.containerId,'recursive':$scope.recursiveBrowser}}).then(function(result){$scope.hoststatusCountHash=result.data.hoststatusCount;$scope.servicestatusCountHash=result.data.servicestatusCount;$scope.hoststatusSum=result.data.hoststatusSum;$scope.servicestatusSum=result.data.servicestatusSum;$scope.hoststatusCountPercentage=result.data.hoststatusCountPercentage;$scope.servicestatusCountPercentage=result.data.servicestatusCountPercentage})};$scope.changeContainerId=function(containerId){$scope.containerId=containerId;$scope.load()};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hosts){for(var key in $scope.hosts){if($scope.hosts[key].Host.allow_edit){var id=$scope.hosts[key].Host.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host){var object={};object[host.Host.id]=host.Host.hostname;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hosts){for(var id in selectedObjects){if(id==$scope.hosts[key].Host.id){objects[id]=$scope.hosts[key].Host.hostname}}}
return objects};$scope.getObjectsForExternalCommand=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hosts){for(var id in selectedObjects){if(id==$scope.hosts[key].Host.id){objects[id]=$scope.hosts[key]}}}
return objects};$scope.linkForCopy=function(){var baseUrl='/hosts/copy/';return buildUrl(baseUrl)};$scope.linkForEditDetails=function(){var baseUrl='/hosts/edit_details/';return buildUrl(baseUrl)};var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0);$scope.$watch('data.containerFilter',function(){var searchString=$scope.data.containerFilter.toLowerCase();if(searchString===''){$scope.containers=$scope.containersFromApi;return!0}
$scope.containers=[];for(var key in $scope.containersFromApi){var containerName=$scope.containersFromApi[key].value.toLowerCase();if(containerName.match(searchString)){$scope.containers.push($scope.containersFromApi[key])}}},!0)});angular.module('openITCOCKPIT').controller('HostsIndexController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,MassChangeService,QueryStringService,$stateParams){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Hoststatus.current_state'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.useScroll=!0;filterHostname=null;if(typeof $stateParams.filterHostname!=="undefined"){var filterHostname=$stateParams.filterHostname}
var defaultFilter=function(){$scope.filter={Hoststatus:{current_state:QueryStringService.hoststate(),acknowledged:QueryStringService.getValue('has_been_acknowledged',!1)==='1',not_acknowledged:QueryStringService.getValue('has_not_been_acknowledged',!1)==='1',in_downtime:QueryStringService.getValue('in_downtime',!1)==='1',not_in_downtime:QueryStringService.getValue('not_in_downtime',!1)==='1',output:''},Host:{id:QueryStringService.getIds('filter[Hosts.id][]',[]),name:(filterHostname)?filterHostname:'',description:'',keywords:'',not_keywords:'',address:QueryStringService.getValue('filter[Hosts.address]',''),satellite_id:[]}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hosts/delete/';$scope.deactivateUrl='/hosts/deactivate/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){lastHostUuid=null;var hasBeenAcknowledged='';var inDowntime='';if($scope.filter.Hoststatus.acknowledged^$scope.filter.Hoststatus.not_acknowledged){hasBeenAcknowledged=$scope.filter.Hoststatus.acknowledged===!0}
if($scope.filter.Hoststatus.in_downtime^$scope.filter.Hoststatus.not_in_downtime){inDowntime=$scope.filter.Hoststatus.in_downtime===!0}
var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id][]':$scope.filter.Host.id,'filter[Hosts.name]':$scope.filter.Host.name,'filter[Hosts.description]':$scope.filter.Host.description,'filter[Hoststatus.output]':$scope.filter.Hoststatus.output,'filter[Hoststatus.current_state][]':$rootScope.currentStateForApi($scope.filter.Hoststatus.current_state),'filter[Hosts.keywords][]':$scope.filter.Host.keywords.split(','),'filter[Hosts.not_keywords][]':$scope.filter.Host.not_keywords.split(','),'filter[Hoststatus.problem_has_been_acknowledged]':hasBeenAcknowledged,'filter[Hoststatus.scheduled_downtime_depth]':inDowntime,'filter[Hosts.address]':$scope.filter.Host.address,'filter[Hosts.satellite_id][]':$scope.filter.Host.satellite_id};if(QueryStringService.hasValue('BrowserContainerId')){params.BrowserContainerId=QueryStringService.getValue('BrowserContainerId')}
$http.get("/hosts/index.json",{params:params}).then(function(result){$scope.hosts=result.data.all_hosts;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hosts){for(var key in $scope.hosts){if($scope.hosts[key].Host.allow_edit){var id=$scope.hosts[key].Host.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host){var object={};object[host.Host.id]=host.Host.hostname;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hosts){for(var id in selectedObjects){if(id==$scope.hosts[key].Host.id){objects[id]=$scope.hosts[key].Host.hostname}}}
return objects};$scope.getObjectsForExternalCommand=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hosts){for(var id in selectedObjects){if(id==$scope.hosts[key].Host.id){objects[id]=$scope.hosts[key]}}}
return objects};$scope.linkForCopy=function(){var baseUrl='/hosts/copy/';return buildUrl(baseUrl)};$scope.linkForEditDetails=function(){var baseUrl='/hosts/edit_details/';return buildUrl(baseUrl)};var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.linkForPdf=function(){var baseUrl='/hosts/listToPdf.pdf?';var hasBeenAcknowledged='';var inDowntime='';if($scope.filter.Hoststatus.acknowledged^$scope.filter.Hoststatus.not_acknowledged){hasBeenAcknowledged=$scope.filter.Hoststatus.acknowledged===!0}
if($scope.filter.Hoststatus.in_downtime^$scope.filter.Hoststatus.not_in_downtime){inDowntime=$scope.filter.Hoststatus.in_downtime===!0}
var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Host.name,'filter[Hosts.description]':$scope.filter.Host.description,'filter[Hoststatus.output]':$scope.filter.Hoststatus.output,'filter[Hoststatus.current_state][]':$rootScope.currentStateForApi($scope.filter.Hoststatus.current_state),'filter[Hosts.keywords][]':$scope.filter.Host.keywords.split(','),'filter[Hosts.not_keywords][]':$scope.filter.Host.not_keywords.split(','),'filter[Hoststatus.problem_has_been_acknowledged]':hasBeenAcknowledged,'filter[Hoststatus.scheduled_downtime_depth]':inDowntime,'filter[Hosts.address]':$scope.filter.Host.address,'filter[Hosts.satellite_id][]':$scope.filter.Host.satellite_id};if(QueryStringService.hasValue('BrowserContainerId')){params.BrowserContainerId=QueryStringService.getValue('BrowserContainerId')}
return baseUrl+$httpParamSerializer(params)};$scope.problemsOnly=function(){defaultFilter();$scope.filter.Hoststatus.not_in_downtime=!0;$scope.filter.Hoststatus.not_acknowledged=!0;$scope.filter.Hoststatus.current_state={up:!1,down:!0,unreachable:!0};SortService.setSort('Hoststatus.last_state_change');SortService.setDirection('desc')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);jQuery(function(){$("input[data-role=tagsinput]").tagsinput()});$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('HostsDisabledController',function($scope,$http,$httpParamSerializer,SortService,MassChangeService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','Hosts.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;var defaultFilter=function(){$scope.filter={Host:{name:QueryStringService.getValue('filter[Host.name]',''),description:QueryStringService.getValue('filter[Host.description]',''),address:'',satellite_id:[]}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hosts/delete/';$scope.activateUrl='/hosts/enable/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Host.name,'filter[Hosts.description]':$scope.filter.Host.description,'filter[Hosts.address]':$scope.filter.Host.address,'filter[Hosts.satellite_id][]':$scope.filter.Host.satellite_id};$http.get("/hosts/disabled.json",{params:params}).then(function(result){$scope.hosts=result.data.all_hosts;$scope.paging=result.data.paging;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hosts){for(var key in $scope.hosts){if($scope.hosts[key].Host.allow_edit){var id=$scope.hosts[key].Host.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host){var object={};object[host.Host.id]=host.Host.hostname;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hosts){for(var id in selectedObjects){if(id==$scope.hosts[key].Host.id){objects[id]=$scope.hosts[key].Host.hostname}}}
return objects};var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('SystemfailuresIndexController',function($scope,$http,SortService,QueryStringService,MassChangeService){SortService.setSort(QueryStringService.getValue('sort','Systemfailures.start_time'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Systemfailures:{comment:'',},full_name:''}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/systemfailures/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Systemfailures.comment]':$scope.filter.Systemfailures.comment,'filter[full_name]':$scope.filter.full_name};$http.get("/systemfailures/index.json",{params:params}).then(function(result){$scope.systemfailures=result.data.all_systemfailures;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.systemfailures){for(var key in $scope.systemfailures){var id=$scope.systemfailures[key].id;$scope.massChange[id]=!0}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(systemfailure){var object={};object[systemfailure.id]='[ '+systemfailure.start_time+' ] '+systemfailure.comment;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.systemfailures){for(var id in selectedObjects){if(id==$scope.systemfailures[key].id){objects[id]='[ '+$scope.systemfailures[key].start_time+' ] '+$scope.systemfailures[key].comment}}}
return objects};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('SystemfailuresAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){var now=new Date();$scope.post={Systemfailure:{from_date:'',from_time:'00:00',to_date:'',to_time:'00:00',comment:''}}};clearForm();$scope.init=!0;$scope.submit=function(){$http.post("/systemfailures/add.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('SystemfailuresIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};jQuery(function(){$('#SystemfailureFromDate').datepicker({dateFormat:'dd.mm.yy'});$('#SystemfailureToDate').datepicker({dateFormat:'dd.mm.yy'})})});angular.module('openITCOCKPIT').controller('DocumentationsViewController',function($scope,$sce,$http,QueryStringService,MassChangeService,NotyService,$stateParams,$state,BBParserService){$scope.uuid=$stateParams.uuid;$scope.type=$stateParams.type;$scope.docu={hyperlink:"",hyperlinkDescription:"",displayView:!0};$scope.load=function(){$http.get("/documentations/view/"+$scope.uuid+"/"+$scope.type+".json",{params:{'angular':!0}}).then(function(result){$scope.docuExists=result.data.docuExists;$scope.html=BBParserService.parse(result.data.bbcode);$scope.bbcode=result.data.bbcode;$scope.lastUpdate=result.data.lastUpdate;$scope.allowEdit=result.data.allowEdit;$scope.objectName=result.data.objectName;if($scope.type==='host'){if(typeof $scope.hostBrowserMenuConfig==="undefined"){$scope.hostBrowserMenuConfig={autoload:!0,hostId:result.data.objectId,includeHoststatus:!0}}}
if($scope.type==='service'){if(typeof $scope.serviceBrowserMenuConfig==="undefined"){$scope.serviceBrowserMenuConfig={autoload:!0,serviceId:result.data.objectId,includeServicestatus:!0}}}},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.saveText=function(action){$scope.bbcode=$('#docuText').val();$http.post("/documentations/view/"+$scope.uuid+"/"+$scope.type+".json?angular=true",{content:$scope.bbcode}).then(function(result){$scope.errors={};$scope.showView();NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.showView=function(){$scope.load();$scope.docu.displayView=!0};$scope.showEdit=function(){$scope.docu.displayView=!1};$scope.load();$("[wysiwyg='true']").click(function(){var $textarea=$('#docuText');var task=$(this).attr('task');switch(task){case 'bold':$textarea.surroundSelectedText('[b]','[/b]');break;case 'italic':$textarea.surroundSelectedText('[i]','[/i]');break;case 'underline':$textarea.surroundSelectedText('[u]','[/u]');break;case 'left':$textarea.surroundSelectedText('[left]','[/left]');break;case 'center':$textarea.surroundSelectedText('[center]','[/center]');break;case 'right':$textarea.surroundSelectedText('[right]','[/right]');break;case 'justify':$textarea.surroundSelectedText('[justify]','[/justify]');break}});$("[select-color='true']").click(function(){var color=$(this).attr('color');var $textarea=$('#docuText');$textarea.surroundSelectedText("[color='"+color+"']",'[/color]')});$("[select-fsize='true']").click(function(){var fontSize=$(this).attr('fsize');var $textarea=$('#docuText');$textarea.surroundSelectedText("[text='"+fontSize+"']","[/text]")});$scope.prepareHyperlinkSelection=function(){var $textarea=$('#docuText');var selection=$textarea.getSelection();if(selection.length>0){$scope.docu.hyperlinkDescription=selection.text}};$scope.insertWysiwygHyperlink=function(){var $textarea=$('#docuText');var selection=$textarea.getSelection();var newTab=$('#modalLinkNewTab').is(':checked')?" tab":"";if(selection.length>0){$textarea.surroundSelectedText("[url='"+$scope.docu.hyperlink+"'"+newTab+"]","[/url]")}else{$textarea.insertText("[url='"+$scope.docu.hyperlink+"'"+newTab+"]"+$scope.docu.hyperlinkDescription+'[/url]',selection.start,"collapseToEnd")}
$scope.docu.hyperlink="";$scope.docu.hyperlinkDescription="";$scope.addLink=!1}});angular.module('openITCOCKPIT').controller('DocumentationsWikiController',function($scope,$sce,$http,QueryStringService,BBParserService,$stateParams,$state,NotyService){$scope.urlDocumentation=$stateParams.documentation;$scope.load=function(){$http.get("/documentations/wiki.json",{params:{'angular':!0}}).then(function(result){$scope.documentations=result.data.documentations},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.showDocumentation=function(categoryName,documentationKey){$http.post("/documentations/wiki.json?angular=true",{category:categoryName,documentation:documentationKey}).then(function(result){$scope.currentDocumentation=result.data.documentation;$scope.currentDocumentationHtml=result.data.html;$('#angularDocumentationContentModal').modal('show')},function errorCallback(result){NotyService.genericError({message:'Error while loading documentation'});$('#angularDocumentationContentModal').modal('hide')})};$scope.load();if($scope.urlDocumentation){var urlDocumentation=$scope.urlDocumentation.split(":");if(urlDocumentation.length===2){$scope.showDocumentation(urlDocumentation[0],urlDocumentation[1])}}});angular.module('openITCOCKPIT').controller('ContactsCopyController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){var ids=$stateParams.ids.split(',');if(ids.length===0||ids[0]===''){RedirectService.redirectWithFallback('ContactsIndex');return}
$scope.load=function(){$http.get("/contacts/copy/"+ids.join('/')+".json",{params:{'angular':!0,}}).then(function(result){$scope.sourceContacts=[];for(var key in result.data.contacts){$scope.sourceContacts.push({Source:{id:result.data.contacts[key].Contact.id,name:result.data.contacts[key].Contact.name,},Contact:{name:result.data.contacts[key].Contact.name,description:result.data.contacts[key].Contact.description,email:result.data.contacts[key].Contact.email,phone:result.data.contacts[key].Contact.phone,}})}
$scope.init=!1})};$scope.copy=function(){$http.post("/contacts/copy/.json?angular=true",{data:$scope.sourceContacts}).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('ContactsIndex')},function errorCallback(result){NotyService.genericError();$scope.sourceContacts=result.data.result})};$scope.load()});angular.module('openITCOCKPIT').controller('ContactsAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Contact:{name:'',description:'',email:'',host_notifications_enabled:1,service_notifications_enabled:1,notify_host_recovery:1,notify_host_down:1,notify_host_unreachable:1,notify_host_flapping:0,notify_host_downtime:0,notify_service_recovery:1,notify_service_warning:1,notify_service_critical:1,notify_service_unknown:1,notify_service_flapping:0,notify_service_downtime:0,host_push_notifications_enabled:0,service_push_notifications_enabled:0,containers:{_ids:[]},host_commands:{_ids:[]},service_commands:{_ids:[]},customvariables:[]}}};clearForm();$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/contacts/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/contacts/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.notificationCommands;$scope.hostPushComamndId=result.data.hostPushComamndId;$scope.servicePushComamndId=result.data.servicePushComamndId;$scope.init=!1})};$scope.loadUsers=function(){$http.post("/contacts/loadUsersByContainerId.json?angular=true",{containerIds:$scope.post.Contact.containers._ids}).then(function(result){$scope.users=result.data.users})};$scope.loadTimeperiods=function(){$http.post("/contacts/loadTimeperiods.json?angular=true",{container_ids:$scope.post.Contact.containers._ids}).then(function(result){$scope.timeperiods=result.data.timeperiods})};$scope.addMacro=function(){$scope.post.Contact.customvariables.push({objecttype_id:32,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Contact.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.submit=function(){$http.post("/contacts/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('ContactsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('ContactsIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};var addHostBrowserPushCommand=function(){var addCommand=!0;for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){addCommand=!1}}
if(addCommand){$scope.post.Contact.host_commands._ids.push($scope.hostPushComamndId)}};var addServiceBrowserPushCommand=function(){var addCommand=!0;for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){addCommand=!1}}
if(addCommand){$scope.post.Contact.service_commands._ids.push($scope.servicePushComamndId)}};$scope.loadContainers();$scope.loadCommands();jQuery(function(){jQuery("[rel=tooltip]").tooltip()});$scope.$watch('post.Contact.containers._ids',function(){if($scope.init){return}
$scope.loadUsers();$scope.loadTimeperiods()},!0);$scope.$watch('post.Contact.host_push_notifications_enabled',function(){if($scope.init){return}
if($scope.post.Contact.host_push_notifications_enabled===1){addHostBrowserPushCommand()}
if($scope.post.Contact.host_push_notifications_enabled===0){for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){$scope.post.Contact.host_commands._ids.splice(i,1);return}}}});$scope.$watch('post.Contact.service_push_notifications_enabled',function(){if($scope.init){return}
if($scope.post.Contact.service_push_notifications_enabled===1){addServiceBrowserPushCommand()}
if($scope.post.Contact.service_push_notifications_enabled===0){for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){$scope.post.Contact.service_commands._ids.splice(i,1);return}}}});$scope.$watch('post.Contact.host_commands._ids',function(){if($scope.init){return}
var pushCommandSelected=!1;for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){$scope.post.Contact.host_push_notifications_enabled=1;pushCommandSelected=!0}}
if(pushCommandSelected===!1){$scope.post.Contact.host_push_notifications_enabled=0}});$scope.$watch('post.Contact.service_commands._ids',function(){if($scope.init){return}
var pushCommandSelected=!1;for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){$scope.post.Contact.service_push_notifications_enabled=1;pushCommandSelected=!0;return}}
if(pushCommandSelected===!1){$scope.post.Contact.service_push_notifications_enabled=0}})});angular.module('openITCOCKPIT').controller('ContactsEditController',function($scope,$http,SudoService,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.init=!0;$scope.data={areContainersChangeable:!1};$scope.loadContainers=function(){var params={'angular':!0};$http.get("/contacts/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadContact=function(){var params={'angular':!0};$http.get("/contacts/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post=result.data.contact;$scope.init=!1;$scope.data.areContainersChangeable=result.data.areContainersChangeable;$scope.loadCommands()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/contacts/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.notificationCommands;$scope.hostPushComamndId=result.data.hostPushComamndId;$scope.servicePushComamndId=result.data.servicePushComamndId;$scope.init=!1})};$scope.loadUsers=function(){$http.post("/contacts/loadUsersByContainerId.json?angular=true",{containerIds:$scope.post.Contact.containers._ids}).then(function(result){$scope.users=result.data.users})};$scope.loadTimeperiods=function(){$http.post("/contacts/loadTimeperiods.json?angular=true",{container_ids:$scope.post.Contact.containers._ids}).then(function(result){$scope.timeperiods=result.data.timeperiods})};$scope.addMacro=function(){$scope.post.Contact.customvariables.push({objecttype_id:32,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Contact.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.submit=function(){$http.post("/contacts/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('ContactsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ContactsIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};var addHostBrowserPushCommand=function(){var addCommand=!0;for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){addCommand=!1}}
if(addCommand){$scope.post.Contact.host_commands._ids.push($scope.hostPushComamndId)}};var addServiceBrowserPushCommand=function(){var addCommand=!0;for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){addCommand=!1}}
if(addCommand){$scope.post.Contact.service_commands._ids.push($scope.servicePushComamndId)}};$scope.loadContainers();$scope.loadContact();jQuery(function(){jQuery("[rel=tooltip]").tooltip()});$scope.$watch('post.Contact.containers._ids',function(){if($scope.init){return}
$scope.loadUsers();$scope.loadTimeperiods()},!0);$scope.$watch('post.Contact.host_push_notifications_enabled',function(){if($scope.init){return}
if($scope.post.Contact.host_push_notifications_enabled===1){addHostBrowserPushCommand()}
if($scope.post.Contact.host_push_notifications_enabled===0){for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){$scope.post.Contact.host_commands._ids.splice(i,1);return}}}});$scope.$watch('post.Contact.service_push_notifications_enabled',function(){if($scope.init){return}
if($scope.post.Contact.service_push_notifications_enabled===1){addServiceBrowserPushCommand()}
if($scope.post.Contact.service_push_notifications_enabled===0){for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){$scope.post.Contact.service_commands._ids.splice(i,1);return}}}});$scope.$watch('post.Contact.host_commands._ids',function(){if($scope.init){return}
var pushCommandSelected=!1;for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){$scope.post.Contact.host_push_notifications_enabled=1;pushCommandSelected=!0}}
if(pushCommandSelected===!1){$scope.post.Contact.host_push_notifications_enabled=0}});$scope.$watch('post.Contact.service_commands._ids',function(){if($scope.init){return}
var pushCommandSelected=!1;for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){$scope.post.Contact.service_push_notifications_enabled=1;pushCommandSelected=!0;return}}
if(pushCommandSelected===!1){$scope.post.Contact.service_push_notifications_enabled=0}})});angular.module('openITCOCKPIT').controller('ContactsIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Contacts.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Contacts:{name:'',phone:'',email:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/contacts/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Contacts.name]':$scope.filter.Contacts.name,'filter[Contacts.phone]':$scope.filter.Contacts.phone,'filter[Contacts.email]':$scope.filter.Contacts.email};$http.get("/contacts/index.json",{params:params}).then(function(result){$scope.contacts=result.data.all_contacts;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.contacts){for(var key in $scope.contacts){if($scope.contacts[key].Contact.allow_edit===!0){var id=$scope.contacts[key].Contact.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(contact){var object={};object[contact.Contact.id]=contact.Contact.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.contacts){for(var id in selectedObjects){if(id==$scope.contacts[key].Contact.id){if($scope.contacts[key].Contact.allow_edit===!0){objects[id]=$scope.contacts[key].Contact.name}}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ContactsUsedByController',function($scope,$http,$stateParams,$state){$scope.id=$stateParams.id;$scope.total=0;$scope.load=function(){$http.get("/contacts/usedBy/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.objects=result.data.objects;$scope.total=result.data.total;$scope.contact=result.data.contact},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.load()});angular.module('openITCOCKPIT').controller('ContactsLdapController',function($scope,$http,SudoService,$state,NotyService,RedirectService){$scope.data={selectedSamAccountNameIndex:null,createAnother:!1};var clearForm=function(){$scope.data.selectedSamAccountNameIndex=null;$scope.post={Contact:{name:'',description:'',email:'',host_notifications_enabled:1,service_notifications_enabled:1,notify_host_recovery:1,notify_host_down:1,notify_host_unreachable:1,notify_host_flapping:0,notify_host_downtime:0,notify_service_recovery:1,notify_service_warning:1,notify_service_critical:1,notify_service_unknown:1,notify_service_flapping:0,notify_service_downtime:0,host_push_notifications_enabled:0,service_push_notifications_enabled:0,containers:{_ids:[]},host_commands:{_ids:[]},service_commands:{_ids:[]},customvariables:[]}}};clearForm();$scope.init=!0;$scope.loadLdapConfig=function(){var params={'angular':!0};$http.get("/angular/ldap_configuration.json",{params:params}).then(function(result){$scope.ldapConfig=result.data.ldapConfig})};$scope.loadContainers=function(){var params={'angular':!0};$http.get("/contacts/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/contacts/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.notificationCommands;$scope.hostPushComamndId=result.data.hostPushComamndId;$scope.servicePushComamndId=result.data.servicePushComamndId;$scope.init=!1})};$scope.loadUsers=function(){$http.post("/contacts/loadUsersByContainerId.json?angular=true",{containerIds:$scope.post.Contact.containers._ids}).then(function(result){$scope.users=result.data.users})};$scope.loadTimeperiods=function(){$http.post("/contacts/loadTimeperiods.json?angular=true",{container_ids:$scope.post.Contact.containers._ids}).then(function(result){$scope.timeperiods=result.data.timeperiods})};$scope.addMacro=function(){$scope.post.Contact.customvariables.push({objecttype_id:32,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Contact.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.submit=function(){$http.post("/contacts/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('ContactsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('ContactsIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadLdapUsersByString=function(searchString){$scope.data.selectedSamAccountNameIndex=null;$http.get("/contacts/loadLdapUserByString.json",{params:{'angular':!0,'samaccountname':searchString}}).then(function(result){$scope.ldapUsers=result.data.ldapUsers})};var addHostBrowserPushCommand=function(){var addCommand=!0;for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){addCommand=!1}}
if(addCommand){$scope.post.Contact.host_commands._ids.push($scope.hostPushComamndId)}};var addServiceBrowserPushCommand=function(){var addCommand=!0;for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){addCommand=!1}}
if(addCommand){$scope.post.Contact.service_commands._ids.push($scope.servicePushComamndId)}};$scope.loadContainers();$scope.loadLdapConfig();$scope.loadCommands();$scope.loadLdapUsersByString('');jQuery(function(){jQuery("[rel=tooltip]").tooltip()});$scope.$watch('post.Contact.containers._ids',function(){if($scope.init){return}
$scope.loadUsers();$scope.loadTimeperiods()},!0);$scope.$watch('post.Contact.host_push_notifications_enabled',function(){if($scope.init){return}
if($scope.post.Contact.host_push_notifications_enabled===1){addHostBrowserPushCommand()}
if($scope.post.Contact.host_push_notifications_enabled===0){for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){$scope.post.Contact.host_commands._ids.splice(i,1);return}}}});$scope.$watch('post.Contact.service_push_notifications_enabled',function(){if($scope.init){return}
if($scope.post.Contact.service_push_notifications_enabled===1){addServiceBrowserPushCommand()}
if($scope.post.Contact.service_push_notifications_enabled===0){for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){$scope.post.Contact.service_commands._ids.splice(i,1);return}}}});$scope.$watch('post.Contact.host_commands._ids',function(){if($scope.init){return}
var pushCommandSelected=!1;for(var i in $scope.post.Contact.host_commands._ids){if($scope.post.Contact.host_commands._ids[i]===$scope.hostPushComamndId){$scope.post.Contact.host_push_notifications_enabled=1;pushCommandSelected=!0}}
if(pushCommandSelected===!1){$scope.post.Contact.host_push_notifications_enabled=0}});$scope.$watch('post.Contact.service_commands._ids',function(){if($scope.init){return}
var pushCommandSelected=!1;for(var i in $scope.post.Contact.service_commands._ids){if($scope.post.Contact.service_commands._ids[i]===$scope.servicePushComamndId){$scope.post.Contact.service_push_notifications_enabled=1;pushCommandSelected=!0;return}}
if(pushCommandSelected===!1){$scope.post.Contact.service_push_notifications_enabled=0}});$scope.$watch('data.selectedSamAccountNameIndex',function(){if($scope.init){return}
var index=parseInt($scope.data.selectedSamAccountNameIndex,10);if(typeof $scope.ldapUsers[index]!=="undefined"){$scope.post.Contact.email=$scope.ldapUsers[index].email;$scope.post.Contact.name=$scope.ldapUsers[index].samaccountname;$scope.post.Contact.description=$scope.ldapUsers[index].display_name}})});angular.module('openITCOCKPIT').controller('CalendarsAddController',function($scope,$http,$state,$stateParams,$q,$compile,NotyService,RedirectService){$scope.data={createAnother:!1};$scope.defaultDate=new Date();$scope.countryCode='de';var clearForm=function(){$scope.post={Calendar:{container_id:0,name:'',description:''}}};clearForm();$scope.calendar=null;$scope.events=[];$scope.countries=[];$scope.init=!0;var renderCalendar=function(){var calendarEl=document.getElementById('calendar');$scope.calendar=new FullCalendar.Calendar(calendarEl,{plugins:['interaction','dayGrid','timeGrid','list'],customButtons:{holidays:{text:$scope.message.addHoliday,click:function(event){event.stopPropagation()}},deleteallholidays:{text:$scope.message.deleteAllHolidays,click:function(){var index=$scope.events.length;while(index--){if($scope.events[index].default_holiday===!0){$scope.events.splice(index,1)}}
$scope.$apply()}},deletemonthevents:{text:$scope.message.deleteMonthEvents,click:function(){var index=$scope.events.length;while(index--){var start=new Date($scope.events[index].start);if(start>=$scope.calendar.state.dateProfile.currentRange.start&&start<$scope.calendar.state.dateProfile.currentRange.end){$scope.events.splice(index,1)}}
$scope.$apply()}},deleteallevents:{text:$scope.message.deleteAllEvents,click:function(){$scope.events=[];$scope.$apply()}}},header:{left:'holidays deleteallholidays deletemonthevents deleteallevents',center:'title',right:'prev,next today',},defaultDate:$scope.defaultDate,navLinks:!1,businessHours:!0,editable:!0,weekNumbers:!0,weekNumbersWithinDays:!1,weekNumberCalculation:'ISO',eventOverlap:!1,eventDurationEditable:!1,datesRender:function(info){$scope.defaultDate=info.view.currentStart;$(".fc-day-number").each(function(index,obj){var $span=$(obj);var $parentTd=$span.parent();var currentDate=$parentTd.data('date');var $addButton=$('<button>').html('<i class="fa fa-plus"></i>').attr({title:'add',type:'button',class:'btn btn-xs btn-success calendar-button'}).click(function(){$('#addEventModal').modal('show');$scope.newEvent={title:'',start:currentDate}});var events=$scope.getEvents(currentDate);if(!$scope.hasEvents(currentDate)){$parentTd.css('text-align','right').append($addButton)}})},eventPositioned:function(info){var elements=$('[data-date="'+date('Y-m-d',info.event.start)+'"]');var $editButton=$('<button>').html('<i class="fa fa-pencil"></i>').attr({title:'edit',type:'button',class:'btn btn-xs btn-primary btn-edit calendar-button margin-right-5'}).click(function(){var event=$scope.getEvents(date('Y-m-d',info.event.start));$scope.editEvent={start:event.start,title:event.title};$scope.$apply();$('#editEventModal').modal('show')});var $deleteButton=$('<button>').html('<i class="fa fa-trash-o"></i>').attr({title:'delete',type:'button',class:'btn btn-xs btn-danger calendar-button'}).click(function(){$scope.deleteEvent(date('Y-m-d',info.event.start));$scope.$apply()});$(elements[1]).css('text-align','right').append($deleteButton);$(elements[1]).append($editButton)},eventDrop:function(info){var event=$scope.deleteEvent(date('Y-m-d',info.oldEvent.start));if(!event){return}
event=event[0];event.start=date('Y-m-d',info.event.start);$scope.addEvent(event.title,event.start);$scope.$apply()},events:$scope.events});$scope.calendar.render();$(".fc-holidays-button").wrap("<span class='dropdown'></span>").addClass('btn btn-secondary dropdown-toggle').attr({'data-toggle':'dropdown','type':'button','aria-expanded':!1,'aria-haspopup':!0}).append($('<img/>',{'class':'flag flag-'+$scope.countryCode})).append('<span class="caret caret-with-margin-left-5"></span>');$('.fc-holidays-button').parent().append($('<ul/>',{'id':'countryList','class':'dropdown-menu','role':'button'}));for(var key in $scope.countries){$('#countryList').append($compile($('<li/>',{'ng-click':'setSelected("'+key+'")'}).append($('<a/>',{}).append($('<img/>',{'class':'flag flag-'+key})).append($('<span/>',{'class':'padding-left-5','text':$scope.countries[key]}))))($scope))}};$scope.setSelected=function(countryCode){$scope.countryCode=countryCode};$scope.loadHolidays=function(){$http.get('/calendars/loadHolidays/'+$scope.countryCode+'.json',{params:{'angular':!0}}).then(function(result){$scope.init=!1;var customEvents=[];for(var index in $scope.events){if($scope.events[index].default_holiday===!1){customEvents.push($scope.events[index])}}
$scope.events=result.data.holidays;for(var index in customEvents){if($scope.hasEvents(customEvents[index].start)){$scope.deleteEvent(customEvents[index].start)}
$scope.events.push(customEvents[index])}
if($scope.init){return}
if($scope.calendar!==null){$scope.calendar.destroy()}
renderCalendar()})};$scope.load=function(){$q.all([$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}),$http.get("/calendars/loadCountryList.json",{params:{'angular':!0}})]).then(function(results){$scope.containers=results[0].data.containers;$scope.countries=results[1].data.countries;$scope.init=!1;$scope.loadHolidays()})};$scope.getEvents=function(date){for(var index in $scope.events){if($scope.events[index].start===date){return $scope.events[index]}}
return null};$scope.hasEvents=function(date){for(var index in $scope.events){if($scope.events[index].start===date){return!0}}
return!1};$scope.deleteEvent=function(date){for(var index in $scope.events){if($scope.events[index].start===date){return $scope.events.splice(index,1)}}
return!1};$scope.addEvent=function(title,date){$scope.events.push({title:title,start:date,default_holiday:!1,className:'bg-color-pinkDark'})};$scope.addEventFromModal=function(){if($scope.newEvent.title===''){return}
$scope.addEvent($scope.newEvent.title,$scope.newEvent.start);$('#addEventModal').modal('hide');$scope.newEvent={title:'',start:''}};$scope.editEventFromModal=function(){if($scope.editEvent.title===''){return}
var event=$scope.deleteEvent($scope.editEvent.start);if(!event){return}
event=event[0];$scope.addEvent($scope.editEvent.title,event.start);$('#editEventModal').modal('hide');$scope.editEvent={title:'',start:''}};$scope.submit=function(){$scope.post.events=$scope.events;$http.post("/calendars/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('CalendarsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.message.objectName+'</a></u> '+$scope.message.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('CalendarsIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load();$scope.$watch('events',function(){if($scope.init){return}
if($scope.calendar!==null){$scope.calendar.destroy()}
renderCalendar()},!0);$scope.$watch('countryCode',function(){if($scope.init){return}
$scope.loadHolidays()},!0)});angular.module('openITCOCKPIT').controller('CalendarsEditController',function($scope,$http,$state,$stateParams,$q,$compile,NotyService,RedirectService){$scope.defaultDate=new Date();$scope.countryCode='de';$scope.countries=[];$scope.id=$stateParams.id;$scope.calendar=null;$scope.init=!0;var renderCalendar=function(){var calendarEl=document.getElementById('calendar');$scope.calendar=new FullCalendar.Calendar(calendarEl,{plugins:['interaction','dayGrid','timeGrid','list'],customButtons:{holidays:{text:$scope.message.addHoliday,click:function(event){event.stopPropagation()}},deleteallholidays:{text:$scope.message.deleteAllHolidays,click:function(){var index=$scope.events.length;while(index--){if($scope.events[index].default_holiday===!0){$scope.events.splice(index,1)}}
$scope.$apply()}},deletemonthevents:{text:$scope.message.deleteMonthEvents,click:function(){var index=$scope.events.length;while(index--){var start=new Date($scope.events[index].start);if(start>=$scope.calendar.state.dateProfile.currentRange.start&&start<$scope.calendar.state.dateProfile.currentRange.end){$scope.events.splice(index,1)}}
$scope.$apply()}},deleteallevents:{text:$scope.message.deleteAllEvents,click:function(){$scope.events=[];$scope.$apply()}}},header:{left:'holidays deleteallholidays deletemonthevents deleteallevents',center:'title',right:'prev,next today',},defaultDate:$scope.defaultDate,navLinks:!1,businessHours:!0,editable:!0,weekNumbers:!0,weekNumbersWithinDays:!1,weekNumberCalculation:'ISO',eventOverlap:!1,eventDurationEditable:!1,datesRender:function(info){$scope.defaultDate=info.view.currentStart;$(".fc-day-number").each(function(index,obj){var $span=$(obj);var $parentTd=$span.parent();var currentDate=$parentTd.data('date');var $addButton=$('<button>').html('<i class="fa fa-plus"></i>').attr({title:'add',type:'button',class:'btn btn-xs btn-success calendar-button'}).click(function(){$('#addEventModal').modal('show');$scope.newEvent={title:'',start:currentDate}});var events=$scope.getEvents(currentDate);if(!$scope.hasEvents(currentDate)){$parentTd.css('text-align','right').append($addButton)}})},eventPositioned:function(info){var elements=$('[data-date="'+date('Y-m-d',info.event.start)+'"]');var $editButton=$('<button>').html('<i class="fa fa-pencil"></i>').attr({title:'edit',type:'button',class:'btn btn-xs btn-primary btn-edit calendar-button margin-right-5'}).click(function(){var event=$scope.getEvents(date('Y-m-d',info.event.start));$scope.editEvent={start:event.start,title:event.title};$scope.$apply();$('#editEventModal').modal('show')});var $deleteButton=$('<button>').html('<i class="fa fa-trash-o"></i>').attr({title:'delete',type:'button',class:'btn btn-xs btn-danger calendar-button'}).click(function(){$scope.deleteEvent(date('Y-m-d',info.event.start));$scope.$apply()});$(elements[1]).css('text-align','right').append($deleteButton);$(elements[1]).append($editButton)},eventDrop:function(info){var event=$scope.deleteEvent(date('Y-m-d',info.oldEvent.start));if(!event){return}
event=event[0];event.start=date('Y-m-d',info.event.start);$scope.addEvent(event.title,event.start);$scope.$apply()},events:$scope.events});$scope.calendar.render();$(".fc-holidays-button").wrap("<span class='dropdown'></span>").addClass('btn btn-secondary dropdown-toggle').attr({'data-toggle':'dropdown','type':'button','aria-expanded':!1,'aria-haspopup':!0}).append($('<img/>',{'class':'flag flag-'+$scope.countryCode})).append('<span class="caret caret-with-margin-left-5"></span>');$('.fc-holidays-button').parent().append($('<ul/>',{'id':'countryList','class':'dropdown-menu','role':'button'}));for(var key in $scope.countries){$('#countryList').append($compile($('<li/>',{'ng-click':'setSelected("'+key+'")'}).append($('<a/>',{}).append($('<img/>',{'class':'flag flag-'+key})).append($('<span/>',{'class':'padding-left-5','text':$scope.countries[key]}))))($scope))}};$scope.setSelected=function(countryCode){$scope.countryCode=countryCode};$scope.loadHolidays=function(){$http.get('/calendars/loadHolidays/'+$scope.countryCode+'.json',{params:{'angular':!0}}).then(function(result){$scope.init=!1;var customEvents=[];for(var index in $scope.events){if($scope.events[index].default_holiday===!1){customEvents.push($scope.events[index])}}
$scope.events=result.data.holidays;for(var index in customEvents){if($scope.hasEvents(customEvents[index].start)){$scope.deleteEvent(customEvents[index].start)}
$scope.events.push(customEvents[index])}
if($scope.init){return}
if($scope.calendar!==null){$scope.calendar.destroy()}
renderCalendar()})};$scope.loadContainers=function(){$q.all([$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}),$http.get("/calendars/loadCountryList.json",{params:{'angular':!0}})]).then(function(results){$scope.containers=results[0].data.containers;$scope.countries=results[1].data.countries;$scope.init=!1})};$scope.load=function(){$http.get("/calendars/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post={Calendar:result.data.calendar};$scope.events=result.data.events;$scope.init=!1})};$scope.getEvents=function(date){for(var index in $scope.events){if($scope.events[index].start===date){return $scope.events[index]}}
return null};$scope.hasEvents=function(date){for(var index in $scope.events){if($scope.events[index].start===date){return!0}}
return!1};$scope.deleteEvent=function(date){for(var index in $scope.events){if($scope.events[index].start===date){return $scope.events.splice(index,1)}}
return!1};$scope.addEvent=function(title,date){$scope.events.push({title:title,start:date,default_holiday:!1,className:'bg-color-pinkDark'})};$scope.addEventFromModal=function(){if($scope.newEvent.title===''){return}
$scope.addEvent($scope.newEvent.title,$scope.newEvent.start);$('#addEventModal').modal('hide');$scope.newEvent={title:'',start:''}};$scope.editEventFromModal=function(){if($scope.editEvent.title===''){return}
var event=$scope.deleteEvent($scope.editEvent.start);if(!event){return}
event=event[0];$scope.addEvent($scope.editEvent.title,event.start);$('#editEventModal').modal('hide');$scope.editEvent={title:'',start:''}};$scope.submit=function(){$scope.post.events=$scope.events;$http.post("/calendars/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('CalendarsEdit',{id:result.data.calendar.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('CalendarsIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load();$scope.loadContainers();$scope.$watch('events',function(){if($scope.init){return}
if($scope.calendar!==null){$scope.calendar.destroy()}
renderCalendar()},!0);$scope.$watch('countryCode',function(){if($scope.init){return}
$scope.loadHolidays()},!0)});angular.module('openITCOCKPIT').controller('CalendarsIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Calendars.name');SortService.setDirection('asc');$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={calendars:{name:'',description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/calendars/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/calendars/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Calendars.name]':$scope.filter.calendars.name,'filter[Calendars.description]':$scope.filter.calendars.description}}).then(function(result){$scope.calendars=result.data.all_calendars;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.calendars){for(var key in $scope.calendars){if($scope.calendars[key].allowEdit){var id=$scope.calendars[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(calendar){var object={};object[calendar.id]=calendar.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.calendars){for(var id in selectedObjects){if(id==$scope.calendars[key].id){objects[id]=$scope.calendars[key].name}}}
return objects};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('AgentchecksEditController',function($scope,$http,SudoService,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.init=!0;$scope.loadServicetemplates=function(){$http.get("/agentchecks/loadServicetemplates.json",{params:{'angular':!0}}).then(function(result){$scope.servicetemplates=result.data.servicetemplates},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadAgentcheck=function(){var params={'angular':!0};$http.get("/agentchecks/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post={Agentcheck:result.data.agentcheck};$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/agentchecks/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('AgentchecksEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('AgentchecksIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError()})};$scope.loadServicetemplates();$scope.loadAgentcheck()});angular.module('openITCOCKPIT').controller('AgentchecksAddController',function($scope,$http,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Agentcheck:{name:'',plugin_name:'',servicetemplate_id:''}}};clearForm();$scope.init=!0;$scope.hasError=null;$scope.errors={};$scope.loadServicetemplates=function(){$http.get("/agentchecks/loadServicetemplates.json",{params:{'angular':!0}}).then(function(result){$scope.servicetemplates=result.data.servicetemplates},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/agentchecks/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('AgentchecksEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){if(typeof redirectState==="undefined"){RedirectService.redirectWithFallback('AgentchecksIndex')}else{$state.go(redirectState,{hostId:result.data.id}).then(function(){NotyService.scrollTop()})}}else{clearForm();$scope.errors={};NotyService.scrollTop()}},function errorCallback(result){if(result.data.hasOwnProperty('error')){NotyService.genericError();$scope.errors=result.data.error}})};$scope.loadServicetemplates()});angular.module('openITCOCKPIT').controller('AgentchecksIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService,$state){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Agentchecks.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Agentchecks:{name:'',},Servicetemplates:{template_name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/agentchecks/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Agentchecks.name]':$scope.filter.Agentchecks.name,'filter[Servicetemplates.template_name]':$scope.filter.Servicetemplates.template_name,};$http.get("/agentchecks/index.json",{params:params}).then(function(result){$scope.agentchecks=result.data.all_agentchecks;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.agentchecks){for(var key in $scope.agentchecks){if($scope.agentchecks[key].allow_edit===!0){var id=$scope.agentchecks[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(agentcheck){var object={};object[agentcheck.id]=agentcheck.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.agentchecks){for(var id in selectedObjects){if(id==$scope.agentchecks[key].id){if($scope.agentchecks[key].allow_edit===!0){objects[id]=$scope.agentchecks[key].name}}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicechecksIndexController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','Servicechecks.start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={Servicechecks:{state:{ok:!1,warning:!1,critical:!1,unknown:!1},state_types:{soft:!1,hard:!1},output:'',perfdata:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.serviceBrowserMenuConfig={autoload:!0,serviceId:$scope.id,includeServicestatus:!0};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var state_type='';if($scope.filter.Servicechecks.state_types.soft^$scope.filter.Servicechecks.state_types.hard){state_type=0;if($scope.filter.Servicechecks.state_types.hard===!0){state_type=1}}
$http.get("/servicechecks/index/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Servicechecks.output]':$scope.filter.Servicechecks.output,'filter[Servicechecks.state][]':$rootScope.currentStateForApi($scope.filter.Servicechecks.state),'filter[Servicechecks.state_type]':state_type,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.servicechecks=result.data.all_servicechecks;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('StatehistoriesServiceController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','StatehistoryServices.state_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={StatehistoryServices:{state:{ok:!1,warning:!1,critical:!1,unknown:!1},state_types:{soft:!1,hard:!1},output:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.serviceBrowserMenuConfig={autoload:!0,serviceId:$scope.id,includeServicestatus:!0};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var state_type='';if($scope.filter.StatehistoryServices.state_types.soft^$scope.filter.StatehistoryServices.state_types.hard){state_type=0;if($scope.filter.StatehistoryServices.state_types.hard===!0){state_type=1}}
$http.get("/statehistories/service/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[StatehistoryServices.output]':$scope.filter.StatehistoryServices.output,'filter[StatehistoryServices.state][]':$rootScope.currentStateForApi($scope.filter.StatehistoryServices.state),'filter[StatehistoryServices.state_type]':state_type,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.statehistories=result.data.all_statehistories;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('StatehistoriesHostController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','StatehistoryHosts.state_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={StatehistoryHosts:{state:{recovery:!1,dowm:!1,unreachable:!1,},state_types:{soft:!1,hard:!1},output:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.init=!0;$scope.showFilter=!1;$scope.hostBrowserMenuConfig={autoload:!0,hostId:$scope.id,includeHoststatus:!0};$scope.load=function(){var state_type='';if($scope.filter.StatehistoryHosts.state_types.soft^$scope.filter.StatehistoryHosts.state_types.hard){state_type=0;if($scope.filter.StatehistoryHosts.state_types.hard===!0){state_type=1}}
$http.get("/statehistories/host/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[StatehistoryHosts.output]':$scope.filter.StatehistoryHosts.output,'filter[StatehistoryHosts.state][]':$rootScope.currentStateForApi($scope.filter.StatehistoryHosts.state),'filter[StatehistoryHosts.state_type]':state_type,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.statehistories=result.data.all_statehistories;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('CronjobsIndexController',function($scope,$http,NotyService){$scope.post={};$scope.editPost={};$scope.load=function(){var params={'angular':!0};$http.get("/cronjobs/index.json",{params:params}).then(function(result){$scope.cronjobs=result.data.cronjobs;$scope.init=!1})};$scope.loadAvailableCronjobTasks=function(tasksToInclude,pluginName,callback){$scope.availableTasks=[];var params={'angular':!0,'include':tasksToInclude,'pluginName':pluginName};$http.get("/cronjobs/getTasks.json",{params:params}).then(function(result){$scope.availableTasks=result.data.coreTasks;callback(tasksToInclude)})};$scope.loadAvailablePlugins=function(pluginsToInclude,callback){$scope.availablePlugins=[];var params={'angular':!0,'include':pluginsToInclude};$http.get("/cronjobs/getPlugins.json",{params:params}).then(function(result){$scope.availablePlugins=result.data.plugins;callback(pluginsToInclude)})};$scope.saveCronjob=function(){$http.post("/cronjobs/add.json?angular=true",$scope.post).then(function(result){$scope.errors={};$('#addCronjobModal').modal('hide');$scope.post={};$scope.load();NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.editCronjob=function(){$http.post("/cronjobs/edit/"+$scope.editPost.Cronjob.id+".json?angular=true",$scope.editPost).then(function(result){$scope.errors={};$('#editCronjobModal').modal('hide');$scope.editPost={};$scope.load();NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.triggerAddModal=function(){$scope.post={Cronjob:{plugin:'',task:'',interval:0,enabled:0}};$scope.loadAvailablePlugins('',function(){});$('#addCronjobModal').modal('show')};$scope.triggerEditModal=function(cronjob){$scope.editPost={Cronjob:JSON.parse(JSON.stringify(cronjob))};$scope.loadAvailablePlugins(cronjob.plugin,function(){$scope.editPost.Cronjob.plugin=cronjob.plugin});$scope.loadAvailableCronjobTasks(cronjob.task,cronjob.plugin,function(){$scope.editPost.Cronjob.task=cronjob.task});$('#editCronjobModal').modal('show')};$scope.deleteCronjob=function(){$http.post("/cronjobs/delete/"+$scope.editPost.Cronjob.id+".json?angular=true",$scope.editPost).then(function(result){$scope.errors={};$('#editCronjobModal').modal('hide');$scope.editPost={};$scope.load();NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.load();$scope.$watch('post.Cronjob.plugin',function(){if($scope.post.Cronjob!=null){$scope.loadAvailableCronjobTasks('',$scope.post.Cronjob.plugin,function(){})}},!0)});angular.module('openITCOCKPIT').controller('SystemdowntimesAddHostdowntimeController',function($scope,$state,$http,QueryStringService,$stateParams,NotyService,RedirectService){$scope.init=!0;$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Systemdowntime:{is_recurring:0,weekdays:{},day_of_month:'',from_date:'',from_time:'',to_date:'',to_time:'',duration:15,downtimetype:'host',downtimetype_id:'0',objecttype_id:256,object_id:[],comment:'',is_recursive:0}}};clearForm();if($stateParams.id!==null){$scope.post.Systemdowntime.object_id.push(parseInt($stateParams.id,10))}
$scope.loadDefaults=function(){$http.get("/angular/getDowntimeData.json",{params:{'angular':!0}}).then(function(result){$scope.post.Systemdowntime.from_date=result.data.defaultValues.from_date;$scope.post.Systemdowntime.from_time=result.data.defaultValues.from_time;$scope.post.Systemdowntime.to_date=result.data.defaultValues.to_date;$scope.post.Systemdowntime.to_time=result.data.defaultValues.to_time;$scope.post.Systemdowntime.comment=result.data.defaultValues.comment;$scope.post.Systemdowntime.duration=result.data.defaultValues.duration;$scope.post.Systemdowntime.downtimetype_id=result.data.defaultValues.downtimetype_id})};$scope.loadHosts=function(searchString){$http.get("/hosts/loadHostsByString/1.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Systemdowntime.object_id}}).then(function(result){$scope.hosts=result.data.hosts})};$scope.submit=function(){$http.post("/systemdowntimes/addHostdowntime.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+' '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('DowntimesHost')}else{clearForm();$scope.loadDefaults();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadDefaults();$scope.loadHosts('')});angular.module('openITCOCKPIT').controller('SystemdowntimesAddHostgroupdowntimeController',function($scope,$state,$http,QueryStringService,$stateParams,NotyService,RedirectService){$scope.init=!0;$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Systemdowntime:{is_recurring:0,weekdays:{},day_of_month:'',from_date:'',from_time:'',to_date:'',to_time:'',duration:15,downtimetype:'hostgroup',downtimetype_id:'0',objecttype_id:1024,object_id:[],comment:'',is_recursive:0}}};clearForm();if($stateParams.id!==null){$scope.post.Systemdowntime.object_id.push(parseInt($stateParams.id,10))}
$scope.loadDefaults=function(){$http.get("/angular/getDowntimeData.json",{params:{'angular':!0}}).then(function(result){$scope.post.Systemdowntime.from_date=result.data.defaultValues.from_date;$scope.post.Systemdowntime.from_time=result.data.defaultValues.from_time;$scope.post.Systemdowntime.to_date=result.data.defaultValues.to_date;$scope.post.Systemdowntime.to_time=result.data.defaultValues.to_time;$scope.post.Systemdowntime.comment=result.data.defaultValues.comment;$scope.post.Systemdowntime.duration=result.data.defaultValues.duration;$scope.post.Systemdowntime.downtimetype_id=result.data.defaultValues.downtimetype_id})};$scope.loadHostgroups=function(searchString){$http.get("/hostgroups/loadHostgroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':$scope.post.Systemdowntime.object_id}}).then(function(result){$scope.hostgroups=result.data.hostgroups})};$scope.submit=function(){$http.post("/systemdowntimes/addHostgroupdowntime.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+' '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('DowntimesHost')}else{clearForm();$scope.loadDefaults();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadDefaults();$scope.loadHostgroups('')});angular.module('openITCOCKPIT').controller('SystemdowntimesAddContainerdowntimeController',function($scope,$state,$http,QueryStringService,$stateParams,NotyService,RedirectService){$scope.init=!0;$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Systemdowntime:{is_recurring:0,weekdays:{},day_of_month:'',from_date:'',from_time:'',to_date:'',to_time:'',duration:15,downtimetype:'container',downtimetype_id:'0',objecttype_id:4,object_id:[],comment:'',is_recursive:0}}};clearForm();if($stateParams.id!==null){$scope.post.Systemdowntime.object_id.push(parseInt($stateParams.id,10))}
$scope.loadDefaults=function(){$http.get("/angular/getDowntimeData.json",{params:{'angular':!0}}).then(function(result){$scope.post.Systemdowntime.from_date=result.data.defaultValues.from_date;$scope.post.Systemdowntime.from_time=result.data.defaultValues.from_time;$scope.post.Systemdowntime.to_date=result.data.defaultValues.to_date;$scope.post.Systemdowntime.to_time=result.data.defaultValues.to_time;$scope.post.Systemdowntime.comment=result.data.defaultValues.comment;$scope.post.Systemdowntime.duration=result.data.defaultValues.duration;$scope.post.Systemdowntime.downtimetype_id=result.data.defaultValues.downtimetype_id})};$scope.loadContainers=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0,'onlyWritePermissions':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.submit=function(){$http.post("/systemdowntimes/addContainerdowntime.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+' '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('SystemdowntimesNode')}else{clearForm();$scope.loadDefaults();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadDefaults();$scope.loadContainers()});angular.module('openITCOCKPIT').controller('SystemdowntimesHostgroupController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,MassChangeService){SortService.setSort(QueryStringService.getValue('sort','Systemdowntimes.from_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Containers:{name:''},Systemdowntimes:{author:'',comment:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/systemdowntimes/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/systemdowntimes/hostgroup.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.Containers.name,'filter[Systemdowntimes.author]':$scope.filter.Systemdowntimes.author,'filter[Systemdowntimes.comment]':$scope.filter.Systemdowntimes.comment}}).then(function(result){$scope.systemdowntimes=result.data.all_hostgroup_recurring_downtimes;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.selectAll=function(){if($scope.systemdowntimes){for(var key in $scope.systemdowntimes){if($scope.systemdowntimes[key].Hostgroup.allow_edit){var id=$scope.systemdowntimes[key].Systemdowntime.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(downtime){var object={};object[downtime.Systemdowntime.id]=downtime.Container.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.systemdowntimes){for(var id in selectedObjects){if(id==$scope.systemdowntimes[key].Systemdowntime.id){objects[id]=$scope.systemdowntimes[key].Container.name}}}
return objects};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('SystemdowntimesServiceController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,MassChangeService){SortService.setSort(QueryStringService.getValue('sort','Systemdowntimes.from_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Hosts:{name:''},Systemdowntimes:{author:'',comment:''},servicename:''}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/systemdowntimes/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/systemdowntimes/service.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[servicename]':$scope.filter.servicename,'filter[Systemdowntimes.author]':$scope.filter.Systemdowntimes.author,'filter[Systemdowntimes.comment]':$scope.filter.Systemdowntimes.comment}}).then(function(result){$scope.systemdowntimes=result.data.all_service_recurring_downtimes;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.selectAll=function(){if($scope.systemdowntimes){for(var key in $scope.systemdowntimes){if($scope.systemdowntimes[key].Host.allow_edit){var id=$scope.systemdowntimes[key].Systemdowntime.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(downtime){var object={};object[downtime.Systemdowntime.id]=downtime.Host.hostname+' / '+downtime.Service.servicename;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.systemdowntimes){for(var id in selectedObjects){if(id==$scope.systemdowntimes[key].Systemdowntime.id){objects[id]=$scope.systemdowntimes[key].Host.hostname+' / '+$scope.systemdowntimes[key].Service.servicename}}}
return objects};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('SystemdowntimesHostController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,MassChangeService){SortService.setSort(QueryStringService.getValue('sort','Systemdowntimes.from_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Hosts:{name:''},Systemdowntimes:{author:'',comment:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/systemdowntimes/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/systemdowntimes/host.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[Systemdowntimes.author]':$scope.filter.Systemdowntimes.author,'filter[Systemdowntimes.comment]':$scope.filter.Systemdowntimes.comment}}).then(function(result){$scope.systemdowntimes=result.data.all_host_recurring_downtimes;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.selectAll=function(){if($scope.systemdowntimes){for(var key in $scope.systemdowntimes){if($scope.systemdowntimes[key].Host.allow_edit){var id=$scope.systemdowntimes[key].Systemdowntime.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(downtime){var object={};object[downtime.Systemdowntime.id]=downtime.Host.hostname;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.systemdowntimes){for(var id in selectedObjects){if(id==$scope.systemdowntimes[key].Systemdowntime.id){objects[id]=$scope.systemdowntimes[key].Host.hostname}}}
return objects};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('SystemdowntimesAddServicedowntimeController',function($scope,$state,$http,QueryStringService,$stateParams,NotyService,RedirectService){$scope.init=!0;$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Systemdowntime:{is_recurring:0,weekdays:{},day_of_month:'',from_date:'',from_time:'',to_date:'',to_time:'',duration:15,downtimetype:'service',downtimetype_id:'0',objecttype_id:2048,object_id:[],comment:'',is_recursive:0}}};clearForm();if($stateParams.id!==null){$scope.post.Systemdowntime.object_id.push(parseInt($stateParams.id,10))}
$scope.loadDefaults=function(){$http.get("/angular/getDowntimeData.json",{params:{'angular':!0}}).then(function(result){$scope.post.Systemdowntime.from_date=result.data.defaultValues.from_date;$scope.post.Systemdowntime.from_time=result.data.defaultValues.from_time;$scope.post.Systemdowntime.to_date=result.data.defaultValues.to_date;$scope.post.Systemdowntime.to_time=result.data.defaultValues.to_time;$scope.post.Systemdowntime.comment=result.data.defaultValues.comment;$scope.post.Systemdowntime.duration=result.data.defaultValues.duration;$scope.post.Systemdowntime.downtimetype_id=result.data.defaultValues.downtimetype_id})};$scope.loadServices=function(searchString){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'filter[servicename]':searchString,'selected[]':$scope.post.Systemdowntime.object_id}}).then(function(result){$scope.services=result.data.services})};$scope.submit=function(){$http.post("/systemdowntimes/addServicedowntime.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+' '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('DowntimesService')}else{clearForm();$scope.loadDefaults();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadDefaults();$scope.loadServices('')});angular.module('openITCOCKPIT').controller('SystemdowntimesNodeController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,MassChangeService){SortService.setSort(QueryStringService.getValue('sort','Systemdowntimes.from_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Containers:{name:''},Systemdowntimes:{author:'',comment:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/systemdowntimes/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/systemdowntimes/node.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.Containers.name,'filter[Systemdowntimes.author]':$scope.filter.Systemdowntimes.author,'filter[Systemdowntimes.comment]':$scope.filter.Systemdowntimes.comment}}).then(function(result){$scope.systemdowntimes=result.data.all_node_recurring_downtimes;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.selectAll=function(){if($scope.systemdowntimes){for(var key in $scope.systemdowntimes){if($scope.systemdowntimes[key].Container.allow_edit){var id=$scope.systemdowntimes[key].Systemdowntime.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(downtime){var object={};object[downtime.Systemdowntime.id]=downtime.Container.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.systemdowntimes){for(var id in selectedObjects){if(id==$scope.systemdowntimes[key].Systemdowntime.id){objects[id]=$scope.systemdowntimes[key].Container.name}}}
return objects};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('HosttemplatesIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService,$state){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Hosttemplates.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Hosttemplates:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hosttemplates/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosttemplates.name]':$scope.filter.Hosttemplates.name};$http.get("/hosttemplates/index.json",{params:params}).then(function(result){$scope.hosttemplates=result.data.all_hosttemplates;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hosttemplates){for(var key in $scope.hosttemplates){if($scope.hosttemplates[key].Hosttemplate.allow_edit===!0){var id=$scope.hosttemplates[key].Hosttemplate.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(hosttemplate){var object={};object[hosttemplate.Hosttemplate.id]=hosttemplate.Hosttemplate.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hosttemplates){for(var id in selectedObjects){if(id==$scope.hosttemplates[key].Hosttemplate.id){if($scope.hosttemplates[key].Hosttemplate.allow_edit===!0){objects[id]=$scope.hosttemplates[key].Hosttemplate.name}}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('HosttemplatesCopyController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){var ids=$stateParams.ids.split(',');if(ids.length===0||ids[0]===''){RedirectService.redirectWithFallback('HosttemplatesIndex');return}
var removeFieldsFromHosttemplatecommandargumentvalues=function(hosttemplatecommandargumentvalues){if(hosttemplatecommandargumentvalues.length===0){return[]}
for(var i in hosttemplatecommandargumentvalues){delete hosttemplatecommandargumentvalues[i].id;delete hosttemplatecommandargumentvalues[i].hosttemplate_id}
return hosttemplatecommandargumentvalues};$scope.load=function(){$http.get("/hosttemplates/copy/"+ids.join('/')+".json",{params:{'angular':!0,}}).then(function(result){$scope.sourceHosttemplates=[];$scope.commands=result.data.commands;for(var key in result.data.hosttemplates){var sourceId=result.data.hosttemplates[key].id;delete result.data.hosttemplates[key].id;var hosttemplate={Source:{id:sourceId,name:result.data.hosttemplates[key].name},Hosttemplate:result.data.hosttemplates[key]};hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues=removeFieldsFromHosttemplatecommandargumentvalues(hosttemplate.Hosttemplate.hosttemplatecommandargumentvalues);$scope.sourceHosttemplates.push(hosttemplate)}
$scope.init=!1})};$scope.loadCommandArguments=function(sourceTemplateId,commandId,$index){var params={'angular':!0};$http.get("/hosttemplates/loadCommandArguments/"+commandId+"/"+sourceTemplateId+".json",{params:params}).then(function(result){$scope.sourceHosttemplates[$index].Hosttemplate.hosttemplatecommandargumentvalues=result.data.hosttemplatecommandargumentvalues})};$scope.copy=function(){$http.post("/hosttemplates/copy/.json?angular=true",{data:$scope.sourceHosttemplates}).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('HosttemplatesIndex')},function errorCallback(result){NotyService.genericError();$scope.sourceHosttemplates=result.data.result})};$scope.load()});angular.module('openITCOCKPIT').controller('HosttemplatesEditController',function($scope,$http,SudoService,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.post={Hosttemplate:{}};$scope.init=!0;$scope.loadHosttemplate=function(){var params={'angular':!0};$http.get("/hosttemplates/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Hosttemplate=result.data.hosttemplate.Hosttemplate;$scope.commands=result.data.commands;jQuery(function(){$('.tagsinput').tagsinput()});$scope.loadContainers();$scope.loadElements()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainers=function(){var params={'angular':!0};$http.get("/hosttemplates/loadContainers/"+$scope.id+".json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.areContainersRestricted=result.data.areContainersRestricted;$scope.init=!1})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Hosttemplate.command_id;$http.get("/hosttemplates/loadCommandArguments/"+commandId+"/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Hosttemplate.hosttemplatecommandargumentvalues=result.data.hosttemplatecommandargumentvalues})};$scope.loadElements=function(){var containerId=$scope.post.Hosttemplate.container_id;$http.post("/hosttemplates/loadElementsByContainerId/"+containerId+".json?angular=true",{}).then(function(result){$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.hostgroups=result.data.hostgroups})};$scope.setPriority=function(priority){$scope.post.Hosttemplate.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Hosttemplate.customvariables.push({objecttype_id:512,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Hosttemplate.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.submit=function(){$http.post("/hosttemplates/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('HosttemplatesEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HosttemplatesIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadHosttemplate();$scope.$watch('post.Hosttemplate.container_id',function(){if($scope.init){return}
$scope.loadElements()},!0);$scope.$watch('post.Hosttemplate.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0)});angular.module('openITCOCKPIT').controller('HosttemplatesAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Hosttemplate:{name:'',description:'',command_id:0,eventhandler_command_id:0,check_interval:3600,retry_interval:60,max_check_attempts:3,first_notification_delay:0,notification_interval:7200,notify_on_down:1,notify_on_unreachable:1,notify_on_recovery:1,notify_on_flapping:0,notify_on_downtime:0,flap_detection_enabled:0,flap_detection_on_up:0,flap_detection_on_down:0,flap_detection_on_unreachable:0,low_flap_threshold:0,high_flap_threshold:0,process_performance_data:0,freshness_checks_enabled:0,freshness_threshold:0,passive_checks_enabled:1,event_handler_enabled:0,active_checks_enabled:1,retain_status_information:0,retain_nonstatus_information:0,notifications_enabled:0,notes:'',priority:1,check_period_id:0,notify_period_id:0,tags:'',container_id:0,host_url:'',contacts:{_ids:[]},contactgroups:{_ids:[]},hostgroups:{_ids:[]},customvariables:[],hosttemplatecommandargumentvalues:[]}}};clearForm();$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/hosttemplates/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/hosttemplates/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.commands;$scope.init=!1})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Hosttemplate.command_id;if(commandId===0){return}
$http.get("/hosttemplates/loadCommandArguments/"+commandId+".json",{params:params}).then(function(result){$scope.post.Hosttemplate.hosttemplatecommandargumentvalues=result.data.hosttemplatecommandargumentvalues;$scope.init=!1})};$scope.loadElements=function(){var containerId=$scope.post.Hosttemplate.container_id;if(containerId===0){return}
$http.post("/hosttemplates/loadElementsByContainerId/"+containerId+".json?angular=true",{}).then(function(result){$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.hostgroups=result.data.hostgroups})};$scope.setPriority=function(priority){$scope.post.Hosttemplate.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Hosttemplate.customvariables.push({objecttype_id:512,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Hosttemplate.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.submit=function(){$http.post("/hosttemplates/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('HosttemplatesEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('HosttemplatesIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadContainers();$scope.loadCommands();jQuery(function(){$('.tagsinput').tagsinput()});$scope.$watch('post.Hosttemplate.container_id',function(){if($scope.init){return}
$scope.loadElements()},!0);$scope.$watch('post.Hosttemplate.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0)});angular.module('openITCOCKPIT').controller('HosttemplatesUsedByController',function($scope,$http,QueryStringService,MassChangeService,$state,$stateParams){$scope.id=$stateParams.id;$scope.total=0;$scope.hosttemplate=null;$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hosts/delete/';$scope.filter={includeDisabled:!0};$scope.load=function(){$http.get("/hosttemplates/usedBy/"+$scope.id+".json",{params:{'angular':!0,'filter[Hosts.disabled]':$scope.filter.includeDisabled}}).then(function(result){$scope.allHosts=result.data.all_hosts;$scope.hosttemplate=result.data.hosttemplate;$scope.total=result.data.all_hosts.length},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.selectAll=function(){if($scope.allHosts){for(var key in $scope.allHosts){if($scope.allHosts[key].Host.allow_edit){var id=$scope.allHosts[key].Host.id;$scope.massChange[id]=!0}}}};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.allHosts){for(var id in selectedObjects){if(id==$scope.allHosts[key].Host.id){objects[id]=$scope.allHosts[key].Host.hostname}}}
return objects};$scope.getObjectForDelete=function(host){var object={};object[host.Host.id]=host.Host.hostname;return object};$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0);$scope.$watch('filter',function(){$scope.undoSelection();$scope.load()},!0)});angular.module('openITCOCKPIT').controller('UsersIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService,NotyService){SortService.setSort(QueryStringService.getValue('sort','full_name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));var defaultFilter=function(){$scope.filter={full_name:'',Users:{email:'',phone:'',usergroup_id:[],company:''}}};$scope.currentPage=1;$scope.useScroll=!0;$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/users/delete/';$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[full_name]':$scope.filter.full_name,'filter[Users.email]':$scope.filter.Users.email,'filter[Users.phone]':$scope.filter.Users.phone,'filter[Users.usergroup_id][]':$scope.filter.Users.usergroup_id,'filter[Users.company]':$scope.filter.Users.company};$http.get("/users/index.json",{params:params}).then(function(result){$scope.myUserId=result.data.myUserId;$scope.users=result.data.all_users;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.loadUsergroups=function(){$http.get("/users/loadUsergroups.json",{params:{'angular':!0}}).then(function(result){$scope.usergroups=result.data.usergroups},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.resetPasswordModal=function(user){$('#angularResetUserPasswordModal').modal('show');$scope.resetPasswordUser=user};$scope.resetPassword=function(){$scope.isResetting=!0;$http.post("/users/resetPassword/"+$scope.resetPasswordUser.id+".json",{params:{'angular':!0}}).then(function(result){$('#angularResetUserPasswordModal').modal('hide');$scope.isResetting=!1;NotyService.genericSuccess({message:result.data.message})},function errorCallback(result){$('#angularResetUserPasswordModal').modal('hide');$scope.isResetting=!1;var msg='Password reset failed';if(result.data.hasOwnProperty('message')){msg=result.data.message}
NotyService.genericError({message:msg});if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.selectAll=function(){if($scope.users){for(var key in $scope.users){if($scope.users[key].allow_edit===!0){var id=$scope.users[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(user){var object={};object[user.id]=user.full_name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.users){for(var id in selectedObjects){if(id==$scope.users[key].id){if($scope.users[key].allow_edit===!0){objects[id]=$scope.users[key].full_name}}}}
return objects};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.load();$scope.loadUsergroups();$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('UsersAddController',function($scope,$http,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.selectedUserContainers=[];$scope.selectedUserContainerWithPermission={};$scope.post={User:{firstname:'',lastname:'',email:'',phone:'',is_active:1,showstatsinmenu:0,paginatorlength:25,dashboard_tab_rotation:0,recursive_browser:0,dateformat:'%H:%M:%S - %d.%m.%Y',timezone:'Europe/Berlin',password:'',confirm_password:'',usergroup_id:0,usercontainerroles:{_ids:[]},ContainersUsersMemberships:{},}}};clearForm();var getContainerName=function(containerId){containerId=parseInt(containerId,10);for(var index in $scope.containers){if($scope.containers[index].key===containerId){return $scope.containers[index].value}}
return'ERROR UNKNOWN CONTAINER'};$scope.intervalText='disabled';$scope.loadUserContaineRoles=function(){$http.get("/users/loadContainerRoles.json",{params:{'angular':!0}}).then(function(result){$scope.usercontainerroles=result.data.usercontainerroles})};$scope.loadContainer=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.loadUsergroups=function(){$http.get("/users/loadUsergroups.json",{params:{'angular':!0}}).then(function(result){$scope.usergroups=result.data.usergroups})};$scope.loadDateformats=function(){$http.get("/users/loadDateformats.json",{params:{'angular':!0}}).then(function(result){$scope.dateformats=result.data.dateformats;$scope.post.User.dateformat=result.data.defaultDateFormat})};$scope.loadContainerPermissions=function(){if($scope.post.User.usercontainerroles._ids.length===0){$scope.userContainerRoleContainerPermissions={};return}
$http.get("/users/loadContainerPermissions.json",{params:{'angular':!0,'usercontainerRoleIds[]':$scope.post.User.usercontainerroles._ids}}).then(function(result){$scope.userContainerRoleContainerPermissions=result.data.userContainerRoleContainerPermissions})};$scope.$watch('post.User.dashboard_tab_rotation',function(){var dashboardTabRotationInterval=$scope.post.User.dashboard_tab_rotation;if(dashboardTabRotationInterval===0){$scope.intervalText='disabled'}else{var min=parseInt(dashboardTabRotationInterval/60,10);var sec=parseInt(dashboardTabRotationInterval%60,10);if(min>0){$scope.intervalText=min+' minutes, '+sec+' seconds';return}
$scope.intervalText=sec+' seconds'}},!0);$scope.submit=function(){var ContainersUsersMemberships={};for(var containerId in $scope.selectedUserContainerWithPermission){ContainersUsersMemberships[containerId]=$scope.selectedUserContainerWithPermission[containerId].permission_level}
$scope.post.User.ContainersUsersMemberships=ContainersUsersMemberships;$http.post("/users/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('UsersEdit',{id:result.data.user.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('UsersIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('post.User.usercontainerroles._ids',function(){$scope.loadContainerPermissions()},!0);$scope.$watch('selectedUserContainers',function(){if($scope.selectedUserContainers.length===0){$scope.selectedUserContainerWithPermission={};return}
for(var index in $scope.selectedUserContainers){var containerId=$scope.selectedUserContainers[index];if(!$scope.selectedUserContainerWithPermission.hasOwnProperty(containerId)){var permission_level=1;if(containerId===1){permission_level=2}
$scope.selectedUserContainerWithPermission[containerId]={name:getContainerName(containerId),container_id:parseInt(containerId,10),permission_level:permission_level.toString()}}}
for(var containerId in $scope.selectedUserContainerWithPermission){containerId=parseInt(containerId,10);if($scope.selectedUserContainers.indexOf(containerId)===-1){delete $scope.selectedUserContainerWithPermission[containerId]}}},!0);$scope.loadUserContaineRoles();$scope.loadContainer();$scope.loadUsergroups();$scope.loadDateformats()});angular.module('openITCOCKPIT').controller('UsersLdapController',function($scope,$http,$state,NotyService,RedirectService){$scope.data={selectedSamAccountNameIndex:null,createAnother:!1};$scope.init=!0;var clearForm=function(){$scope.selectedUserContainers=[];$scope.selectedUserContainerWithPermission={};$scope.data.selectedSamAccountNameIndex=null;$scope.post={User:{firstname:'',lastname:'',email:'',phone:'',is_active:1,showstatsinmenu:0,paginatorlength:25,dashboard_tab_rotation:0,recursive_browser:0,dateformat:'%H:%M:%S - %d.%m.%Y',timezone:'Europe/Berlin',password:'',confirm_password:'',samaccountname:'',ldap_dn:'',usergroup_id:0,usercontainerroles:{_ids:[]},ContainersUsersMemberships:{},}}};clearForm();var getContainerName=function(containerId){containerId=parseInt(containerId,10);for(var index in $scope.containers){if($scope.containers[index].key===containerId){return $scope.containers[index].value}}
return'ERROR UNKNOWN CONTAINER'};$scope.intervalText='disabled';$scope.loadLdapConfig=function(){var params={'angular':!0};$http.get("/angular/ldap_configuration.json",{params:params}).then(function(result){$scope.ldapConfig=result.data.ldapConfig})};$scope.loadLdapUsersByString=function(searchString){$scope.data.selectedSamAccountNameIndex=null;$http.get("/users/loadLdapUserByString.json",{params:{'angular':!0,'samaccountname':searchString}}).then(function(result){$scope.ldapUsers=result.data.ldapUsers;$scope.init=!1})};$scope.loadUserContaineRoles=function(){$http.get("/users/loadContainerRoles.json",{params:{'angular':!0}}).then(function(result){$scope.usercontainerroles=result.data.usercontainerroles})};$scope.loadContainer=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.loadUsergroups=function(){$http.get("/users/loadUsergroups.json",{params:{'angular':!0}}).then(function(result){$scope.usergroups=result.data.usergroups})};$scope.loadDateformats=function(){$http.get("/users/loadDateformats.json",{params:{'angular':!0}}).then(function(result){$scope.dateformats=result.data.dateformats;$scope.post.User.dateformat=result.data.defaultDateFormat})};$scope.loadContainerPermissions=function(){if($scope.post.User.usercontainerroles._ids.length===0){$scope.userContainerRoleContainerPermissions={};return}
$http.get("/users/loadContainerPermissions.json",{params:{'angular':!0,'usercontainerRoleIds[]':$scope.post.User.usercontainerroles._ids}}).then(function(result){$scope.userContainerRoleContainerPermissions=result.data.userContainerRoleContainerPermissions})};$scope.$watch('post.User.dashboard_tab_rotation',function(){var dashboardTabRotationInterval=$scope.post.User.dashboard_tab_rotation;if(dashboardTabRotationInterval===0){$scope.intervalText='disabled'}else{var min=parseInt(dashboardTabRotationInterval/60,10);var sec=parseInt(dashboardTabRotationInterval%60,10);if(min>0){$scope.intervalText=min+' minutes, '+sec+' seconds';return}
$scope.intervalText=sec+' seconds'}},!0);$scope.submit=function(){var ContainersUsersMemberships={};for(var containerId in $scope.selectedUserContainerWithPermission){ContainersUsersMemberships[containerId]=$scope.selectedUserContainerWithPermission[containerId].permission_level}
$scope.post.User.ContainersUsersMemberships=ContainersUsersMemberships;$http.post("/users/addFromLdap.json?angular=true",$scope.post).then(function(result){var url=$state.href('UsersEdit',{id:result.data.user.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('UsersIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('post.User.usercontainerroles._ids',function(){$scope.loadContainerPermissions()},!0);$scope.$watch('selectedUserContainers',function(){if($scope.selectedUserContainers.length===0){$scope.selectedUserContainerWithPermission={};return}
for(var index in $scope.selectedUserContainers){var containerId=$scope.selectedUserContainers[index];if(!$scope.selectedUserContainerWithPermission.hasOwnProperty(containerId)){var permission_level=1;if(containerId===1){permission_level=2}
$scope.selectedUserContainerWithPermission[containerId]={name:getContainerName(containerId),container_id:parseInt(containerId,10),permission_level:permission_level.toString()}}}
for(var containerId in $scope.selectedUserContainerWithPermission){containerId=parseInt(containerId,10);if($scope.selectedUserContainers.indexOf(containerId)===-1){delete $scope.selectedUserContainerWithPermission[containerId]}}},!0);$scope.$watch('data.selectedSamAccountNameIndex',function(){if($scope.init){return}
var index=parseInt($scope.data.selectedSamAccountNameIndex,10);if(typeof $scope.ldapUsers[index]!=="undefined"){$scope.post.User.firstname=$scope.ldapUsers[index].givenname;$scope.post.User.lastname=$scope.ldapUsers[index].sn;$scope.post.User.email=$scope.ldapUsers[index].email;$scope.post.User.samaccountname=$scope.ldapUsers[index].samaccountname;$scope.post.User.ldap_dn=$scope.ldapUsers[index].dn}});$scope.loadLdapConfig();$scope.loadLdapUsersByString('');$scope.loadUserContaineRoles();$scope.loadContainer();$scope.loadUsergroups();$scope.loadDateformats()});angular.module('openITCOCKPIT').controller('UsersEditController',function($scope,$http,$stateParams,$state,NotyService,RedirectService,$q){$scope.id=$stateParams.id;$scope.isLdapUser=!1;var getContainerName=function(containerId){containerId=parseInt(containerId,10);for(var index in $scope.containers){if($scope.containers[index].key===containerId){return $scope.containers[index].value}}
return'ERROR UNKNOWN CONTAINER'};$scope.intervalText='disabled';$scope.load=function(){$scope.selectedUserContainers=[];$scope.selectedUserContainerWithPermission={};$http.get("/users/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.isLdapUser=result.data.isLdapUser;var data=result.data.user;data.password='';data.confirm_password='';$scope.selectedUserContainers=data.containers._ids;delete data.containers;for(var containerId in data.ContainersUsersMemberships){$scope.selectedUserContainerWithPermission[containerId]={name:getContainerName(containerId),container_id:parseInt(containerId,10),permission_level:data.ContainersUsersMemberships[containerId].toString()}}
data.ContainersUsersMemberships={};$scope.post={User:data}},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadUserContaineRoles=function(){return $http.get("/users/loadContainerRoles.json",{params:{'angular':!0}}).then(function(result){$scope.usercontainerroles=result.data.usercontainerroles})};$scope.loadContainer=function(){return $http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.loadUsergroups=function(){return $http.get("/users/loadUsergroups.json",{params:{'angular':!0}}).then(function(result){$scope.usergroups=result.data.usergroups})};$scope.loadDateformats=function(){$http.get("/users/loadDateformats.json",{params:{'angular':!0}}).then(function(result){$scope.dateformats=result.data.dateformats;$scope.post.User.dateformat=result.data.defaultDateFormat})};$scope.loadContainerPermissions=function(){if(typeof $scope.post.User.usercontainerroles!=="undefined"){if($scope.post.User.usercontainerroles._ids.length===0){$scope.userContainerRoleContainerPermissions={};return}}
$http.get("/users/loadContainerPermissions.json",{params:{'angular':!0,'usercontainerRoleIds[]':$scope.post.User.usercontainerroles._ids}}).then(function(result){$scope.userContainerRoleContainerPermissions=result.data.userContainerRoleContainerPermissions})};$scope.$watch('post.User.dashboard_tab_rotation',function(){var dashboardTabRotationInterval=$scope.post.User.dashboard_tab_rotation;if(dashboardTabRotationInterval===0){$scope.intervalText='disabled'}else{var min=parseInt(dashboardTabRotationInterval/60,10);var sec=parseInt(dashboardTabRotationInterval%60,10);if(min>0){$scope.intervalText=min+' minutes, '+sec+' seconds';return}
$scope.intervalText=sec+' seconds'}},!0);$scope.submit=function(){var ContainersUsersMemberships={};for(var containerId in $scope.selectedUserContainerWithPermission){ContainersUsersMemberships[containerId]=$scope.selectedUserContainerWithPermission[containerId].permission_level}
$scope.post.User.ContainersUsersMemberships=ContainersUsersMemberships;$http.post("/users/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('UsersEdit',{id:result.data.user.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('UsersIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('post.User.usercontainerroles._ids',function(){if(typeof $scope.post.User.usercontainerroles==="undefined"){return}
$scope.loadContainerPermissions()},!0);$scope.$watch('selectedUserContainers',function(){if(typeof $scope.selectedUserContainers==="undefined"){return}
if($scope.selectedUserContainers.length===0){$scope.selectedUserContainerWithPermission={};return}
for(var index in $scope.selectedUserContainers){var containerId=$scope.selectedUserContainers[index];if(!$scope.selectedUserContainerWithPermission.hasOwnProperty(containerId)){var permission_level=1;if(containerId===1){permission_level=2}
$scope.selectedUserContainerWithPermission[containerId]={name:getContainerName(containerId),container_id:parseInt(containerId,10),permission_level:permission_level.toString()}}}
for(var containerId in $scope.selectedUserContainerWithPermission){containerId=parseInt(containerId,10);if($scope.selectedUserContainers.indexOf(containerId)===-1){delete $scope.selectedUserContainerWithPermission[containerId]}}},!0);var promise1=$scope.loadUserContaineRoles();var promise2=$scope.loadContainer();$q.all([promise1,promise2]).then(function(result){$scope.load()});$scope.loadUsergroups();$scope.loadDateformats()});angular.module('openITCOCKPIT').controller('UsersEditFromLdapController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.errors=!1;$scope.chosenContainerroles={};$scope.post={'User':{'ldap':1,'email':'','samaccountname':null,'firstname':'','lastname':'','is_active':!0,'company':null,'position':null,'phone':null,'usergroup_id':'','ldap_dn':null,'showstatsinmenu':!1,'paginatorlength':25,'dashboard_tab_rotation':0,'recursive_browser':!1,'dateformat':'','containers':{},'ContainersUsersMemberships':{},'usercontainerroles':{'_ids':[]}}};$scope.init=!0;$scope.load=function(){$http.get("/users/editFromLdap/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post.User=result.data.user},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadUsercontainerroles=function(){$http.get("/usercontainerroles/loadUsercontainerrolesForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.usercontainerroles=result.data.usercontainerroles;$scope.usercontainerrolePermissions=result.data.usercontainerrolePermissions;$scope.init=!1})};$scope.loadContainer=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadUsergroups=function(){$http.get("/users/loadUsergroups.json",{params:{'angular':!0}}).then(function(result){$scope.usergroups=result.data.usergroups},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadDateformats=function(){$http.get("/users/loadDateformats.json",{params:{'angular':!0}}).then(function(result){$scope.dateformats=result.data.dateformats;$scope.post.User.dateformat=result.data.defaultDateFormat},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.getContainerName=function(id){for(var c in $scope.containers){if($scope.containers[c].key==id){return $scope.containers[c].value}}
return null};$scope.loadSystemsettings=function(){$http.get("/systemsettings/getSystemsettingsForAngularBySection.json",{params:{'section':'FRONTEND','angular':!0,}}).then(function(result){$scope.systemsettings=result.data.systemsettings},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/users/editFromLdap/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('UsersIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.syncMemberships=function(){var memberships=$scope.post.User.ContainersUsersMemberships
for(var key in memberships){key=parseInt(key,10);if($scope.post.User.containers._ids.indexOf(key)==-1){delete memberships[key]}}};$scope.$watch('post.User.usercontainerroles._ids',function(){if($scope.post.User.usercontainerroles._ids.length>0&&!$scope.init){$scope.chosenContainerroles={};$scope.post.User.usercontainerroles._ids.forEach(function(k){for(var i in $scope.usercontainerrolePermissions[k]){var currentValue=$scope.usercontainerrolePermissions[k][i];if($scope.chosenContainerroles.hasOwnProperty(i)){if($scope.chosenContainerroles[i]<currentValue){$scope.chosenContainerroles[i]=currentValue}}else{$scope.chosenContainerroles[i]=currentValue}}})}},!0);$scope.loadUsercontainerroles();$scope.loadContainer();$scope.loadDateformats();$scope.loadUsergroups();$scope.loadSystemsettings();$scope.load()});angular.module('openITCOCKPIT').controller('StatusmapsIndexController',function($scope,$q,$http,$timeout,QueryStringService){$scope.clearFilter=function(){$scope.filter={Host:{name:QueryStringService.getValue('filter[Host.name]',''),address:QueryStringService.getValue('filter[Host.address]',''),satellite_id:'0'},showAll:!1}};$scope.clearFilter();$scope.init=!0;$scope.mutex=!1;$scope.nodes=new vis.DataSet();$scope.edges=new vis.DataSet();$scope.nodesCount=0;$scope.isEmpty=!1;$scope.timer=null;$scope.hasBrowserRight=!1;angular.element(document).ready(function(){$scope.container=document.getElementById('statusmap');var offset=$($scope.container).offset();var height=(window.innerHeight-offset.top);$($($scope.container)).css({'height':height})});$scope.load=function(){$scope.mutex=!0;$scope.isEmpty=!1;var params={'angular':!0,'filter[Host.name]':$scope.filter.Host.name,'filter[Host.address]':$scope.filter.Host.address,'filter[Host.satellite_id]':$scope.filter.Host.satellite_id,'showAll':$scope.filter.showAll};$http.get("/statusmaps/index.json",{params:params}).then(function(result){var nodesData=result.data.statusMap.nodes;var edgesData=result.data.statusMap.edges;$scope.hasBrowserRight=result.data.hasBrowserRight;$scope.init=!1;$scope.nodesCount=nodesData.length;if(nodesData.length>0){$('#statusmap-progress-icon').show();$scope.loadVisMap(nodesData,edgesData)}else{$scope.isEmpty=!0}
$scope.mutex=!1},function errorCallback(result){console.log('Invalid JSON')})};$scope.resetVis=function(){if(!$scope.init){$('#statusmap-progress-icon .progress:first').attr('data-progress',0);$($scope.container).html('')}};$scope.loadVisMap=function(nodesData,edgesData){$scope.nodes.clear();$scope.edges.clear();var network=null;var colorUp='#449D44';var colorDown='#C9302C';var colorUnreachable='#92A2A8';var colorNotMonitored='#428bca';var options={clickToUse:!1,groups:{satellite:{shape:'ellipse',margin:{top:10,bottom:20,left:5,right:5}},notMonitored:{shape:'icon',color:colorNotMonitored,icon:{face:'FontAwesome',code:'\uf070',color:colorNotMonitored}},disabled:{shape:'icon',icon:{face:'FontAwesome',code:'\uf1e6'}},hostUp:{shape:'icon',color:colorUp,icon:{face:'FontAwesome',code:'\uf058',color:colorUp}},hostDown:{shape:'icon',color:colorDown,icon:{face:'FontAwesome',code:'\uf06a',color:colorDown}},hostUnreachable:{shape:'icon',color:colorUnreachable,icon:{face:'FontAwesome',code:'\uf059',color:colorUnreachable}},isInDowntimeUp:{shape:'icon',icon:{face:'FontAwesome',code:'\uf011',color:colorUp}},isInDowntimeDown:{shape:'icon',color:colorDown,icon:{face:'FontAwesome',code:'\uf011',color:colorDown}},isInDowntimeUnreachable:{shape:'icon',color:colorUnreachable,icon:{face:'FontAwesome',code:'\uf011',color:colorUnreachable}},isAcknowledgedUp:{shape:'icon',color:colorUp,icon:{face:'FontAwesome',code:'\uf007',color:colorUp}},isAcknowledgedDown:{shape:'icon',color:colorDown,icon:{face:'FontAwesome',code:'\uf007',color:colorDown}},isAcknowledgedUnreachable:{shape:'icon',color:colorUnreachable,icon:{face:'FontAwesome',code:'\uf007',color:colorUnreachable}},isAcknowledgedAndIsInDowntimeUp:{shape:'icon',color:colorUp,icon:{face:'FontAwesome',code:'\uf0f0',color:colorUp}},isAcknowledgedAndIsInDowntimeDown:{shape:'icon',color:colorDown,icon:{face:'FontAwesome',code:'\uf0f0',color:colorDown}},isAcknowledgedAndIsInDowntimeUnreachable:{shape:'icon',color:colorUnreachable,icon:{face:'FontAwesome',code:'\uf0f0',color:colorUnreachable}}},nodes:{borderWidth:0.5,},edges:{width:0.2,smooth:{enabled:!1}},physics:{forceAtlas2Based:{gravitationalConstant:-138,centralGravity:0.02,springLength:100},minVelocity:0.75,solver:"forceAtlas2Based",},interaction:{hover:!0,dragNodes:!1,keyboard:{enabled:!1},hideEdgesOnDrag:!0},layout:{randomSeed:1000,improvedLayout:!1}};$scope.nodes.add(nodesData);$scope.edges.add(edgesData);var data={nodes:$scope.nodes,edges:$scope.edges};network=new vis.Network($scope.container,data,options);network.fit({locked:!1,animation:{duration:500,easingFunction:'linear'}});network.on('stabilizationProgress',function(params){var currentPercentage=Math.round(params.iterations/params.total*100);$('#statusmap-progress-icon .progress:first').attr('data-progress',currentPercentage)});network.once('stabilizationIterationsDone',function(){$('#statusmap-progress-icon').hide();network.setOptions({physics:!1})});network.on('click',function(properties){if(properties.nodes.length===0){network.fit({locked:!1,animation:{duration:500,easingFunction:'linear'}});return}
var nodeId=properties.nodes[0];if(nodeId===0){return!1}
var node=data.nodes.get(nodeId);$q.all([$http.get("/hosts/hoststatus/"+node.uuid+".json",{params:{'angular':!0}}),$http.get("/statusmaps/hostAndServicesSummaryStatus/"+node.hostId,{params:{'angular':!0}})]).then(function(results){var bigBoxIcon=$scope.getIconForHoststatus(results[0].data.hoststatus.Hoststatus);var title=node.title;if($scope.hasBrowserRight){title='<a href="/hosts/browser/'+node.hostId+'" target="_blank" class="txt-color-white">'+node.title+'</a>'}
$.bigBox({title:title,content:results[1].data,icon:'fa '+bigBoxIcon+' flash animated',timeout:10000});return})})};$scope.$watch('filter',function(){if($scope.mutex){return}
$scope.resetVis();$scope.load()},!0);$scope.getIconForHoststatus=function(hoststatus){var statusIcon='fa-check-circle';if(typeof hoststatus.current_state==='undefined'){return'fa-eye-slash'}
if(hoststatus.current_state>0){statusIcon='fa-exclamation-circle'}
if(hoststatus.scheduled_downtime_depth>0){statusIcon='fa-power-off'}else if(hoststatus.scheduled_downtime_depth>0&&hoststatus.problem_has_been_acknowledged==1){statusIcon='fa-user-md'}else if(hoststatus.scheduled_downtime_depth>0&&hoststatus.problem_has_been_acknowledged==0){statusIcon='fa-user'}
return statusIcon}});angular.module('openITCOCKPIT').controller('ConfigurationFilesIndexController',function($scope,$http){$scope.load=function(){var params={'angular':!0,};$http.get("/ConfigurationFiles/index.json",{params:params}).then(function(result){$scope.configFileCategories=result.data.configFileCategories;$scope.init=!1})};$scope.load()});angular.module('openITCOCKPIT').controller('ConfigurationFilesEditController',function($scope,$http,$state,RedirectService,NotyService,$stateParams){$scope.isRestoring=!1;$scope.load=function(){var params={'angular':!0};$http.get("/ConfigurationFiles/edit/"+$stateParams.configfile+".json",{params:params}).then(function(result){$scope.ConfigFile=result.data.ConfigFile;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.askRestoreDefault=function(){$('#angularConfirmRestoreDefault').modal('show')};$scope.restoreDefault=function(dbKey){$scope.isRestoring=!0;$http.post("/ConfigurationFiles/restorDefault/"+dbKey+".json?angular=true",{}).then(function(result){console.log('Data saved successfully');NotyService.genericSuccess({message:result.data.message});RedirectService.redirectWithFallback('ConfigurationFilesIndex')},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('ContactgroupsAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Contactgroup:{description:'',container:{parent_id:null},contacts:{_ids:[]}}}};clearForm();$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/contactgroups/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadContacts=function(){var id=$scope.post.Contactgroup.container.parent_id;$http.post("/contactgroups/loadContacts/"+id+".json?angular=true",{}).then(function(result){$scope.contacts=result.data.contacts})};$scope.submit=function(){$http.post("/contactgroups/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('ContactgroupsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('ContactgroupsIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadContainers();$scope.$watch('post.Contactgroup.container.parent_id',function(){if($scope.init){return}
if(!$scope.post.Contactgroup.container.parent_id){return}
$scope.loadContacts()},!0)});angular.module('openITCOCKPIT').controller('ContactgroupsUsedByController',function($scope,$http,$stateParams,$state){$scope.id=$stateParams.id;$scope.total=0;$scope.load=function(){$http.get("/contactgroups/usedBy/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.contactgroupWithRelations=result.data.contactgroupWithRelations;$scope.total=$scope.getTotal()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.getTotal=function(){var total=0;total+=$scope.contactgroupWithRelations.Hosttemplate.length;total+=$scope.contactgroupWithRelations.Host.length;total+=$scope.contactgroupWithRelations.Servicetemplate.length;total+=$scope.contactgroupWithRelations.Service.length;total+=$scope.contactgroupWithRelations.Hostescalation.length;total+=$scope.contactgroupWithRelations.Serviceescalation.length;return total};$scope.load()});angular.module('openITCOCKPIT').controller('ContactgroupsEditController',function($scope,$http,SudoService,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/contactgroups/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadContactgroup=function(){var params={'angular':!0};$http.get("/contactgroups/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post=result.data.contactgroup;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContacts=function(){var id=$scope.post.Contactgroup.container.parent_id;$http.post("/contactgroups/loadContacts/"+id+".json?angular=true",{}).then(function(result){$scope.contacts=result.data.contacts})};$scope.submit=function(){$http.post("/contactgroups/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('ContactgroupsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ContactgroupsIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers();$scope.loadContactgroup();$scope.$watch('post.Contactgroup.container.parent_id',function(){if($scope.init){return}
$scope.loadContacts()},!0)});angular.module('openITCOCKPIT').controller('ContactgroupsIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Containers.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Containers:{name:''},Contactgroups:{description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/contactgroups/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.Containers.name,'filter[Contactgroups.description]':$scope.filter.Contactgroups.description};$http.get("/contactgroups/index.json",{params:params}).then(function(result){$scope.contactgroups=result.data.all_contactgroups;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.contactgroups){for(var key in $scope.contactgroups){if($scope.contactgroups[key].Contactgroup.allow_edit===!0){var id=$scope.contactgroups[key].Contactgroup.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(contactgroup){var object={};object[contactgroup.Contactgroup.id]=contactgroup.Contactgroup.container.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.contactgroups){for(var id in selectedObjects){if(id==$scope.contactgroups[key].Contactgroup.id){if($scope.contactgroups[key].Contactgroup.allow_edit===!0){objects[id]=$scope.contactgroups[key].Contactgroup.container.name}}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ContactgroupsCopyController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){var ids=$stateParams.ids.split(',');if(ids.length===0||ids[0]===''){RedirectService.redirectWithFallback('ContactgroupsIndex');return}
$scope.load=function(){$http.get("/contactgroups/copy/"+ids.join('/')+".json",{params:{'angular':!0,}}).then(function(result){$scope.sourceContactgroups=[];for(var key in result.data.contactgroups){$scope.sourceContactgroups.push({Source:{id:result.data.contactgroups[key].Contactgroup.id,name:result.data.contactgroups[key].Contactgroup.container.name,},Contactgroup:{container:{name:result.data.contactgroups[key].Contactgroup.container.name},description:result.data.contactgroups[key].Contactgroup.description}})}
$scope.init=!1})};$scope.copy=function(){$http.post("/contactgroups/copy/.json?angular=true",{data:$scope.sourceContactgroups}).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('ContactgroupsIndex')},function errorCallback(result){NotyService.genericError();$scope.sourceContactgroups=result.data.result})};$scope.load()});angular.module('openITCOCKPIT').controller('HostdependenciesAddController',function($scope,$http,$state,$stateParams,$location,NotyService,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.post={Hostdependency:{container_id:null,inherits_parent:0,timeperiod_id:null,execution_fail_on_up:1,execution_fail_on_down:1,execution_fail_on_unreachable:1,execution_fail_on_pending:1,execution_none:1,notification_fail_on_up:1,notification_fail_on_down:1,notification_fail_on_unreachable:1,notification_fail_on_pending:1,notification_none:1,hosts:{_ids:[]},hosts_dependent:{_ids:[]},hostgroups:{_ids:[]},hostgroups_dependent:{_ids:[]}}};$scope.containers={};$scope.loadContainer=function(){var params={'angular':!0};$http.get("/hostdependencies/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadElementsByContainerId=function(){$http.get("/hostdependencies/loadElementsByContainerId/"+$scope.post.Hostdependency.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.hosts=result.data.hosts;$scope.hosts_dependent=result.data.hostsDependent;$scope.hostgroups=result.data.hostgroups;$scope.hostgroups_dependent=result.data.hostgroupsDependent;$scope.timeperiods=result.data.timeperiods;$scope.processChosenHosts();$scope.processChosenDependentHosts();$scope.processChosenHostgroups();$scope.processChosenDependentHostgroups()})};$scope.loadHosts=function(searchString){if($scope.post.Hostdependency.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostdependency.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostdependency.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})}};$scope.loadDependentHosts=function(searchString){if($scope.post.Hostdependency.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostdependency.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostdependency.hosts_dependent._ids}}).then(function(result){$scope.hosts_dependent=result.data.hosts})}};$scope.submit=function(){console.log($scope.post);$http.post("/hostdependencies/add.json?angular=true",$scope.post).then(function(result){var hostdependencyEditUrl=$state.href('HostdependenciesEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+hostdependencyEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HostdependenciesIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenHosts=function(){for(var key in $scope.hosts){if(in_array($scope.hosts[key].key,$scope.post.Hostdependency.hosts_dependent._ids)){$scope.hosts[key].disabled=!0}else{$scope.hosts[key].disabled=!1}}};$scope.processChosenDependentHosts=function(){for(var key in $scope.hosts_dependent){if(in_array($scope.hosts_dependent[key].key,$scope.post.Hostdependency.hosts._ids)){$scope.hosts_dependent[key].disabled=!0}else{$scope.hosts_dependent[key].disabled=!1}}};$scope.processChosenHostgroups=function(){for(var key in $scope.hostgroups){if(in_array($scope.hostgroups[key].key,$scope.post.Hostdependency.hostgroups_dependent._ids)){$scope.hostgroups[key].disabled=!0}else{$scope.hostgroups[key].disabled=!1}}};$scope.processChosenDependentHostgroups=function(){for(var key in $scope.hostgroups_dependent){if(in_array($scope.hostgroups_dependent[key].key,$scope.post.Hostdependency.hostgroups._ids)){$scope.hostgroups_dependent[key].disabled=!0}else{$scope.hostgroups_dependent[key].disabled=!1}}};$scope.$watch('post.Hostdependency.container_id',function(){if($scope.post.Hostdependency.container_id!=null){$scope.loadElementsByContainerId()}},!0);$scope.$watch('post.Hostdependency.hosts._ids',function(){if($scope.init){return}
$scope.processChosenDependentHosts()},!0);$scope.$watch('post.Hostdependency.hosts_dependent._ids',function(){if($scope.init){return}
$scope.processChosenHosts()},!0);$scope.$watch('post.Hostdependency.hostgroups._ids',function(){if($scope.init){return}
$scope.processChosenDependentHostgroups()},!0);$scope.$watch('post.Hostdependency.hostgroups_dependent._ids',function(){if($scope.init){return}
$scope.processChosenHostgroups()},!0);$scope.loadContainer()});angular.module('openITCOCKPIT').controller('HostdependenciesIndexController',function($scope,$http,MassChangeService,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','HostdependenciesIndexController.id'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;$scope.hostFocus=!0;$scope.hostDependentFocus=!1;$scope.hostgroupFocus=!0;$scope.hostgroupDependentFocus=!1;var defaultFilter=function(){$scope.filter={Hostdependencies:{inherits_parent:'',execution_fail_on_up:'',execution_fail_on_down:'',execution_fail_on_unreachable:'',execution_fail_on_pending:'',execution_none:'',notification_fail_on_up:'',notification_fail_on_down:'',notification_fail_on_unreachable:'',notification_fail_on_pending:'',notification_none:''},Hosts:{name:''},HostsDependent:{name:''},Hostgroups:{name:''},HostgroupsDependent:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hostdependencies/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/hostdependencies/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'page':$scope.currentPage,'filter[Hostdependencies.inherits_parent]':$scope.filter.Hostdependencies.inherits_parent,'filter[Hostdependencies.execution_fail_on_up]':$scope.filter.Hostdependencies.execution_fail_on_up,'filter[Hostdependencies.execution_fail_on_down]':$scope.filter.Hostdependencies.execution_fail_on_down,'filter[Hostdependencies.execution_fail_on_unreachable]':$scope.filter.Hostdependencies.execution_fail_on_unreachable,'filter[Hostdependencies.execution_fail_on_pending]':$scope.filter.Hostdependencies.execution_fail_on_pending,'filter[Hostdependencies.execution_none]':$scope.filter.Hostdependencies.execution_none,'filter[Hostdependencies.notification_fail_on_up]':$scope.filter.Hostdependencies.notification_fail_on_up,'filter[Hostdependencies.notification_fail_on_down]':$scope.filter.Hostdependencies.notification_fail_on_down,'filter[Hostdependencies.notification_fail_on_unreachable]':$scope.filter.Hostdependencies.notification_fail_on_unreachable,'filter[Hostdependencies.notification_fail_on_pending]':$scope.filter.Hostdependencies.notification_fail_on_pending,'filter[Hostdependencies.notification_none]':$scope.filter.Hostdependencies.notification_none,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[HostsDependent.name]':$scope.filter.HostsDependent.name,'filter[Hostgroups.name]':$scope.filter.Hostgroups.name,'filter[HostgroupsDependent.name]':$scope.filter.HostgroupsDependent.name}}).then(function(result){$scope.hostdependencies=result.data.all_hostdependencies;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hostdependencies){for(var key in $scope.hostdependencies){if($scope.hostdependencies[key].allowEdit===!0){var id=$scope.hostdependencies[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(hostdependency){var object={};object[hostdependency.id]=$scope.objectName+hostdependency.id;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hostdependencies){for(var id in selectedObjects){if(id==$scope.hostdependencies[key].id){if($scope.hostdependencies[key].allowEdit===!0){objects[id]=$scope.objectName+$scope.hostdependencies[key].id}}}}
return objects};defaultFilter();$scope.load();SortService.setCallback($scope.load);$scope.$watch('filter',function(){if($scope.init){return}
$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('HostdependenciesEditController',function($scope,$http,$state,$stateParams,$location,NotyService,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.post={Hostdependency:{container_id:null,inherits_parent:0,timeperiod_id:null,execution_fail_on_up:1,execution_fail_on_down:1,execution_fail_on_unreachable:1,execution_fail_on_pending:1,execution_none:1,notification_fail_on_up:1,notification_fail_on_down:1,notification_fail_on_unreachable:1,notification_fail_on_pending:1,notification_none:1,hosts:{_ids:[]},hosts_dependent:{_ids:[]},hostgroups:{_ids:[]},hostgroups_dependent:{_ids:[]}}};$scope.containers={};$scope.load=function(){$http.get("/hostdependencies/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.hostdependency=result.data.hostdependency;$scope.post.Hostdependency.container_id=$scope.hostdependency.container_id;$scope.post.Hostdependency.inherits_parent=$scope.hostdependency.inherits_parent;$scope.post.Hostdependency.timeperiod_id=$scope.hostdependency.timeperiod_id;$scope.post.Hostdependency.execution_fail_on_up=$scope.hostdependency.execution_fail_on_up;$scope.post.Hostdependency.execution_fail_on_down=$scope.hostdependency.execution_fail_on_down;$scope.post.Hostdependency.execution_fail_on_unreachable=$scope.hostdependency.execution_fail_on_unreachable;$scope.post.Hostdependency.execution_fail_on_pending=$scope.hostdependency.execution_fail_on_pending;$scope.post.Hostdependency.execution_none=$scope.hostdependency.execution_none;$scope.post.Hostdependency.notification_fail_on_up=$scope.hostdependency.notification_fail_on_up;$scope.post.Hostdependency.notification_fail_on_down=$scope.hostdependency.notification_fail_on_down;$scope.post.Hostdependency.notification_fail_on_unreachable=$scope.hostdependency.notification_fail_on_unreachable;$scope.post.Hostdependency.notification_fail_on_pending=$scope.hostdependency.notification_fail_on_pending;$scope.post.Hostdependency.notification_none=$scope.hostdependency.notification_none;for(var hostIndex in $scope.hostdependency.hosts){if($scope.hostdependency.hosts[hostIndex]._joinData.dependent===0){$scope.post.Hostdependency.hosts._ids.push($scope.hostdependency.hosts[hostIndex].id)}else{$scope.post.Hostdependency.hosts_dependent._ids.push($scope.hostdependency.hosts[hostIndex].id)}}
for(var hostgroupIndex in $scope.hostdependency.hostgroups){if($scope.hostdependency.hostgroups[hostgroupIndex]._joinData.dependent===0){$scope.post.Hostdependency.hostgroups._ids.push($scope.hostdependency.hostgroups[hostgroupIndex].id)}else{$scope.post.Hostdependency.hostgroups_dependent._ids.push($scope.hostdependency.hostgroups[hostgroupIndex].id)}}},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}});$scope.loadContainer()};$scope.loadContainer=function(){var params={'angular':!0};$http.get("/hostdependencies/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadElementsByContainerId=function(){$http.get("/hostdependencies/loadElementsByContainerId/"+$scope.post.Hostdependency.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.hosts=result.data.hosts;$scope.hosts_dependent=result.data.hostsDependent;$scope.hostgroups=result.data.hostgroups;$scope.hostgroups_dependent=result.data.hostgroupsDependent;$scope.timeperiods=result.data.timeperiods;$scope.processChosenHosts();$scope.processChosenDependentHosts();$scope.processChosenHostgroups();$scope.processChosenDependentHostgroups()})};$scope.loadHosts=function(searchString){if($scope.post.Hostdependency.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostdependency.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostdependency.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})}};$scope.loadDependentHosts=function(searchString){if($scope.post.Hostdependency.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostdependency.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostdependency.hosts_dependent._ids}}).then(function(result){$scope.hosts_dependent=result.data.hosts})}};$scope.submit=function(){$http.post("/hostdependencies/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var hostdependencyEditUrl=$state.href('HostdependenciesEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+hostdependencyEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HostdependenciesIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenHosts=function(){for(var key in $scope.hosts){if(in_array($scope.hosts[key].key,$scope.post.Hostdependency.hosts_dependent._ids)){$scope.hosts[key].disabled=!0}else{$scope.hosts[key].disabled=!1}}};$scope.processChosenDependentHosts=function(){for(var key in $scope.hosts_dependent){if(in_array($scope.hosts_dependent[key].key,$scope.post.Hostdependency.hosts._ids)){$scope.hosts_dependent[key].disabled=!0}else{$scope.hosts_dependent[key].disabled=!1}}};$scope.processChosenHostgroups=function(){for(var key in $scope.hostgroups){if(in_array($scope.hostgroups[key].key,$scope.post.Hostdependency.hostgroups_dependent._ids)){$scope.hostgroups[key].disabled=!0}else{$scope.hostgroups[key].disabled=!1}}};$scope.processChosenDependentHostgroups=function(){for(var key in $scope.hostgroups_dependent){if(in_array($scope.hostgroups_dependent[key].key,$scope.post.Hostdependency.hostgroups._ids)){$scope.hostgroups_dependent[key].disabled=!0}else{$scope.hostgroups_dependent[key].disabled=!1}}};$scope.$watch('post.Hostdependency.container_id',function(){if($scope.post.Hostdependency.container_id!=null){$scope.loadElementsByContainerId()}},!0);$scope.$watch('post.Hostdependency.hosts._ids',function(){if($scope.init){return}
$scope.processChosenDependentHosts()},!0);$scope.$watch('post.Hostdependency.hosts_dependent._ids',function(){if($scope.init){return}
$scope.processChosenHosts()},!0);$scope.$watch('post.Hostdependency.hostgroups._ids',function(){if($scope.init){return}
$scope.processChosenDependentHostgroups()},!0);$scope.$watch('post.Hostdependency.hostgroups_dependent._ids',function(){if($scope.init){return}
$scope.processChosenHostgroups()},!0);$scope.load()});angular.module('openITCOCKPIT').controller('InstantreportsGenerateController',function($rootScope,$scope,$stateParams,$http,$timeout,NotyService,QueryStringService,$httpParamSerializer){$scope.init=!0;$scope.errors=null;var now=new Date();$scope.tabName='reportConfig';$scope.post={instantreport_id:null,report_format:2,from_date:date('d.m.Y',now.getTime()/1000-(3600*24*30)),to_date:date('d.m.Y',now.getTime()/1000)};$scope.post.instantreport_id=parseInt($stateParams.id,10);$scope.reportData={};$scope.instantreports=[];$scope.loadInstantreports=function(searchString){$http.get("/instantreports/index.json",{params:{'angular':!0,'filter[Instantreport.name]':searchString}}).then(function(result){$scope.instantreports=result.data.instantreports})};$scope.createInstantReport=function(){if($scope.post.report_format===1){var GETParams={'angular':!0,'data[from_date]':$scope.post.from_date,'data[to_date]':$scope.post.to_date};$http.get("/instantreports/createPdfReport.json",{params:GETParams}).then(function(result){window.location='/instantreports/createPdfReport.pdf?'+$httpParamSerializer(GETParams)},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}else{$http.post("/instantreports/generate/"+$scope.post.instantreport_id+".json",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.reportMessage.successMessage});$scope.errors=null;$scope.reportData=result.data.instantReport.reportData},function errorCallback(result){NotyService.genericError({message:$scope.reportMessage.errorMessage});if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}};$scope.loadInstantreports()});angular.module('openITCOCKPIT').controller('InstantreportsEditController',function($scope,$state,$stateParams,$location,$http,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.init=!0;$scope.loadContainer=function(){$http.get("/instantreports/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadInstantreport=function(){var params={'angular':!0};$http.get("/instantreports/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post=result.data.instantreport;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}});$scope.loadContainer()};$scope.loadTimeperiods=function(){$http.get("/timeperiods/loadTimeperiodsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id}}).then(function(result){$scope.timeperiods=result.data.timeperiods})};$scope.loadHostgroups=function(){if($scope.init){return}
if($scope.post.Instantreport.container_id){$http.get("/hostgroups/loadHosgroupsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'selected[]':$scope.post.Instantreport.hostgroups._ids}}).then(function(result){$scope.hostgroups=result.data.hostgroups})}};$scope.loadHosts=function(searchString){if($scope.post.Instantreport.container_id){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Instantreport.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})}};$scope.loadServicegroups=function(){if($scope.init){return}
if($scope.post.Instantreport.container_id){$http.get("/servicegroups/loadServicegroupsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'selected[]':$scope.post.Instantreport.servicegroups._ids}}).then(function(result){$scope.servicegroups=result.data.servicegroups})}};$scope.loadServices=function(searchString){if($scope.post.Instantreport.container_id){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'filter[Host.name]':searchString,'filter[Service.servicename]':searchString,'selected[]':$scope.post.Instantreport.services._ids}}).then(function(result){$scope.services=result.data.services})}};$scope.loadUsers=function(){$http.get("/users/loadUsersByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'selected[]':$scope.post.Instantreport.users._ids}}).then(function(result){$scope.users=result.data.users})};$scope.submit=function(){$http.post("/instantreports/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:'<u><a href="'+$location.absUrl()+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('InstantreportsIndex')},function errorCallback(result){if(result.data.hasOwnProperty('error')){NotyService.genericError();$scope.errors=result.data.error}})};$scope.resetOnTypeChange=function(){$scope.post.Instantreport.hostgroups._ids=[];$scope.post.Instantreport.hosts._ids=[];$scope.post.Instantreport.servicegroups._ids=[];$scope.post.Instantreport.services._ids=[]};$scope.$watch('post.Instantreport.container_id',function(){if($scope.init){return}
switch($scope.post.Instantreport.type){case 1:$scope.loadHostgroups('');break;case 2:$scope.loadHosts('');break;case 3:$scope.loadServicegroups('');break;case 4:$scope.loadServices('');break}
$scope.loadTimeperiods('');$scope.loadUsers('')},!0);$scope.$watch('post.Instantreport.type',function(newValue,oldValue){if($scope.init){return}
if(!$scope.post.Instantreport.container_id){return}
if(oldValue===null){return}
$scope.resetOnTypeChange();switch($scope.post.Instantreport.type){case 1:$scope.loadHostgroups('');break;case 2:$scope.loadHosts('');break;case 3:$scope.loadServicegroups('');break;case 4:$scope.loadServices('');break}},!0);$scope.$watch('post.Instantreport.send_email',function(){if($scope.init){return}
if(!$scope.post.Instantreport.send_email){$scope.post.Instantreport.send_interval=0;$scope.post.Instantreport.users._ids=[]}},!0);$scope.loadInstantreport()});angular.module('openITCOCKPIT').controller('InstantreportsIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Instantreports.name');SortService.setDirection('asc');$scope.currentPage=1;var defaultFilter=function(){$scope.filter={instantreport:{name:'',evaluation:{hosts:!1,hostsandservices:!1,services:!1},type:{hostgroups:!1,hosts:!1,servicegroups:!1,services:!1}}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/instantreports/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var evaluationTypes=_.filter($scope.filter.instantreport.evaluation,function(value){return value!==!1});var objectTypes=_.filter($scope.filter.instantreport.type,function(value){return value!==!1});$http.get("/instantreports/index.json",{params:{'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Instantreports.name]':$scope.filter.instantreport.name,'filter[Instantreports.evaluation][]':evaluationTypes,'filter[Instantreports.type][]':objectTypes}}).then(function(result){$scope.instantreports=result.data.instantreports;$scope.paging=result.data.paging;$scope.init=!1})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.selectAll=function(){if($scope.instantreports){for(var key in $scope.instantreports){var id=$scope.instantreports[key].Instantreport.id;$scope.massChange[id]=!0}}};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.instantreports){for(var id in selectedObjects){if(id==$scope.instantreports[key].Instantreport.id){objects[id]=$scope.instantreports[key].Instantreport.name}}}
return objects};$scope.getObjectForDelete=function(instantreport){var object={};object[instantreport.Instantreport.id]=instantreport.Instantreport.name;return object};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.getObjectForDelete=function(instantreport){var object={};object[instantreport.Instantreport.id]=instantreport.Instantreport.name;return object};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('InstantreportsAddController',function($scope,$state,$http,NotyService,RedirectService){$scope.post={Instantreport:{container_id:null,name:null,type:1,timeperiod_id:null,reflection:1,summary:0,downtimes:0,send_email:0,send_interval:0,evaluation:2,hostgroups:{_ids:[]},hosts:{_ids:[]},servicegroups:{_ids:[]},services:{_ids:[]},users:{_ids:[]}}};$scope.init=!0;$scope.load=function(){$http.get("/instantreports/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadTimeperiods=function(){$http.get("/timeperiods/loadTimeperiodsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id}}).then(function(result){$scope.timeperiods=result.data.timeperiods})};$scope.loadHostgroups=function(){if($scope.init){return}
if($scope.post.Instantreport.container_id){$http.get("/hostgroups/loadHosgroupsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'selected[]':$scope.post.Instantreport.hostgroups._ids}}).then(function(result){$scope.hostgroups=result.data.hostgroups})}};$scope.loadHosts=function(searchString){if($scope.post.Instantreport.container_id){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Instantreport.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})}};$scope.loadServicegroups=function(){if($scope.init){return}
if($scope.post.Instantreport.container_id){$http.get("/servicegroups/loadServicegroupsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'selected[]':$scope.post.Instantreport.servicegroups._ids}}).then(function(result){$scope.servicegroups=result.data.servicegroups})}};$scope.loadServices=function(searchString){if($scope.post.Instantreport.container_id){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'filter[Host.name]':searchString,'filter[Service.servicename]':searchString,'selected[]':$scope.post.Instantreport.services._ids}}).then(function(result){$scope.services=result.data.services})}};$scope.loadUsers=function(){$http.get("/users/loadUsersByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Instantreport.container_id,'selected[]':$scope.post.Instantreport.users._ids}}).then(function(result){$scope.users=result.data.users})};$scope.submit=function(){$http.post("/instantreports/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('InstantreportsEdit',{id:result.data.instantreport.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('InstantreportsIndex')},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;NotyService.genericError()}})};$scope.resetOnTypeChange=function(){$scope.post.Instantreport.hostgroups._ids=[];$scope.post.Instantreport.hosts._ids=[];$scope.post.Instantreport.servicegroups._ids=[];$scope.post.Instantreport.services._ids=[]};$scope.$watch('post.Instantreport.container_id',function(){if($scope.init){return}
switch($scope.post.Instantreport.type){case 1:$scope.loadHostgroups('');break;case 2:$scope.loadHosts('');break;case 3:$scope.loadServicegroups('');break;case 4:$scope.loadServices('');break}
$scope.loadTimeperiods('');$scope.loadUsers('')},!0);$scope.$watch('post.Instantreport.type',function(){if($scope.init){return}
if(!$scope.post.Instantreport.container_id){return}
$scope.resetOnTypeChange();switch($scope.post.Instantreport.type){case 1:$scope.loadHostgroups('');break;case 2:$scope.loadHosts('');break;case 3:$scope.loadServicegroups('');break;case 4:$scope.loadServices('');break}},!0);$scope.$watch('post.Instantreport.send_email',function(){if($scope.init){return}
if(!$scope.post.Instantreport.send_email){$scope.post.Instantreport.send_interval=0;$scope.post.Instantreport.users._ids=[]}else{$scope.post.Instantreport.send_interval=1}},!0);$scope.load()});angular.module('openITCOCKPIT').controller('HostescalationsIndexController',function($scope,$http,MassChangeService,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','Hostescalations.id'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;$scope.hostFocus=!0;$scope.hostExcludeFocus=!1;$scope.hostgroupFocus=!0;$scope.hostgroupExcludeFocus=!1;var defaultFilter=function(){$scope.filter={Hostescalations:{first_notification:'',last_notification:'',escalate_on_recovery:'',escalate_on_down:'',escalate_on_unreachable:'',notification_interval:null},Hosts:{name:''},HostsExcluded:{name:''},Hostgroups:{name:''},HostgroupsExcluded:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hostescalations/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/hostescalations/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'page':$scope.currentPage,'filter[Hostescalations.first_notification]':$scope.filter.Hostescalations.first_notification,'filter[Hostescalations.last_notification]':$scope.filter.Hostescalations.last_notification,'filter[Hostescalations.escalate_on_recovery]':$scope.filter.Hostescalations.escalate_on_recovery,'filter[Hostescalations.escalate_on_down]':$scope.filter.Hostescalations.escalate_on_down,'filter[Hostescalations.escalate_on_unreachable]':$scope.filter.Hostescalations.escalate_on_unreachable,'filter[Hostescalations.notification_interval]':$scope.filter.Hostescalations.notification_interval,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[HostsExcluded.name]':$scope.filter.HostsExcluded.name,'filter[Hostgroups.name]':$scope.filter.Hostgroups.name,'filter[HostgroupsExcluded.name]':$scope.filter.HostgroupsExcluded.name}}).then(function(result){$scope.hostescalations=result.data.all_hostescalations;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hostescalations){for(var key in $scope.hostescalations){if($scope.hostescalations[key].allowEdit===!0){var id=$scope.hostescalations[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(hostescalation){var object={};object[hostescalation.id]=$scope.objectName+hostescalation.id;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hostescalations){for(var id in selectedObjects){if(id==$scope.hostescalations[key].id){if($scope.hostescalations[key].allowEdit===!0){objects[id]=$scope.objectName+$scope.hostescalations[key].id}}}}
return objects};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('HostescalationsEditController',function($scope,$http,$state,$stateParams,$location,NotyService,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.post={Hostescalation:{container_id:null,first_notification:1,last_notification:5,notification_interval:7200,timeperiod_id:null,escalate_on_recovery:0,escalate_on_down:0,escalate_on_unreachable:0,contacts:{_ids:[]},contactgroups:{_ids:[]},hosts:{_ids:[]},hosts_excluded:{_ids:[]},hostgroups:{_ids:[]},hostgroups_excluded:{_ids:[]}}};$scope.containers={};$scope.load=function(){$http.get("/hostescalations/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.hostescalation=result.data.hostescalation;$scope.post.Hostescalation.container_id=$scope.hostescalation.container_id;$scope.post.Hostescalation.first_notification=$scope.hostescalation.first_notification;$scope.post.Hostescalation.last_notification=$scope.hostescalation.last_notification;$scope.post.Hostescalation.notification_interval=$scope.hostescalation.notification_interval;$scope.post.Hostescalation.timeperiod_id=$scope.hostescalation.timeperiod_id;$scope.post.Hostescalation.escalate_on_recovery=$scope.hostescalation.escalate_on_recovery;$scope.post.Hostescalation.escalate_on_down=$scope.hostescalation.escalate_on_down;$scope.post.Hostescalation.escalate_on_unreachable=$scope.hostescalation.escalate_on_unreachable;for(var contactIndex in $scope.hostescalation.contacts){$scope.post.Hostescalation.contacts._ids.push($scope.hostescalation.contacts[contactIndex].id)}
for(var contactgroupIndex in $scope.hostescalation.contactgroups){$scope.post.Hostescalation.contactgroups._ids.push($scope.hostescalation.contactgroups[contactgroupIndex].id)}
for(var hostIndex in $scope.hostescalation.hosts){if($scope.hostescalation.hosts[hostIndex]._joinData.excluded===0){$scope.post.Hostescalation.hosts._ids.push($scope.hostescalation.hosts[hostIndex].id)}else{$scope.post.Hostescalation.hosts_excluded._ids.push($scope.hostescalation.hosts[hostIndex].id)}}
for(var hostgroupIndex in $scope.hostescalation.hostgroups){if($scope.hostescalation.hostgroups[hostgroupIndex]._joinData.excluded===0){$scope.post.Hostescalation.hostgroups._ids.push($scope.hostescalation.hostgroups[hostgroupIndex].id)}else{$scope.post.Hostescalation.hostgroups_excluded._ids.push($scope.hostescalation.hostgroups[hostgroupIndex].id)}}
$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}});$scope.loadContainer()};$scope.loadContainer=function(){var params={'angular':!0};$http.get("/hostescalations/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadElementsByContainerId=function(){$http.get("/hostescalations/loadElementsByContainerId/"+$scope.post.Hostescalation.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.hosts=result.data.hosts;$scope.hosts_excluded=result.data.hostsExcluded;$scope.hostgroups=result.data.hostgroups;$scope.hostgroups_excluded=result.data.hostgroupsExcluded;$scope.timeperiods=result.data.timeperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.processChosenHosts();$scope.processChosenExcludedHosts();$scope.processChosenHostgroups();$scope.processChosenExcludedHostgroups()})};$scope.loadHosts=function(searchString){if($scope.post.Hostescalation.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostescalation.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostescalation.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})}};$scope.loadExcludedHosts=function(searchString){if($scope.post.Hostescalation.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostescalation.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostescalation.hosts_excluded._ids}}).then(function(result){$scope.hosts_excluded=result.data.hosts})}};$scope.submit=function(){$http.post("/hostescalations/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var hostescalatingEditUrl=$state.href('HostescalationsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+hostescalatingEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HostescalationsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenHosts=function(){for(var key in $scope.hosts){if(in_array($scope.hosts[key].key,$scope.post.Hostescalation.hosts_excluded._ids)){$scope.hosts[key].disabled=!0}else{$scope.hosts[key].disabled=!1}}};$scope.processChosenExcludedHosts=function(){for(var key in $scope.hosts_excluded){if(in_array($scope.hosts_excluded[key].key,$scope.post.Hostescalation.hosts._ids)){$scope.hosts_excluded[key].disabled=!0}else{$scope.hosts_excluded[key].disabled=!1}}};$scope.processChosenHostgroups=function(){for(var key in $scope.hostgroups){if(in_array($scope.hostgroups[key].key,$scope.post.Hostescalation.hostgroups_excluded._ids)){$scope.hostgroups[key].disabled=!0}else{$scope.hostgroups[key].disabled=!1}}};$scope.processChosenExcludedHostgroups=function(){for(var key in $scope.hostgroups_excluded){if(in_array($scope.hostgroups_excluded[key].key,$scope.post.Hostescalation.hostgroups._ids)){$scope.hostgroups_excluded[key].disabled=!0}else{$scope.hostgroups_excluded[key].disabled=!1}}};$scope.$watch('post.Hostescalation.container_id',function(){if($scope.post.Hostescalation.container_id!=null){$scope.loadElementsByContainerId()}},!0);$scope.$watch('post.Hostescalation.hosts._ids',function(){if($scope.init){return}
$scope.processChosenExcludedHosts()},!0);$scope.$watch('post.Hostescalation.hosts_excluded._ids',function(){if($scope.init){return}
$scope.processChosenHosts()},!0);$scope.$watch('post.Hostescalation.hostgroups._ids',function(){if($scope.init){return}
$scope.processChosenExcludedHostgroups()},!0);$scope.$watch('post.Hostescalation.hostgroups_excluded._ids',function(){if($scope.init){return}
$scope.processChosenHostgroups()},!0);$scope.load()});angular.module('openITCOCKPIT').controller('HostescalationsAddController',function($scope,$http,$state,NotyService,RedirectService){$scope.post={Hostescalation:{container_id:null,first_notification:1,last_notification:5,notification_interval:7200,timeperiod_id:null,escalate_on_recovery:0,escalate_on_down:0,escalate_on_unreachable:0,contacts:{_ids:[]},contactgroups:{_ids:[]},hosts:{_ids:[]},hosts_excluded:{_ids:[]},hostgroups:{_ids:[]},hostgroups_excluded:{_ids:[]}}};$scope.containers={};$scope.load=function(){var params={'angular':!0};$http.get("/hostescalations/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadElementsByContainerId=function(){$http.get("/hostescalations/loadElementsByContainerId/"+$scope.post.Hostescalation.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.hosts=result.data.hosts;$scope.hosts_excluded=result.data.hostsExcluded;$scope.hostgroups=result.data.hostgroups;$scope.hostgroups_excluded=result.data.hostgroupsExcluded;$scope.timeperiods=result.data.timeperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups})};$scope.loadHosts=function(searchString){if($scope.post.Hostescalation.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostescalation.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostescalation.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})}};$scope.loadExcludedHosts=function(searchString){if($scope.post.Hostescalation.container_id!=null){$http.get("/hosts/loadHostsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Hostescalation.container_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostescalation.hosts_excluded._ids}}).then(function(result){$scope.hosts_excluded=result.data.hosts})}};$scope.submit=function(){$http.post("/hostescalations/add.json?angular=true",$scope.post).then(function(result){var hostescalatingEditUrl=$state.href('HostescalationsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+hostescalatingEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HostescalationsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenHosts=function(){for(var key in $scope.hosts){if(in_array($scope.hosts[key].key,$scope.post.Hostescalation.hosts_excluded._ids)){$scope.hosts[key].disabled=!0}else{$scope.hosts[key].disabled=!1}}};$scope.processChosenExcludedHosts=function(){for(var key in $scope.hosts_excluded){if(in_array($scope.hosts_excluded[key].key,$scope.post.Hostescalation.hosts._ids)){$scope.hosts_excluded[key].disabled=!0}else{$scope.hosts_excluded[key].disabled=!1}}};$scope.processChosenHostgroups=function(){for(var key in $scope.hostgroups){if(in_array($scope.hostgroups[key].key,$scope.post.Hostescalation.hostgroups_excluded._ids)){$scope.hostgroups[key].disabled=!0}else{$scope.hostgroups[key].disabled=!1}}};$scope.processChosenExcludedHostgroups=function(){for(var key in $scope.hostgroups_excluded){if(in_array($scope.hostgroups_excluded[key].key,$scope.post.Hostescalation.hostgroups._ids)){$scope.hostgroups_excluded[key].disabled=!0}else{$scope.hostgroups_excluded[key].disabled=!1}}};$scope.$watch('post.Hostescalation.container_id',function(){if($scope.post.Hostescalation.container_id!=null){$scope.loadElementsByContainerId()}},!0);$scope.$watch('post.Hostescalation.hosts._ids',function(){$scope.processChosenExcludedHosts()},!0);$scope.$watch('post.Hostescalation.hosts_excluded._ids',function(){$scope.processChosenHosts()},!0);$scope.$watch('post.Hostescalation.hostgroups._ids',function(){$scope.processChosenExcludedHostgroups()},!0);$scope.$watch('post.Hostescalation.hostgroups_excluded._ids',function(){$scope.processChosenHostgroups()},!0);$scope.load()});angular.module('openITCOCKPIT').controller('AutomapsViewController',function($scope,$http,$stateParams){$scope.id=$stateParams.id;$scope.init=!0;$scope.currentPage=1;$scope.useScroll=!0;$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'page':$scope.currentPage};$http.get("/automaps/view/"+$scope.id+".json",{params:params}).then(function(result){$scope.automap=result.data.automap;$scope.servicesByHost=result.data.servicesByHost;if($scope.automap.use_paginator){$scope.paging=result.data.paging;$scope.scroll=result.data.scroll}
$scope.init=!1})};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.load()});angular.module('openITCOCKPIT').controller('AutomapsAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService){var fontSizes={1:'xx-small',2:'x-small',3:'small',4:'medium',5:'large',6:'x-large',7:'xx-large'};$scope.data={createAnother:!1,hostCount:0,serviceCount:0};var clearForm=function(){$scope.post={Automap:{name:'',description:'',container_id:0,recursive:0,host_regex:'',service_regex:'',show_ok:1,show_warning:1,show_critical:1,show_unknown:1,show_downtime:1,show_acknowledged:1,show_label:1,group_by_host:1,use_paginator:1,font_size:"4"}}};clearForm();$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/automaps/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.submit=function(){$http.post("/automaps/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('AutomapsEdit',{id:result.data.automap.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('AutomapsIndex')}else{clearForm();$scope.data.hostCount=0;$scope.data.serviceCount=0;$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.getFontsize=function(){return{'font-size':fontSizes[$scope.post.Automap.font_size]}};$scope.getMatchingHostAndServices=function(){$http.post("/automaps/getMatchingHostAndServices.json?angular=true",$scope.post).then(function(result){$scope.data.hostCount=result.data.hostCount;$scope.data.serviceCount=result.data.serviceCount})};$scope.$watch('post.Automap.host_regex',function(){if($scope.init){return}
if($scope.post.Automap.host_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.$watch('post.Automap.service_regex',function(){if($scope.init){return}
if($scope.post.Automap.service_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.$watch('post.Automap.container_id',function(){if($scope.init){return}
if($scope.post.Automap.host_regex!=''&&$scope.post.Automap.service_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.$watch('post.Automap.recursive',function(){if($scope.init){return}
if($scope.post.Automap.host_regex!=''&&$scope.post.Automap.service_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.loadContainers()});angular.module('openITCOCKPIT').controller('AutomapsIndexController',function($scope,$http,SortService,MassChangeService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','Automaps.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Automaps:{name:'',description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/automaps/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Automaps.name]':$scope.filter.Automaps.name,'filter[Automaps.description]':$scope.filter.Automaps.description};$http.get("/automaps/index.json",{params:params}).then(function(result){$scope.automaps=result.data.all_automaps;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.automaps){for(var key in $scope.automaps){if($scope.automaps[key].allow_edit===!0){var id=$scope.automaps[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(automap){var object={};object[automap.id]=automap.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.automaps){for(var id in selectedObjects){if(id==$scope.automaps[key].id){if($scope.automaps[key].allow_edit===!0){objects[id]=$scope.automaps[key].name}}}}
return objects};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('AutomapsEditController',function($scope,$http,SudoService,$state,NotyService,RedirectService,$stateParams){$scope.id=$stateParams.id;$scope.init=!0;var fontSizes={1:'xx-small',2:'x-small',3:'small',4:'medium',5:'large',6:'x-large',7:'xx-large'};$scope.data={hostCount:0,serviceCount:0};$scope.loadContainers=function(){var params={'angular':!0};$http.get("/automaps/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.loadAutomap()})};$scope.loadAutomap=function(){var params={'angular':!0};$http.get("/automaps/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post={Automap:result.data.automap};$scope.getMatchingHostAndServices()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/automaps/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('AutomapsEdit',{id:result.data.automap.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('AutomapsIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.getFontsize=function(){return{'font-size':fontSizes[$scope.post.Automap.font_size]}};$scope.getMatchingHostAndServices=function(){$http.post("/automaps/getMatchingHostAndServices.json?angular=true",$scope.post).then(function(result){$scope.data.hostCount=result.data.hostCount;$scope.data.serviceCount=result.data.serviceCount;$scope.init=!1})};$scope.$watch('post.Automap.host_regex',function(){if($scope.init){return}
if($scope.post.Automap.host_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.$watch('post.Automap.service_regex',function(){if($scope.init){return}
if($scope.post.Automap.service_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.$watch('post.Automap.container_id',function(){if($scope.init){return}
if($scope.post.Automap.host_regex!=''&&$scope.post.Automap.service_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.$watch('post.Automap.recursive',function(){if($scope.init){return}
if($scope.post.Automap.host_regex!=''&&$scope.post.Automap.service_regex!=''&&$scope.post.Automap.container_id>0){$scope.getMatchingHostAndServices()}});$scope.loadContainers()});angular.module('openITCOCKPIT').controller('HostchecksIndexController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','Hostchecks.start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={Hostchecks:{state:{recovery:!1,down:!1,unreachable:!1},state_types:{soft:!1,hard:!1},output:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.hostBrowserMenuConfig={autoload:!0,hostId:$scope.id,includeHoststatus:!0};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var state_type='';if($scope.filter.Hostchecks.state_types.soft^$scope.filter.Hostchecks.state_types.hard){state_type=0;if($scope.filter.Hostchecks.state_types.hard===!0){state_type=1}}
$http.get("/hostchecks/index/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hostchecks.output]':$scope.filter.Hostchecks.output,'filter[Hostchecks.state][]':$rootScope.currentStateForApi($scope.filter.Hostchecks.state),'filter[Hostchecks.state_type]':state_type,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.hostchecks=result.data.all_hostchecks;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('ServicesIndexController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,MassChangeService,QueryStringService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort',''));SortService.setDirection(QueryStringService.getValue('direction',''));$scope.currentPage=1;$scope.id=QueryStringService.getCakeId();$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Servicestatus:{current_state:QueryStringService.servicestate(),acknowledged:QueryStringService.getValue('has_been_acknowledged',!1)==='1',not_acknowledged:QueryStringService.getValue('has_not_been_acknowledged',!1)==='1',in_downtime:QueryStringService.getValue('in_downtime',!1)==='1',not_in_downtime:QueryStringService.getValue('not_in_downtime',!1)==='1',passive:QueryStringService.getValue('passive',!1)==='1',active:QueryStringService.getValue('active',!1)==='1',output:''},Services:{id:QueryStringService.getIds('filter[Services.id][]',[]),name:QueryStringService.getValue('filter[Services.servicename]',''),keywords:'',not_keywords:''},Hosts:{id:QueryStringService.getValue('filter[Hosts.id]',''),name:QueryStringService.getValue('filter[Hosts.name]','')}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/services/delete/';$scope.deactivateUrl='/services/deactivate/';$scope.init=!0;$scope.showFilter=!1;$scope.serverResult=[];$scope.isLoadingGraph=!0;var forTemplate=function(serverResponse){var hostWithServices=[];var arrayIndexOfHostId={};for(var i in serverResponse){var hostId=serverResponse[i].Host.id;var index=null;if(!arrayIndexOfHostId.hasOwnProperty(hostId)){index=hostWithServices.length;arrayIndexOfHostId[hostId]=index;hostWithServices.push({Host:serverResponse[i].Host,Hoststatus:serverResponse[i].Hoststatus,Services:[]})}
index=arrayIndexOfHostId[hostId];hostWithServices[index].Services.push({Service:serverResponse[i].Service,Servicestatus:serverResponse[i].Servicestatus})}
return hostWithServices};$scope.loadTimezone=function(){$http.get("/angular/user_timezone.json",{params:{'angular':!0}}).then(function(result){$scope.timezone=result.data.timezone})};$scope.load=function(){var hasBeenAcknowledged='';var inDowntime='';if($scope.filter.Servicestatus.acknowledged^$scope.filter.Servicestatus.not_acknowledged){hasBeenAcknowledged=$scope.filter.Servicestatus.acknowledged===!0}
if($scope.filter.Servicestatus.in_downtime^$scope.filter.Servicestatus.not_in_downtime){inDowntime=$scope.filter.Servicestatus.in_downtime===!0}
var passive='';if($scope.filter.Servicestatus.passive^$scope.filter.Servicestatus.active){passive=!$scope.filter.Servicestatus.passive}
var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.filter.Hosts.id,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[Services.id][]':$scope.filter.Services.id,'filter[servicename]':$scope.filter.Services.name,'filter[Servicestatus.output]':$scope.filter.Servicestatus.output,'filter[Servicestatus.current_state][]':$rootScope.currentStateForApi($scope.filter.Servicestatus.current_state),'filter[keywords][]':$scope.filter.Services.keywords.split(','),'filter[not_keywords][]':$scope.filter.Services.not_keywords.split(','),'filter[Servicestatus.problem_has_been_acknowledged]':hasBeenAcknowledged,'filter[Servicestatus.scheduled_downtime_depth]':inDowntime,'filter[Servicestatus.active_checks_enabled]':passive};if(QueryStringService.hasValue('BrowserContainerId')){params.BrowserContainerId=QueryStringService.getValue('BrowserContainerId')}
$http.get("/services/index.json",{params:params}).then(function(result){$scope.services=[];$scope.serverResult=result.data.all_services;$scope.services=forTemplate(result.data.all_services);$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter};$scope.resetFilter=function(){defaultFilter();$('#ServicesKeywordsInput').tagsinput('removeAll');$('#ServicesNotKeywordsInput').tagsinput('removeAll');$scope.undoSelection()};$scope.selectAll=function(){if($scope.services){for(var key in $scope.serverResult){if($scope.serverResult[key].Service.allow_edit){var id=$scope.serverResult[key].Service.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host,service){var object={};object[service.Service.id]=host.Host.hostname+'/'+service.Service.servicename;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.serverResult){for(var id in selectedObjects){if(id==$scope.serverResult[key].Service.id){objects[id]=$scope.serverResult[key].Host.hostname+'/'+$scope.serverResult[key].Service.servicename}}}
return objects};$scope.getObjectsForExternalCommand=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.serverResult){for(var id in selectedObjects){if(id==$scope.serverResult[key].Service.id){objects[id]=$scope.serverResult[key]}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.linkForPdf=function(){var baseUrl='/services/listToPdf.pdf?';var hasBeenAcknowledged='';var inDowntime='';if($scope.filter.Servicestatus.acknowledged^$scope.filter.Servicestatus.not_acknowledged){hasBeenAcknowledged=$scope.filter.Servicestatus.acknowledged===!0}
if($scope.filter.Servicestatus.in_downtime^$scope.filter.Servicestatus.not_in_downtime){inDowntime=$scope.filter.Servicestatus.in_downtime===!0}
var passive='';if($scope.filter.Servicestatus.passive){passive=!$scope.filter.Servicestatus.passive}
var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.filter.Hosts.id,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[Services.id]':$scope.filter.Services.id,'filter[servicename]':$scope.filter.Services.name,'filter[Servicestatus.output]':$scope.filter.Servicestatus.output,'filter[Servicestatus.current_state][]':$rootScope.currentStateForApi($scope.filter.Servicestatus.current_state),'filter[keywords][]':$scope.filter.Services.keywords.split(','),'filter[not_keywords][]':$scope.filter.Services.not_keywords.split(','),'filter[Servicestatus.problem_has_been_acknowledged]':hasBeenAcknowledged,'filter[Servicestatus.scheduled_downtime_depth]':inDowntime,'filter[Servicestatus.active_checks_enabled]':passive};if(QueryStringService.hasValue('BrowserContainerId')){params.BrowserContainerId=QueryStringService.getValue('BrowserContainerId')}
return baseUrl+$httpParamSerializer(params)};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.mouseenter=function($event,host,service){$scope.isLoadingGraph=!0;var offset={top:$event.relatedTarget.offsetTop+40,left:$event.relatedTarget.offsetLeft+40};offset.top+=$event.relatedTarget.offsetParent.offsetTop;var currentScrollPosition=$(window).scrollTop();var margin=15;var $popupGraphContainer=$('#serviceGraphContainer');if((offset.top-currentScrollPosition+margin+$popupGraphContainer.height())>$(window).innerHeight()){$popupGraphContainer.css({'top':parseInt(offset.top-$popupGraphContainer.height()-margin+10),'left':parseInt(offset.left+margin),'padding':'6px'})}else{$popupGraphContainer.css({'top':parseInt(offset.top+margin),'left':parseInt(offset.left+margin),'padding':'6px'})}
$popupGraphContainer.show();loadGraph(host,service)};$scope.mouseleave=function(){$('#serviceGraphContainer').hide();$('#serviceGraphFlot').html('')};$scope.problemsOnly=function(){defaultFilter();$scope.filter.Servicestatus.not_in_downtime=!0;$scope.filter.Servicestatus.not_acknowledged=!0;$scope.filter.Servicestatus.current_state={ok:!1,warning:!0,critical:!0,unknown:!0};SortService.setSort('Servicestatus.last_state_change');SortService.setDirection('desc')};var loadGraph=function(host,service){var serverTime=new Date($scope.timezone.server_time);graphEnd=Math.floor(serverTime.getTime()/1000);graphStart=graphEnd-(3600*4);$http.get('/Graphgenerators/getPerfdataByUuid.json',{params:{angular:!0,host_uuid:host.Host.uuid,service_uuid:service.Service.uuid,start:graphStart,end:graphEnd,jsTimestamp:1}}).then(function(result){$scope.isLoadingGraph=!1;renderGraph(result.data.performance_data)})};var renderGraph=function(performance_data){var graph_data=[];for(var dsCount in performance_data){graph_data[dsCount]=[];for(var timestamp in performance_data[dsCount].data){var frontEndTimestamp=(parseInt(timestamp,10)+($scope.timezone.user_time_to_server_offset*1000));graph_data[dsCount].push([frontEndTimestamp,performance_data[dsCount].data[timestamp]])}}
var color_amount=performance_data.length<3?3:performance_data.length;var GraphDefaultsObj=new GraphDefaults();var colors=GraphDefaultsObj.getColors(color_amount);var options=GraphDefaultsObj.getDefaultOptions();options.height='500px';options.colors=colors.border;options.xaxis.tickFormatter=function(val,axis){var fooJS=new Date(val);var fixTime=function(value){if(value<10){return'0'+value}
return value};return fixTime(fooJS.getDate())+'.'+fixTime(fooJS.getMonth()+1)+'.'+fooJS.getFullYear()+' '+fixTime(fooJS.getHours())+':'+fixTime(fooJS.getMinutes())};options.xaxis.mode='time';options.xaxis.timeBase='milliseconds';options.xaxis.min=(graphStart+$scope.timezone.user_time_to_server_offset)*1000;options.xaxis.max=(graphEnd+$scope.timezone.user_time_to_server_offset)*1000;self.plot=$.plot('#serviceGraphFlot',graph_data,options)};defaultFilter();$scope.loadTimezone();SortService.setCallback($scope.load);jQuery(function(){$("input[data-role=tagsinput]").tagsinput()});$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicesServiceListController',function($scope,$http,SortService,MassChangeService,$stateParams){SortService.setSort('Servicestatus.current_state');SortService.setDirection('desc');$scope.currentPage=1;$scope.data={hostId:parseInt($stateParams.id)};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/services/delete/';$scope.deactivateUrl='/services/deactivate/';$scope.activateUrl='/services/enable/';$scope.activeTab='active';$scope.fakeServicestatus={Servicestatus:{currentState:5}};var graphStart=0;var graphEnd=0;$scope.changeTab=function(tab){if(tab!==$scope.activeTab){$scope.services=[];$scope.activeTab=tab;$scope.undoSelection();SortService.setSort('servicename');SortService.setDirection('asc');$scope.currentPage=1;if($scope.activeTab==='deleted'){SortService.setSort('DeletedServices.name')}
$scope.load()}};$scope.load=function(){switch($scope.activeTab){case 'active':$scope.loadActiveServices();break;case 'notMonitored':$scope.loadNotMonitoredServices();break;case 'disabled':$scope.loadDisabledServices();break;case 'deleted':$scope.loadDeletedServices();break}};$scope.loadTimezone=function(){$http.get("/angular/user_timezone.json",{params:{'angular':!0}}).then(function(result){$scope.timezone=result.data.timezone})};$scope.loadHost=function(){$http.get("/hosts/loadHostById/"+$scope.data.hostId+".json",{params:{'angular':!0}}).then(function(result){$scope.host=result.data.host})};$scope.loadActiveServices=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.data.hostId};$http.get("/services/index.json",{params:params}).then(function(result){$scope.services=[];$scope.services=result.data.all_services;$scope.paging=result.data.paging;$scope.init=!1})};$scope.loadNotMonitoredServices=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.hostId};$http.get("/services/notMonitored.json",{params:params}).then(function(result){$scope.services=[];$scope.services=result.data.all_services;$scope.paging=result.data.paging;$scope.init=!1})};$scope.loadDisabledServices=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.id]':$scope.data.hostId};$http.get("/services/disabled.json",{params:params}).then(function(result){$scope.services=[];$scope.services=result.data.all_services;$scope.paging=result.data.paging;$scope.init=!1})};$scope.loadDeletedServices=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[DeletedServices.host_id]':$scope.data.hostId};$http.get("/services/deleted.json",{params:params}).then(function(result){$scope.deletedServices=[];$scope.deletedServices=result.data.all_services;$scope.paging=result.data.paging;$scope.init=!1})};$scope.loadHosts=function(searchString){$http.get("/hosts/loadHostsByString.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':$scope.data.hostId}}).then(function(result){$scope.hosts=result.data.hosts})};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.selectAll=function(){if($scope.services){for(var key in $scope.services){if($scope.services[key].Service.allow_edit){var id=$scope.services[key].Service.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host,service){var object={};object[service.Service.id]=host.Host.name+'/'+service.Service.servicename;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.services){for(var id in selectedObjects){if(id==$scope.services[key].Service.id){objects[id]=$scope.services[key].Host.hostname+'/'+$scope.services[key].Service.servicename}}}
return objects};$scope.getObjectsForExternalCommand=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.services){for(var id in selectedObjects){if(id==$scope.services[key].Service.id){objects[id]=$scope.services[key]}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.mouseenter=function($event,host,service){$scope.isLoadingGraph=!0;var offset={top:$event.relatedTarget.offsetTop+40,left:$event.relatedTarget.offsetLeft+40};offset.top+=$event.relatedTarget.offsetParent.offsetTop;var currentScrollPosition=$(window).scrollTop();var margin=15;var $popupGraphContainer=$('#serviceGraphContainer');if((offset.top-currentScrollPosition+margin+$popupGraphContainer.height())>$(window).innerHeight()){$popupGraphContainer.css({'top':parseInt(offset.top-$popupGraphContainer.height()-margin+10),'left':parseInt(offset.left+margin),'padding':'6px'})}else{$popupGraphContainer.css({'top':parseInt(offset.top+margin),'left':parseInt(offset.left+margin),'padding':'6px'})}
$popupGraphContainer.show();loadGraph(host,service)};$scope.mouseleave=function(){$('#serviceGraphContainer').hide();$('#serviceGraphFlot').html('')};var loadGraph=function(host,service){var serverTime=new Date($scope.timezone.server_time);graphEnd=Math.floor(serverTime.getTime()/1000);graphStart=graphEnd-(3600*4);$http.get('/Graphgenerators/getPerfdataByUuid.json',{params:{angular:!0,host_uuid:host.Host.uuid,service_uuid:service.Service.uuid,start:graphStart,end:graphEnd,jsTimestamp:1}}).then(function(result){$scope.isLoadingGraph=!1;renderGraph(result.data.performance_data)})};var renderGraph=function(performance_data){var graph_data=[];for(var dsCount in performance_data){graph_data[dsCount]=[];for(var timestamp in performance_data[dsCount].data){var frontEndTimestamp=(parseInt(timestamp,10)+($scope.timezone.user_time_to_server_offset*1000));graph_data[dsCount].push([frontEndTimestamp,performance_data[dsCount].data[timestamp]])}}
var GraphDefaultsObj=new GraphDefaults();var color_amount=performance_data.length<3?3:performance_data.length;var colors=GraphDefaultsObj.getColors(color_amount);var options=GraphDefaultsObj.getDefaultOptions();options.colors=colors.border;options.xaxis.tickFormatter=function(val,axis){var fooJS=new Date(val);var fixTime=function(value){if(value<10){return'0'+value}
return value};return fixTime(fooJS.getDate())+'.'+fixTime(fooJS.getMonth()+1)+'.'+fooJS.getFullYear()+' '+fixTime(fooJS.getHours())+':'+fixTime(fooJS.getMinutes())};options.xaxis.min=(graphStart+$scope.timezone.user_time_to_server_offset)*1000;options.xaxis.max=(graphEnd+$scope.timezone.user_time_to_server_offset)*1000;self.plot=$.plot('#serviceGraphFlot',graph_data,options)};$scope.$watch('data.hostId',function(){$scope.loadHost();$scope.load()});$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0);$scope.loadTimezone();SortService.setCallback($scope.load);$scope.loadHosts('')});angular.module('openITCOCKPIT').controller('ServicesCopyController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){var ids=$stateParams.ids.split(',');$scope.hostId=0;if(ids.length===0||ids[0]===''){RedirectService.redirectWithFallback('ServicesIndex');return}
$scope.loadHosts=function(searchString){$http.get("/hosts/loadHostsByString/1.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':$scope.hostId,'includeDisabled':'false'}}).then(function(result){$scope.hosts=result.data.hosts})};$scope.loadServices=function(){$http.get("/services/copy/"+ids.join('/')+".json",{params:{'angular':!0,'hostId':$scope.hostId}}).then(function(result){$scope.sourceServices=[];$scope.commands=result.data.commands;for(var key in result.data.services){var sourceId=result.data.services[key].id;delete result.data.services[key].id;var service={Source:{id:sourceId,hostname:result.data.services[key].host.name,_name:result.data.services[key]._name},Service:result.data.services[key]};$scope.sourceServices.push(service)}
$scope.init=!1})};$scope.loadCommandArguments=function(sourceId,commandId,$index){var params={'angular':!0};$http.get("/services/loadCommandArguments/"+commandId+"/"+sourceId+".json",{params:params}).then(function(result){$scope.sourceServices[$index].Service.servicecommandargumentvalues=result.data.servicecommandargumentvalues})};$scope.copy=function(){$http.post("/services/copy/.json?angular=true",{data:$scope.sourceServices,hostId:$scope.hostId}).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('ServicesIndex')},function errorCallback(result){NotyService.genericError();$scope.sourceServices=result.data.result})};$scope.$watch('hostId',function(){if($scope.hostId>0){$scope.loadServices()}},!0);$scope.loadHosts('')});angular.module('openITCOCKPIT').controller('ServicesDisabledController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,MassChangeService,QueryStringService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Hosts.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.fakeServicestatus={Servicestatus:{currentState:5}};var defaultFilter=function(){$scope.filter={Hosts:{name:''},Services:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/services/delete/';$scope.activateUrl='/services/enable/';$scope.init=!0;$scope.showFilter=!1;var forTemplate=function(serverResponse){var hostWithServices=[];var arrayIndexOfHostId={};for(var i in serverResponse){var hostId=serverResponse[i].Host.id;var index=null;if(!arrayIndexOfHostId.hasOwnProperty(hostId)){index=hostWithServices.length;arrayIndexOfHostId[hostId]=index;hostWithServices.push({Host:serverResponse[i].Host,Hoststatus:serverResponse[i].Hoststatus,Services:[]})}
index=arrayIndexOfHostId[hostId];hostWithServices[index].Services.push(serverResponse[i].Service)}
return hostWithServices};$scope.load=function(){var params={'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[servicename]':$scope.filter.Services.name};$http.get("/services/disabled.json",{params:params}).then(function(result){$scope.services=[];$scope.serverResult=result.data.all_services;$scope.services=forTemplate(result.data.all_services);$scope.paging=result.data.paging;$scope.init=!1})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.services){for(var key in $scope.serverResult){if($scope.serverResult[key].Service.allow_edit){var id=$scope.serverResult[key].Service.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host,service){var object={};object[service.id]=host.Host.hostname+'/'+service.servicename;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.serverResult){for(var id in selectedObjects){if(id==$scope.serverResult[key].Service.id){objects[id]=$scope.serverResult[key].Host.hostname+'/'+$scope.serverResult[key].Service.servicename}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicesEditController',function($scope,$http,SudoService,$state,NotyService,$stateParams,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.data={isHostOnlyEditableDueToHostSharing:!1,areContactsInheritedFromHosttemplate:!1,areContactsInheritedFromHost:!1,areContactsInheritedFromServicetemplate:!1,disableInheritance:!1};$scope.post={Service:{}};var setValuesFromServicetemplate=function(){var fields=['name','description','servicetemplate_id','command_id','eventhandler_command_id','check_interval','retry_interval','max_check_attempts','first_notification_delay','notification_interval','notify_on_recovery','notify_on_warning','notify_on_critical','notify_on_unknown','notify_on_flapping','notify_on_downtime','flap_detection_enabled','flap_detection_on_ok','flap_detection_on_warning','flap_detection_on_critical','flap_detection_on_unknown','low_flap_threshold','high_flap_threshold','process_performance_data','freshness_checks_enabled','freshness_threshold','passive_checks_enabled','event_handler_enabled','active_checks_enabled','retain_status_information','retain_nonstatus_information','notifications_enabled','notes','priority','check_period_id','notify_period_id','tags','service_url','is_volatile'];for(var index in fields){var field=fields[index];if($scope.servicetemplate.Servicetemplate.hasOwnProperty(field)){$scope.post.Service[field]=$scope.servicetemplate.Servicetemplate[field]}}
var hasManyAssociations=['servicegroups','contacts','contactgroups'];for(index in hasManyAssociations){field=hasManyAssociations[index];if($scope.servicetemplate.Servicetemplate.hasOwnProperty(field)){$scope.post.Service[field]._ids=$scope.servicetemplate.Servicetemplate[field]._ids}}
$scope.post.Service.customvariables=[];for(index in $scope.servicetemplate.Servicetemplate.customvariables){$scope.post.Service.customvariables.push({objecttype_id:4096,name:$scope.servicetemplate.Servicetemplate.customvariables[index].name,value:$scope.servicetemplate.Servicetemplate.customvariables[index].value})}
$scope.post.Service.servicecommandargumentvalues=[];for(index in $scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues){$scope.post.Service.servicecommandargumentvalues.push({commandargument_id:$scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues[index].commandargument_id,value:$scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues[index].value,commandargument:$scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues[index].commandargument})}
$scope.post.Service.serviceeventcommandargumentvalues=[];for(index in $scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues){$scope.post.Service.serviceeventcommandargumentvalues.push({commandargument_id:$scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues[index].commandargument_id,value:$scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues[index].value,commandargument:$scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues[index].commandargument})}
$('#ServiceTagsInput').tagsinput('removeAll');$('#ServiceTagsInput').tagsinput('add',$scope.post.Service.tags)};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/services/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.commands;$scope.eventhandlerCommands=result.data.eventhandlerCommands})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Service.command_id;if(commandId===0){return}
$http.get("/services/loadCommandArguments/"+commandId+"/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Service.servicecommandargumentvalues=result.data.servicecommandargumentvalues})};$scope.loadEventHandlerCommandArguments=function(){var params={'angular':!0};var eventHandlerCommandId=$scope.post.Service.eventhandler_command_id;if(eventHandlerCommandId===0){return}
$http.get("/services/loadEventhandlerCommandArguments/"+eventHandlerCommandId+"/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Service.serviceeventcommandargumentvalues=result.data.serviceeventhandlercommandargumentvalues})};$scope.loadService=function(){$http.get("/services/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post.Service=result.data.service.Service;$scope.servicetemplate=result.data.servicetemplate;$scope.host=result.data.host;$scope.hostContactsAndContactgroups=result.data.hostContactsAndContactgroups;$scope.hosttemplateContactsAndContactgroups=result.data.hosttemplateContactsAndContactgroups;$scope.data.areContactsInheritedFromHosttemplate=result.data.areContactsInheritedFromHosttemplate;$scope.data.areContactsInheritedFromHost=result.data.areContactsInheritedFromHost;$scope.data.areContactsInheritedFromServicetemplate=result.data.areContactsInheritedFromServicetemplate;if($scope.data.areContactsInheritedFromHosttemplate||$scope.data.areContactsInheritedFromHost||$scope.data.areContactsInheritedFromServicetemplate){$('#ContactBlocker').block({message:null,overlayCSS:{opacity:0.5,cursor:'not-allowed','background-color':'rgb(255, 255, 255)'}})}
jQuery(function(){$('.tagsinput').tagsinput()});$scope.loadElements();setTimeout(function(){$scope.init=!1},250)},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadElements=function(){var hostId=$scope.post.Service.host_id;var serviceId=$scope.id;if(hostId===0){return}
$http.post("/services/loadElementsByHostId/"+hostId+"/"+serviceId+".json?angular=true",{}).then(function(result){$scope.servicetemplates=result.data.servicetemplates;$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.servicegroups=result.data.servicegroups})};$scope.loadServicetemplate=function(){var servicetemplateId=$scope.post.Service.servicetemplate_id;$http.post("/services/loadServicetemplate/"+servicetemplateId+".json?angular=true",{}).then(function(result){$scope.servicetemplate=result.data.servicetemplate;setValuesFromServicetemplate()});setTimeout(function(){$scope.init=!1},500)};$scope.setPriority=function(priority){$scope.post.Service.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Service.customvariables.push({objecttype_id:2048,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Service.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.restoreTemplateTags=function(){$scope.post.Service.tags=$scope.servicetemplate.Servicetemplate.tags;$('#ServiceTagsInput').tagsinput('removeAll');$('#ServiceTagsInput').tagsinput('add',$scope.servicetemplate.Servicetemplate.tags)};$scope.submit=function(){$http.post("/services/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicesEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicesIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadCommands();$scope.loadService();$scope.$watch('post.Service.servicetemplate_id',function(){if($scope.init){return}
$scope.init=!0;$scope.loadServicetemplate()},!0);$scope.$watch('post.Service.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0);$scope.$watch('post.Service.eventhandler_command_id',function(){if($scope.init){return}
if($scope.post.Service.eventhandler_command_id===0){$scope.post.Service.serviceeventcommandargumentvalues=[];return}
$scope.loadEventHandlerCommandArguments()},!0);$scope.$watch('data.disableInheritance',function(){if($scope.data.areContactsInheritedFromHosttemplate===!1&&$scope.data.areContactsInheritedFromHost===!1&&$scope.data.areContactsInheritedFromServicetemplate===!1){return}
if($scope.data.disableInheritance===!0){$('#ContactBlocker').unblock()}else{$('#ContactBlocker').block({message:null,overlayCSS:{opacity:0.5,cursor:'not-allowed','background-color':'rgb(255, 255, 255)'}});if($scope.data.areContactsInheritedFromServicetemplate===!0){if(typeof $scope.servicetemplate!=="undefined"){$scope.post.Service.contacts._ids=$scope.servicetemplate.Servicetemplate.contacts._ids;$scope.post.Service.contactgroups._ids=$scope.servicetemplate.Servicetemplate.contactgroups._ids}
return}
if($scope.data.areContactsInheritedFromServicetemplate===!0){if(typeof $scope.servicetemplate!=="undefined"){$scope.post.Service.contacts._ids=$scope.servicetemplate.Servicetemplate.contacts._ids;$scope.post.Service.contactgroups._ids=$scope.servicetemplate.Servicetemplate.contactgroups._ids}
return}
if($scope.data.areContactsInheritedFromHost===!0){if(typeof $scope.hostContactsAndContactgroups!=="undefined"){$scope.post.Service.contacts._ids=$scope.hostContactsAndContactgroups.contacts._ids;$scope.post.Service.contactgroups._ids=$scope.hostContactsAndContactgroups.contactgroups._ids}
return}
if(typeof $scope.hosttemplateContactsAndContactgroups!=="undefined"){$scope.post.Service.contacts._ids=$scope.hosttemplateContactsAndContactgroups.contacts._ids;$scope.post.Service.contactgroups._ids=$scope.hosttemplateContactsAndContactgroups.contactgroups._ids}}})});angular.module('openITCOCKPIT').controller('ServicesNotMonitoredController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,MassChangeService,QueryStringService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Hosts.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;$scope.fakeServicestatus={Servicestatus:{currentState:5}};var defaultFilter=function(){$scope.filter={Hosts:{name:''},Services:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/services/delete/';$scope.deactivateUrl='/services/deactivate/';$scope.init=!0;$scope.showFilter=!1;$scope.serverResult=[];var forTemplate=function(serverResponse){var hostWithServices=[];var arrayIndexOfHostId={};for(var i in serverResponse){var hostId=serverResponse[i].Host.id;var index=null;if(!arrayIndexOfHostId.hasOwnProperty(hostId)){index=hostWithServices.length;arrayIndexOfHostId[hostId]=index;hostWithServices.push({Host:serverResponse[i].Host,Hoststatus:serverResponse[i].Hoststatus,Services:[]})}
index=arrayIndexOfHostId[hostId];hostWithServices[index].Services.push(serverResponse[i].Service)}
return hostWithServices};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[servicename]':$scope.filter.Services.name};$http.get("/services/notMonitored.json",{params:params}).then(function(result){$scope.services=[];$scope.serverResult=result.data.all_services;$scope.services=forTemplate(result.data.all_services);$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.services){for(var key in $scope.serverResult){if($scope.serverResult[key].Service.allow_edit){var id=$scope.serverResult[key].Service.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host,service){var object={};object[service.id]=host.Host.hostname+'/'+service.servicename;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.serverResult){for(var id in selectedObjects){if(id==$scope.serverResult[key].Service.id){objects[id]=$scope.serverResult[key].Host.hostname+'/'+$scope.serverResult[key].Service.servicename}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicesAddController',function($scope,$http,SudoService,$state,NotyService,$stateParams,RedirectService){var hostId=parseInt($stateParams.hostId,10);if(isNaN(hostId)){hostId=0}
$scope.data={createAnother:!1,areContactsInheritedFromHosttemplate:!1,areContactsInheritedFromHost:!1,areContactsInheritedFromServicetemplate:!1,disableInheritance:!1};var clearForm=function(){$scope.post={Service:{host_id:hostId,servicetemplate_id:0,name:'',description:'',command_id:0,eventhandler_command_id:0,check_interval:60,retry_interval:60,max_check_attempts:3,first_notification_delay:0,notification_interval:7200,notify_on_recovery:1,notify_on_warning:1,notify_on_critical:1,notify_on_unknown:1,notify_on_flapping:0,notify_on_downtime:0,flap_detection_enabled:0,flap_detection_on_ok:0,flap_detection_on_warning:0,flap_detection_on_critical:0,flap_detection_on_unknown:0,low_flap_threshold:0,high_flap_threshold:0,process_performance_data:1,freshness_threshold:3600,passive_checks_enabled:1,event_handler_enabled:0,active_checks_enabled:1,retain_status_information:0,retain_nonstatus_information:0,notifications_enabled:0,notes:'',priority:1,check_period_id:0,notify_period_id:0,tags:'',container_id:0,service_url:'',is_volatile:0,freshness_checks_enabled:0,contacts:{_ids:[]},contactgroups:{_ids:[]},servicegroups:{_ids:[]},customvariables:[],servicecommandargumentvalues:[],serviceeventcommandargumentvalues:[]}}};clearForm();$scope.init=!0;var setValuesFromServicetemplate=function(){var fields=['name','description','servicetemplate_id','command_id','eventhandler_command_id','check_interval','retry_interval','max_check_attempts','first_notification_delay','notification_interval','notify_on_recovery','notify_on_warning','notify_on_critical','notify_on_unknown','notify_on_flapping','notify_on_downtime','flap_detection_enabled','flap_detection_on_ok','flap_detection_on_warning','flap_detection_on_critical','flap_detection_on_unknown','low_flap_threshold','high_flap_threshold','process_performance_data','freshness_checks_enabled','freshness_threshold','passive_checks_enabled','event_handler_enabled','active_checks_enabled','retain_status_information','retain_nonstatus_information','notifications_enabled','notes','priority','check_period_id','notify_period_id','tags','service_url','is_volatile'];for(var index in fields){var field=fields[index];if($scope.servicetemplate.Servicetemplate.hasOwnProperty(field)){$scope.post.Service[field]=$scope.servicetemplate.Servicetemplate[field]}}
var hasManyAssociations=['servicegroups','contacts','contactgroups'];for(index in hasManyAssociations){field=hasManyAssociations[index];if($scope.servicetemplate.Servicetemplate.hasOwnProperty(field)){$scope.post.Service[field]._ids=$scope.servicetemplate.Servicetemplate[field]._ids}}
$scope.post.Service.customvariables=[];for(index in $scope.servicetemplate.Servicetemplate.customvariables){$scope.post.Service.customvariables.push({objecttype_id:4096,name:$scope.servicetemplate.Servicetemplate.customvariables[index].name,value:$scope.servicetemplate.Servicetemplate.customvariables[index].value})}
$scope.post.Service.servicecommandargumentvalues=[];for(index in $scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues){$scope.post.Service.servicecommandargumentvalues.push({commandargument_id:$scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues[index].commandargument_id,value:$scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues[index].value,commandargument:$scope.servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues[index].commandargument})}
$scope.post.Service.serviceeventcommandargumentvalues=[];for(index in $scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues){$scope.post.Service.serviceeventcommandargumentvalues.push({commandargument_id:$scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues[index].commandargument_id,value:$scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues[index].value,commandargument:$scope.servicetemplate.Servicetemplate.servicetemplateeventcommandargumentvalues[index].commandargument})}
$('#ServiceTagsInput').tagsinput('removeAll');$('#ServiceTagsInput').tagsinput('add',$scope.post.Service.tags)};$scope.loadHosts=function(searchString,selected){if(typeof selected==="undefined"){selected=$scope.post.Service.host_id}
$http.get("/hosts/loadHostsByString.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':selected,'includeDisabled':'false'}}).then(function(result){$scope.hosts=result.data.hosts})};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/services/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.commands;$scope.eventhandlerCommands=result.data.eventhandlerCommands;$scope.init=!1})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Service.command_id;if(commandId===0){return}
$http.get("/services/loadCommandArguments/"+commandId+".json",{params:params}).then(function(result){$scope.post.Service.servicecommandargumentvalues=result.data.servicecommandargumentvalues;$scope.init=!1})};$scope.loadEventHandlerCommandArguments=function(){var params={'angular':!0};var eventHandlerCommandId=$scope.post.Service.eventhandler_command_id;if(eventHandlerCommandId===0){return}
$http.get("/services/loadEventhandlerCommandArguments/"+eventHandlerCommandId+".json",{params:params}).then(function(result){$scope.post.Service.serviceeventcommandargumentvalues=result.data.serviceeventhandlercommandargumentvalues;$scope.init=!1})};$scope.loadElements=function(){var hostId=$scope.post.Service.host_id;if(hostId===0||hostId===null){return}
$http.post("/services/loadElementsByHostId/"+hostId+".json?angular=true",{}).then(function(result){$scope.servicetemplates=result.data.servicetemplates;$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.servicegroups=result.data.servicegroups})};$scope.loadServicetemplate=function(){var servicetemplateId=$scope.post.Service.servicetemplate_id;if(servicetemplateId===0){$scope.init=!1;return}
var hostId=$scope.post.Service.host_id;if(hostId===0){return}
$http.post("/services/loadServicetemplate/"+servicetemplateId+"/"+hostId+".json?angular=true",{}).then(function(result){$scope.servicetemplate=result.data.servicetemplate;setValuesFromServicetemplate();$scope.data.disableInheritance=!1;$scope.data.areContactsInheritedFromHosttemplate=result.data.areContactsInheritedFromHosttemplate;$scope.data.areContactsInheritedFromHost=result.data.areContactsInheritedFromHost;$scope.data.areContactsInheritedFromServicetemplate=result.data.areContactsInheritedFromServicetemplate;$scope.inheritedContactsAndContactgroups=result.data.contactsAndContactgroups;$scope.post.Service.contacts._ids=result.data.contactsAndContactgroups.contacts._ids;$scope.post.Service.contactgroups._ids=result.data.contactsAndContactgroups.contactgroups._ids;$('#ContactBlocker').block({message:null,overlayCSS:{opacity:0.5,cursor:'not-allowed','background-color':'rgb(255, 255, 255)'}})});setTimeout(function(){$scope.init=!1},500)};$scope.setPriority=function(priority){$scope.post.Service.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Service.customvariables.push({objecttype_id:2048,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Service.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.restoreTemplateTags=function(){$scope.post.Service.tags=$scope.servicetemplate.Servicetemplate.tags;$('#ServiceTagsInput').tagsinput('removeAll');$('#ServiceTagsInput').tagsinput('add',$scope.servicetemplate.Servicetemplate.tags)};$scope.submit=function(){$http.post("/services/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicesEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('ServicesNotMonitored')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};if(hostId>0){$scope.loadHosts('',hostId);$scope.loadElements()}else{$scope.loadHosts('')}
$scope.loadCommands();jQuery(function(){$('.tagsinput').tagsinput()});$scope.$watch('post.Service.host_id',function(){if($scope.init){return}
$scope.loadElements()},!0);$scope.$watch('post.Service.servicetemplate_id',function(){if($scope.init){return}
$scope.init=!0;$scope.loadServicetemplate()},!0);$scope.$watch('post.Service.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0);$scope.$watch('post.Service.eventhandler_command_id',function(){if($scope.init){return}
if($scope.post.Service.eventhandler_command_id===0){$scope.post.Service.serviceeventcommandargumentvalues=[];return}
$scope.loadEventHandlerCommandArguments()},!0);$scope.$watch('data.disableInheritance',function(){if($scope.data.areContactsInheritedFromHosttemplate===!1&&$scope.data.areContactsInheritedFromHost===!1&&$scope.data.areContactsInheritedFromServicetemplate===!1){return}
if($scope.data.disableInheritance===!0){$('#ContactBlocker').unblock()}else{$('#ContactBlocker').block({message:null,overlayCSS:{opacity:0.5,cursor:'not-allowed','background-color':'rgb(255, 255, 255)'}});$scope.post.Service.contacts._ids=$scope.inheritedContactsAndContactgroups.contacts._ids;$scope.post.Service.contactgroups._ids=$scope.inheritedContactsAndContactgroups.contactgroups._ids}})});angular.module('openITCOCKPIT').controller('ServicesBrowserController',function($scope,$http,QueryStringService,$interval,$stateParams,UuidService){$scope.id=$stateParams.id;$scope.selectedTab='tab1';$scope.showFlashSuccess=!1;$scope.canSubmitExternalCommands=!1;$scope.tags=[];$scope.init=!0;$scope.serviceStatusTextClass='txt-primary';$scope.isLoadingGraph=!1;$scope.dataSources=[];$scope.currentDataSource=null;$scope.availableTimeranges={1:'1 hour',2:'2 hours',3:'3 hours',4:'4 hours',8:'8 hours',24:'1 day',48:'2 days',120:'5 days',168:'7 days',720:'30 days',2160:'90 days',4464:'6 months',8760:'1 year'};$scope.currentSelectedTimerange=3;$scope.visTimeline=null;$scope.visTimelineInit=!0;$scope.visTimelineStart=-1;$scope.visTimelineEnd=-1;$scope.visTimeout=null;$scope.visChangeTimeout=null;$scope.showTimelineTab=!1;$scope.timelineIsLoading=!1;$scope.failureDurationInPercent=null;$scope.lastLoadDate=Date.now();$scope.graph={graphAutoRefresh:!0,showDatapoints:!1};$scope.graphAutoRefreshInterval=0;var flappingInterval;var zoomCallbackWasBind=!1;var graphAutoRefreshIntervalId=null;var lastGraphStart=0;var lastGraphEnd=0;var graphRenderEnd=0;$scope.showFlashMsg=function(){new Noty({theme:'metroui',type:'success',layout:'topCenter',text:$scope.flashMshStr,timeout:4000}).show();$scope.showFlashSuccess=!0;$scope.autoRefreshCounter=5;var interval=$interval(function(){$scope.autoRefreshCounter--;if($scope.autoRefreshCounter===0){$scope.load();$interval.cancel(interval);$scope.showFlashSuccess=!1}},1000)};$scope.serviceBrowserMenuReschedulingCallback=function(){$scope.reschedule($scope.getObjectsForExternalCommand())};$scope.load=function(){$scope.lastLoadDate=Date.now();$http.get("/services/browser/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.mergedService=result.data.mergedService;$scope.checkCommand=result.data.checkCommand;$scope.areContactsInheritedFromHosttemplate=result.data.areContactsInheritedFromHosttemplate;$scope.areContactsInheritedFromHost=result.data.areContactsInheritedFromHost;$scope.areContactsInheritedFromServicetemplate=result.data.areContactsInheritedFromServicetemplate;$scope.checkPeriod=result.data.checkPeriod;$scope.notifyPeriod=result.data.notifyPeriod;$scope.host=result.data.host;$scope.mergedService.disabled=parseInt($scope.mergedService.disabled,10);$scope.tags=$scope.mergedService.tags.split(',');$scope.hoststatus=result.data.hoststatus;$scope.servicestatus=result.data.servicestatus;$scope.servicestatusForIcon={Servicestatus:$scope.servicestatus};$scope.serviceStatusTextClass=getServicestatusTextColor();$scope.acknowledgement=result.data.acknowledgement;$scope.downtime=result.data.downtime;$scope.hostAcknowledgement=result.data.hostAcknowledgement;$scope.hostDowntime=result.data.hostDowntime;$scope.canSubmitExternalCommands=result.data.canSubmitExternalCommands;$scope.priorities={1:!1,2:!1,3:!1,4:!1,5:!1};var priority=parseInt($scope.mergedService.priority,10);for(var i=1;i<=priority;i++){$scope.priorities[i]=!0}
$scope.graphAutoRefreshInterval=parseInt($scope.mergedService.check_interval,10)*1000;var graphStart=(parseInt(new Date().getTime()/1000,10)-(3*3600));var graphEnd=parseInt(new Date().getTime()/1000,10);$scope.dataSources=[];for(var dsName in result.data.mergedService.Perfdata){$scope.dataSources.push(dsName)}
if($scope.dataSources.length>0){$scope.currentDataSource=$scope.dataSources[0]}
if($scope.mergedService.has_graph){loadGraph($scope.host.Host.uuid,$scope.mergedService.uuid,!1,graphStart,graphEnd,!0)}
if(typeof $scope.serviceBrowserMenuConfig==="undefined"){$scope.serviceBrowserMenuConfig={autoload:!0,serviceId:$scope.mergedService.id,includeServicestatus:!0,showReschedulingButton:!0,rescheduleCallback:$scope.serviceBrowserMenuReschedulingCallback,showBackButton:!1}}
$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadTimezone=function(){$http.get("/angular/user_timezone.json",{params:{'angular':!0}}).then(function(result){$scope.timezone=result.data.timezone})};$scope.getObjectForDowntimeDelete=function(){var object={};object[$scope.downtime.internalDowntimeId]=$scope.host.Host.hostname+' / '+$scope.mergedService.name;return object};$scope.getObjectForHostDowntimeDelete=function(){var object={};object[$scope.hostDowntime.internalDowntimeId]=$scope.host.Host.hostname;return object};$scope.getObjectsForExternalCommand=function(){return[{Service:{id:$scope.mergedService.id,uuid:$scope.mergedService.uuid,name:$scope.mergedService.name},Host:{id:$scope.host.Host.id,uuid:$scope.host.Host.uuid,name:$scope.host.Host.hostname,satelliteId:$scope.host.Host.satelliteId}}]};$scope.stateIsOk=function(){return parseInt($scope.servicestatus.currentState,10)===0};$scope.stateIsWarning=function(){return parseInt($scope.servicestatus.currentState,10)===1};$scope.stateIsCritical=function(){return parseInt($scope.servicestatus.currentState,10)===2};$scope.stateIsUnknown=function(){return parseInt($scope.servicestatus.currentState,10)===3};$scope.stateIsNotInMonitoring=function(){return!$scope.servicestatus.isInMonitoring};$scope.startFlapping=function(){$scope.stopFlapping();flappingInterval=$interval(function(){if($scope.flappingState===0){$scope.flappingState=1}else{$scope.flappingState=0}},750)};$scope.stopFlapping=function(){if(flappingInterval){$interval.cancel(flappingInterval)}
flappingInterval=null};$scope.changeGraphTimespan=function(timespan){$scope.currentSelectedTimerange=timespan;var start=(parseInt(new Date().getTime()/1000,10)-(timespan*3600));var end=parseInt(new Date().getTime()/1000,10);loadGraph($scope.host.Host.uuid,$scope.mergedService.uuid,!1,start,end,!0)};$scope.changeDataSource=function(gaugeName){$scope.currentDataSource=gaugeName;loadGraph($scope.host.Host.uuid,$scope.mergedService.uuid,!1,lastGraphStart,lastGraphEnd,!1)};var getServicestatusTextColor=function(){switch($scope.servicestatus.currentState){case 0:case '0':return'ok';case 1:case '1':return'warning';case 2:case '2':return'critical';case 3:case '3':return'unknown'}
return'txt-primary'};var loadGraph=function(hostUuid,serviceuuid,appendData,start,end,saveStartAndEnd){if(saveStartAndEnd){lastGraphStart=start;lastGraphEnd=end}
graphRenderEnd=end;if($scope.dataSources.length>0){$scope.isLoadingGraph=!0;$http.get('/Graphgenerators/getPerfdataByUuid.json',{params:{angular:!0,host_uuid:hostUuid,service_uuid:serviceuuid,start:start,end:end,jsTimestamp:1,gauge:$scope.currentDataSource}}).then(function(result){$scope.isLoadingGraph=!1;if(appendData===!1){if(result.data.performance_data.length>0){$scope.perfdata=result.data.performance_data[0]}else{$scope.perfdata={data:{},datasource:{ds:null,name:null,label:null,unit:null,act:null,warn:null,crit:null,min:null,max:null}}}}
if(appendData===!0){if(result.data.performance_data.length>0){for(var timestamp in result.data.performance_data[0].data){var frontEndTimestamp=(parseInt(timestamp,10)+($scope.timezone.user_offset*1000));$scope.perfdata.data[frontEndTimestamp]=result.data.performance_data[0].data[timestamp]}}}
if($scope.graph.graphAutoRefresh===!0&&$scope.graphAutoRefreshInterval>1000){enableGraphAutorefresh()}
renderGraph($scope.perfdata)})}};var initTooltip=function(){var previousPoint=null;var $graph_data_tooltip=$('#graph_data_tooltip');$graph_data_tooltip.css({position:'absolute',display:'none','border-top-left-radius':'5px','border-top-right-radius':'0','border-bottom-left-radius':'0','border-bottom-right-radius':'5px',padding:'2px 4px','background-color':'#f2f2f2','border-radius':'5px',opacity:0.9,'box-shadow':'2px 2px 3px #888',transition:'all 1s'});$('#graphCanvas').bind('plothover',function(event,pos,item){$('#x').text(pos.pageX.toFixed(2));$('#y').text(pos.pageY.toFixed(2));if(item){if(previousPoint!=item.dataIndex){previousPoint=item.dataIndex;$('#graph_data_tooltip').hide();var value=item.datapoint[1];if(!isNaN(value)&&isFinite(value)){value=value.toFixed(4)}
var tooltip_text=value;if(item.series.unit){tooltip_text+=' '+item.series.unit}
showTooltip(item.pageX,item.pageY,tooltip_text,item.datapoint[0])}}else{$("#graph_data_tooltip").hide();previousPoint=null}})};var showTooltip=function(x,y,contents,timestamp){var self=this;var $graph_data_tooltip=$('#graph_data_tooltip');var fooJS=new Date(timestamp+($scope.timezone.user_offset*1000));var fixTime=function(value){if(value<10){return'0'+value}
return value};var humanTime=fixTime(fooJS.getUTCDate())+'.'+fixTime(fooJS.getUTCMonth()+1)+'.'+fooJS.getUTCFullYear()+' '+fixTime(fooJS.getUTCHours())+':'+fixTime(fooJS.getUTCMinutes());$graph_data_tooltip.html('<i class="fa fa-clock-o"></i> '+humanTime+'<br /><strong>'+contents+'</strong>').css({top:y,left:x+10}).appendTo('body').fadeIn(200)};var renderGraph=function(performance_data){initTooltip();var thresholdLines=[];var thresholdAreas=[];var GraphDefaultsObj=new GraphDefaults();var defaultColor=GraphDefaultsObj.defaultFillColor;if(performance_data.datasource.warn!==""&&performance_data.datasource.crit!==""&&performance_data.datasource.warn!==null&&performance_data.datasource.crit!==null){var warn=parseFloat(performance_data.datasource.warn);var crit=parseFloat(performance_data.datasource.crit);thresholdLines.push({color:GraphDefaultsObj.warningBorderColor,yaxis:{from:warn,to:warn}});thresholdLines.push({color:GraphDefaultsObj.criticalBorderColor,yaxis:{from:crit,to:crit}});if(warn>crit){thresholdAreas.push({below:warn,color:GraphDefaultsObj.warningFillColor});thresholdAreas.push({below:crit,color:GraphDefaultsObj.criticalFillColor})}else{defaultColor=GraphDefaultsObj.criticalFillColor;thresholdAreas.push({below:crit,color:GraphDefaultsObj.warningFillColor});thresholdAreas.push({below:warn,color:GraphDefaultsObj.okFillColor})}}
var graph_data=[];for(var timestamp in performance_data.data){var frontEndTimestamp=(parseInt(timestamp,10)+($scope.timezone.user_offset*1000));graph_data.push([frontEndTimestamp,performance_data.data[timestamp]])}
var options=GraphDefaultsObj.getDefaultOptions();options.height='300';options.colors=defaultColor;options.tooltip=!0;options.tooltipOpts={defaultTheme:!1};options.xaxis.tickFormatter=function(val,axis){var fooJS=new Date(val+($scope.timezone.user_offset*1000));var fixTime=function(value){if(value<10){return'0'+value}
return value};return fixTime(fooJS.getUTCDate())+'.'+fixTime(fooJS.getUTCMonth()+1)+'.'+fooJS.getUTCFullYear()+' '+fixTime(fooJS.getUTCHours())+':'+fixTime(fooJS.getUTCMinutes())};options.series.color=defaultColor;options.series.threshold=thresholdAreas;options.lines.fillColor.colors=[{opacity:0.3},{brightness:1,opacity:0.6}];options.points={show:$scope.graph.showDatapoints,radius:1};options.xaxis.min=lastGraphStart*1000;options.xaxis.max=graphRenderEnd*1000;options.yaxis={axisLabel:performance_data.datasource.unit};plot=$.plot('#graphCanvas',[graph_data],options);if(zoomCallbackWasBind===!1){$("#graphCanvas").bind("plotselected",function(event,ranges){var start=parseInt(ranges.xaxis.from/1000,10);var end=parseInt(ranges.xaxis.to/1000);if(start>end){var tmpStart=end;end=start;start=tmpStart}
var currentTimestamp=Math.floor(Date.now()/1000);var graphAutoRefreshIntervalInSeconds=$scope.graphAutoRefreshInterval/1000;if((end+graphAutoRefreshIntervalInSeconds+120)<currentTimestamp){disableGraphAutorefresh()}
loadGraph($scope.host.Host.uuid,$scope.mergedService.uuid,!1,start,end,!0)})}
zoomCallbackWasBind=!0};$scope.loadTimelineData=function(_properties){var properties=_properties||{};var start=properties.start||-1;var end=properties.end||-1;$scope.timelineIsLoading=!0;if(start>$scope.visTimelineStart&&end<$scope.visTimelineEnd){$scope.timelineIsLoading=!1;return}
$http.get("/services/timeline/"+$scope.id+".json",{params:{'angular':!0,start:start,end:end}}).then(function(result){var timelinedata={items:new vis.DataSet(result.data.servicestatehistory),groups:new vis.DataSet(result.data.groups)};timelinedata.items.add(result.data.statehistory);timelinedata.items.add(result.data.downtimes);timelinedata.items.add(result.data.notifications);timelinedata.items.add(result.data.acknowledgements);timelinedata.items.add(result.data.timeranges);$scope.visTimelineStart=result.data.start;$scope.visTimelineEnd=result.data.end;var options={orientation:"both",start:new Date(result.data.start*1000),end:new Date(result.data.end*1000),min:new Date(new Date(result.data.start*1000).setFullYear(new Date(result.data.start*1000).getFullYear()-1)),max:new Date(result.data.end*1000),zoomMin:1000*10*60*5,format:{minorLabels:{millisecond:'SSS',second:'s',minute:'H:mm',hour:'H:mm',weekday:'ddd D',day:'D',week:'w',month:'MMM',year:'YYYY'},majorLabels:{millisecond:'H:mm:ss',second:'D MMMM H:mm',minute:'DD.MM.YYYY',hour:'DD.MM.YYYY',weekday:'MMMM YYYY',day:'MMMM YYYY',week:'MMMM YYYY',month:'YYYY',year:''}}};renderTimeline(timelinedata,options);$scope.timelineIsLoading=!1})};var renderTimeline=function(timelinedata,options){var container=document.getElementById('visualization');if($scope.visTimeline===null){$scope.visTimeline=new vis.Timeline(container,timelinedata.items,timelinedata.groups,options);$scope.visTimeline.on('rangechanged',function(properties){if($scope.visTimelineInit){$scope.visTimelineInit=!1;return}
if($scope.timelineIsLoading){return}
if($scope.visTimeout){clearTimeout($scope.visTimeout)}
$scope.visTimeout=setTimeout(function(){$scope.visTimeout=null;$scope.loadTimelineData({start:parseInt(properties.start.getTime()/1000,10),end:parseInt(properties.end.getTime()/1000,10)})},500)})}else{$scope.visTimeline.setItems(timelinedata.items)}
$scope.visTimeline.on('changed',function(){if($scope.visTimelineInit){return}
if($scope.visChangeTimeout){clearTimeout($scope.visChangeTimeout)}
$scope.visChangeTimeout=setTimeout(function(){$scope.visChangeTimeout=null;var timeRange=$scope.visTimeline.getWindow();var visTimelineStartAsTimestamp=new Date(timeRange.start).getTime();var visTimelineEndAsTimestamp=new Date(timeRange.end).getTime();var criticalItems=$scope.visTimeline.itemsData.get({fields:['start','end','className','group'],type:{start:'Date',end:'Date'},filter:function(item){return(item.group==4&&(item.className==='bg-critical'||item.className==='bg-critical-soft')&&$scope.CheckIfItemInRange(visTimelineStartAsTimestamp,visTimelineEndAsTimestamp,item))}});$scope.failureDurationInPercent=$scope.calculateFailures((visTimelineEndAsTimestamp-visTimelineStartAsTimestamp),criticalItems,visTimelineStartAsTimestamp,visTimelineEndAsTimestamp);$scope.$apply()},500)})};$scope.showTimeline=function(){$scope.showTimelineTab=!0;$scope.loadTimelineData()};$scope.hideTimeline=function(){$scope.showTimelineTab=!1};$scope.CheckIfItemInRange=function(start,end,item){var itemStart=item.start.getTime();var itemEnd=item.end.getTime();if(itemEnd<start){return!1}else if(itemStart>end){return!1}else if(itemStart>=start&&itemEnd<=end){return!0}else if(itemStart>=start&&itemEnd>end){return!0}else if(itemStart<start&&itemEnd>start&&itemEnd<end){return!0}else if(itemStart<start&&itemEnd>=end){return!0}
return!1};$scope.calculateFailures=function(totalTime,criticalItems,start,end){var failuresDuration=0;criticalItems.forEach(function(criticalItem){var itemStart=criticalItem.start.getTime();var itemEnd=criticalItem.end.getTime();failuresDuration+=((itemEnd>end)?end:itemEnd)-((itemStart<start)?start:itemStart)});return(failuresDuration/totalTime*100).toFixed(3)};$scope.loadIdOrUuid=function(){if(UuidService.isUuid($scope.id)){$http.get("/services/byUuid/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.id=result.data.service.id;$scope.load()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})}else{$scope.load()}};var enableGraphAutorefresh=function(){$scope.graph.graphAutoRefresh=!0;if(graphAutoRefreshIntervalId===null){graphAutoRefreshIntervalId=$interval(function(){var lastTimestampInCurrentData=0;for(var timestamp in $scope.perfdata.data){timestamp=parseInt(timestamp,10);if(timestamp>lastTimestampInCurrentData){lastTimestampInCurrentData=timestamp}}
lastTimestampInCurrentData=lastTimestampInCurrentData/1000;var start=lastTimestampInCurrentData;var end=Math.floor(Date.now()/1000);if(start>0){loadGraph($scope.host.Host.uuid,$scope.mergedService.uuid,!0,start,end,!1)}},$scope.graphAutoRefreshInterval)}};var disableGraphAutorefresh=function(){$scope.graph.graphAutoRefresh=!1;if(graphAutoRefreshIntervalId!==null){$interval.cancel(graphAutoRefreshIntervalId)}
graphAutoRefreshIntervalId=null};$scope.loadIdOrUuid();$scope.loadTimezone();$scope.$watch('servicestatus.isFlapping',function(){if($scope.servicestatus){if($scope.servicestatus.hasOwnProperty('isFlapping')){if($scope.servicestatus.isFlapping===!0){$scope.startFlapping()}
if($scope.servicestatus.isFlapping===!1){$scope.stopFlapping()}}}});$scope.$watch('graph.graphAutoRefresh',function(){if($scope.init){return}
if($scope.graph.graphAutoRefresh===!0){enableGraphAutorefresh()}else{disableGraphAutorefresh()}});$scope.$watch('graph.showDatapoints',function(){if($scope.init){return}
loadGraph($scope.host.Host.uuid,$scope.mergedService.uuid,!0,lastGraphStart,lastGraphEnd,!1)})});angular.module('openITCOCKPIT').controller('AcknowledgementsHostController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','AcknowledgementHosts.entry_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={AcknowledgementHosts:{state:{ok:!1,warning:!1,critical:!1,unknown:!1},state_types:{soft:!1,hard:!1},comment:'',author:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.hostBrowserMenuConfig={autoload:!0,hostId:$scope.id,includeHoststatus:!0};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/acknowledgements/host/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[AcknowledgementHosts.comment_data]':$scope.filter.AcknowledgementHosts.comment,'filter[AcknowledgementHosts.state][]':$rootScope.currentStateForApi($scope.filter.AcknowledgementHosts.state),'filter[AcknowledgementHosts.author_name]':$scope.filter.AcknowledgementHosts.author,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.acknowledgements=result.data.all_acknowledgements;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('AcknowledgementsServiceController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,$stateParams){SortService.setSort(QueryStringService.getValue('sort','AcknowledgementServices.entry_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.id=$stateParams.id;$scope.useScroll=!0;var now=new Date();var defaultFilter=function(){$scope.filter={AcknowledgementServices:{state:{warning:!1,critical:!1,unknown:!1},state_types:{soft:!1,hard:!1},comment:'',author:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2))}};$scope.serviceBrowserMenuConfig={autoload:!0,serviceId:$scope.id,includeServicestatus:!0};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/acknowledgements/service/"+$scope.id+".json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[AcknowledgementServices.comment_data]':$scope.filter.AcknowledgementServices.comment,'filter[AcknowledgementServices.state][]':$rootScope.currentStateForApi($scope.filter.AcknowledgementServices.state),'filter[AcknowledgementServices.author_name]':$scope.filter.AcknowledgementServices.author,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to}}).then(function(result){$scope.acknowledgements=result.data.all_acknowledgements;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('ServicedependenciesAddController',function($scope,$http,$state,$stateParams,$location,NotyService,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.post={Servicedependency:{container_id:null,inherits_parent:0,timeperiod_id:null,execution_fail_on_ok:1,execution_fail_on_warning:1,execution_fail_on_critical:1,execution_fail_on_unknown:1,execution_fail_on_pending:1,execution_none:1,notification_fail_on_ok:1,notification_fail_on_warning:1,notification_fail_on_critical:1,notification_fail_on_unknown:1,notification_fail_on_pending:1,notification_none:1,services:{_ids:[]},services_dependent:{_ids:[]},servicegroups:{_ids:[]},servicegroups_dependent:{_ids:[]}}};$scope.containers={};$scope.loadContainer=function(){var params={'angular':!0};$http.get("/servicedependencies/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadElementsByContainerId=function(){$http.get("/servicedependencies/loadElementsByContainerId/"+$scope.post.Servicedependency.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.servicegroups=result.data.servicegroups;$scope.servicegroups_dependent=result.data.servicegroupsDependent;$scope.timeperiods=result.data.timeperiods;$scope.processChosenServicegroups();$scope.processChosenDependentServicegroups()})};$scope.loadServices=function(searchString){if($scope.post.Servicedependency.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Servicedependency.container_id,'filter[servicename]':searchString,'selected[]':$scope.post.Servicedependency.services._ids}}).then(function(result){$scope.services=result.data.services;$scope.processChosenServices();$scope.processChosenDependentServices()})}};$scope.loadDependentServices=function(searchString){if($scope.post.Servicedependency.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Servicedependency.container_id,'filter[servicename]':searchString,'selected[]':$scope.post.Servicedependency.services_dependent._ids}}).then(function(result){$scope.services_dependent=result.data.services;$scope.processChosenServices();$scope.processChosenDependentServices()})}};$scope.submit=function(){$http.post("/servicedependencies/add.json?angular=true",$scope.post).then(function(result){var servicedependencyEditUrl=$state.href('ServicedependenciesEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+servicedependencyEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicedependenciesIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenServices=function(){for(var key in $scope.services){if(in_array($scope.services[key].key,$scope.post.Servicedependency.services_dependent._ids)){$scope.services[key].disabled=!0}else{$scope.services[key].disabled=!1}}};$scope.processChosenDependentServices=function(){for(var key in $scope.services_dependent){if(in_array($scope.services_dependent[key].key,$scope.post.Servicedependency.services._ids)){$scope.services_dependent[key].disabled=!0}else{$scope.services_dependent[key].disabled=!1}}};$scope.processChosenServicegroups=function(){for(var key in $scope.servicegroups){if(in_array($scope.servicegroups[key].key,$scope.post.Servicedependency.servicegroups_dependent._ids)){$scope.servicegroups[key].disabled=!0}else{$scope.servicegroups[key].disabled=!1}}};$scope.processChosenDependentServicegroups=function(){for(var key in $scope.servicegroups){if(in_array($scope.servicegroups_dependent[key].key,$scope.post.Servicedependency.servicegroups._ids)){$scope.servicegroups_dependent[key].disabled=!0}else{$scope.servicegroups_dependent[key].disabled=!1}}};$scope.$watch('post.Servicedependency.container_id',function(){if($scope.post.Servicedependency.container_id!=null){$scope.loadElementsByContainerId();$scope.loadServices();$scope.loadDependentServices()}},!0);$scope.$watch('post.Servicedependency.services._ids',function(){if($scope.init){return}
$scope.processChosenDependentServices()},!0);$scope.$watch('post.Servicedependency.services_dependent._ids',function(){if($scope.init){return}
$scope.processChosenServices()},!0);$scope.$watch('post.Servicedependency.servicegroups._ids',function(){if($scope.init){return}
$scope.processChosenDependentServicegroups()},!0);$scope.$watch('post.Servicedependency.servicegroups_dependent._ids',function(){if($scope.init){return}
$scope.processChosenServicegroups()},!0);$scope.loadContainer()});angular.module('openITCOCKPIT').controller('ServicedependenciesIndexController',function($scope,$http,MassChangeService,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','ServicedependenciesIndexController.id'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;$scope.sericeFocus=!0;$scope.serviceDependentFocus=!1;$scope.servicegroupFocus=!0;$scope.servicegroupDependentFocus=!1;var defaultFilter=function(){$scope.filter={Servicedependencies:{inherits_parent:'',execution_fail_on_ok:'',execution_fail_on_warning:'',execution_fail_on_critical:'',execution_fail_on_unknown:'',execution_fail_on_pending:'',execution_none:'',notification_fail_on_ok:'',notification_fail_on_warning:'',notification_fail_on_critical:'',notification_fail_on_unknown:'',notification_fail_on_pending:'',notification_none:''},Services:{servicename:''},ServicesDependent:{servicename:''},Servicegroups:{name:''},ServicegroupsDependent:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/servicedependencies/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/servicedependencies/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'page':$scope.currentPage,'filter[Servicedependencies.inherits_parent]':$scope.filter.Servicedependencies.inherits_parent,'filter[Servicedependencies.execution_fail_on_ok]':$scope.filter.Servicedependencies.execution_fail_on_ok,'filter[Servicedependencies.execution_fail_on_warning]':$scope.filter.Servicedependencies.execution_fail_on_warning,'filter[Servicedependencies.execution_fail_on_critical]':$scope.filter.Servicedependencies.execution_fail_on_critical,'filter[Servicedependencies.execution_fail_on_unknown]':$scope.filter.Servicedependencies.execution_fail_on_unknown,'filter[Servicedependencies.execution_fail_on_pending]':$scope.filter.Servicedependencies.execution_fail_on_pending,'filter[Servicedependencies.execution_none]':$scope.filter.Servicedependencies.execution_none,'filter[Servicedependencies.notification_fail_on_ok]':$scope.filter.Servicedependencies.notification_fail_on_ok,'filter[Servicedependencies.notification_fail_on_warning]':$scope.filter.Servicedependencies.notification_fail_on_warning,'filter[Servicedependencies.notification_fail_on_critical]':$scope.filter.Servicedependencies.notification_fail_on_critical,'filter[Servicedependencies.notification_fail_on_unknown]':$scope.filter.Servicedependencies.notification_fail_on_unknown,'filter[Servicedependencies.notification_fail_on_pending]':$scope.filter.Servicedependencies.notification_fail_on_pending,'filter[Servicedependencies.notification_none]':$scope.filter.Servicedependencies.notification_none,'filter[Services.servicename]':$scope.filter.Services.servicename,'filter[ServicesDependent.servicename]':$scope.filter.ServicesDependent.servicename,'filter[Servicegroups.name]':$scope.filter.Servicegroups.name,'filter[ServicegroupsDependent.name]':$scope.filter.ServicegroupsDependent.name}}).then(function(result){$scope.servicedependencies=result.data.all_servicedependencies;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.servicedependencies){for(var key in $scope.servicedependencies){if($scope.servicedependencies[key].allowEdit===!0){var id=$scope.servicedependencies[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(servicedependency){var object={};object[servicedependency.id]=$scope.objectName+servicedependency.id;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.servicedependencies){for(var id in selectedObjects){if(id==$scope.servicedependencies[key].id){if($scope.servicedependencies[key].allowEdit===!0){objects[id]=$scope.objectName+$scope.servicedependencies[key].id}}}}
return objects};defaultFilter();$scope.load();SortService.setCallback($scope.load);$scope.$watch('filter',function(){if($scope.init){return}
$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicedependenciesEditController',function($scope,$http,$state,$stateParams,$location,NotyService,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.post={Servicedependency:{container_id:null,inherits_parent:0,timeperiod_id:null,execution_fail_on_ok:1,execution_fail_on_warning:1,execution_fail_on_critical:1,execution_fail_on_unknown:1,execution_fail_on_pending:1,execution_none:1,notification_fail_on_ok:1,notification_fail_on_warning:1,notification_fail_on_critical:1,notification_fail_on_unknown:1,notification_fail_on_pending:1,notification_none:1,services:{_ids:[]},services_dependent:{_ids:[]},servicegroups:{_ids:[]},servicegroups_dependent:{_ids:[]}}};$scope.containers={};$scope.load=function(){$http.get("/servicedependencies/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.servicedependency=result.data.servicedependency;$scope.post.Servicedependency.container_id=$scope.servicedependency.container_id;$scope.post.Servicedependency.inherits_parent=$scope.servicedependency.inherits_parent;$scope.post.Servicedependency.timeperiod_id=$scope.servicedependency.timeperiod_id;$scope.post.Servicedependency.execution_fail_on_up=$scope.servicedependency.execution_fail_on_ok;$scope.post.Servicedependency.execution_fail_on_up=$scope.servicedependency.execution_fail_on_warning;$scope.post.Servicedependency.execution_fail_on_down=$scope.servicedependency.execution_fail_on_critical;$scope.post.Servicedependency.execution_fail_on_unreachable=$scope.servicedependency.execution_fail_on_unknown;$scope.post.Servicedependency.execution_fail_on_pending=$scope.servicedependency.execution_fail_on_pending;$scope.post.Servicedependency.execution_none=$scope.servicedependency.execution_none;$scope.post.Servicedependency.notification_fail_on_up=$scope.servicedependency.notification_fail_on_ok;$scope.post.Servicedependency.notification_fail_on_up=$scope.servicedependency.notification_fail_on_warning;$scope.post.Servicedependency.notification_fail_on_down=$scope.servicedependency.notification_fail_on_critical;$scope.post.Servicedependency.notification_fail_on_unreachable=$scope.servicedependency.notification_fail_on_unknown;$scope.post.Servicedependency.notification_fail_on_pending=$scope.servicedependency.notification_fail_on_pending;$scope.post.Servicedependency.notification_none=$scope.servicedependency.notification_none;for(var serviceIndex in $scope.servicedependency.services){if($scope.servicedependency.services[serviceIndex]._joinData.dependent===0){$scope.post.Servicedependency.services._ids.push($scope.servicedependency.services[serviceIndex].id)}else{$scope.post.Servicedependency.services_dependent._ids.push($scope.servicedependency.services[serviceIndex].id)}}
for(var servicegroupIndex in $scope.servicedependency.servicegroups){if($scope.servicedependency.servicegroups[servicegroupIndex]._joinData.dependent===0){$scope.post.Servicedependency.servicegroups._ids.push($scope.servicedependency.servicegroups[servicegroupIndex].id)}else{$scope.post.Servicedependency.servicegroups_dependent._ids.push($scope.servicedependency.servicegroups[servicegroupIndex].id)}}
$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainer=function(){var params={'angular':!0};$http.get("/servicedependencies/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.load()})};$scope.loadElementsByContainerId=function(){$http.get("/servicedependencies/loadElementsByContainerId/"+$scope.post.Servicedependency.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.servicegroups=result.data.servicegroups;$scope.servicegroups_dependent=result.data.servicegroupsDependent;$scope.timeperiods=result.data.timeperiods;$scope.processChosenServicegroups();$scope.processChosenDependentServicegroups()})};$scope.loadServices=function(searchString){if($scope.post.Servicedependency.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Servicedependency.container_id,'filter[servicename]':searchString,'selected[]':$scope.post.Servicedependency.services._ids}}).then(function(result){$scope.services=result.data.services;$scope.processChosenServices();$scope.processChosenDependentServices()})}};$scope.loadDependentServices=function(searchString){if($scope.post.Servicedependency.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Servicedependency.container_id,'filter[servicename]':searchString,'selected[]':$scope.post.Servicedependency.services_dependent._ids}}).then(function(result){$scope.services_dependent=result.data.services;$scope.processChosenServices();$scope.processChosenDependentServices()})}};$scope.submit=function(){$http.post("/servicedependencies/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var servicedependencyEditUrl=$state.href('ServicedependenciesEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+servicedependencyEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicedependenciesIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenServices=function(){for(var key in $scope.services){if(in_array($scope.services[key].key,$scope.post.Servicedependency.services_dependent._ids)){$scope.services[key].disabled=!0}else{$scope.services[key].disabled=!1}}};$scope.processChosenDependentServices=function(){for(var key in $scope.services_dependent){if(in_array($scope.services_dependent[key].key,$scope.post.Servicedependency.services._ids)){$scope.services_dependent[key].disabled=!0}else{$scope.services_dependent[key].disabled=!1}}};$scope.processChosenServicegroups=function(){for(var key in $scope.servicegroups){if(in_array($scope.servicegroups[key].key,$scope.post.Servicedependency.servicegroups_dependent._ids)){$scope.servicegroups[key].disabled=!0}else{$scope.servicegroups[key].disabled=!1}}};$scope.processChosenDependentServicegroups=function(){for(var key in $scope.servicegroups){if(in_array($scope.servicegroups_dependent[key].key,$scope.post.Servicedependency.servicegroups._ids)){$scope.servicegroups_dependent[key].disabled=!0}else{$scope.servicegroups_dependent[key].disabled=!1}}};$scope.$watch('post.Servicedependency.container_id',function(){if($scope.post.Servicedependency.container_id!=null){$scope.loadElementsByContainerId();$scope.loadServices();$scope.loadDependentServices()}},!0);$scope.$watch('post.Servicedependency.services._ids',function(){if($scope.init){return}
$scope.processChosenDependentServices()},!0);$scope.$watch('post.Servicedependency.services_dependent._ids',function(){if($scope.init){return}
$scope.processChosenServices()},!0);$scope.$watch('post.Servicedependency.servicegroups._ids',function(){if($scope.init){return}
$scope.processChosenDependentServicegroups()},!0);$scope.$watch('post.Servicedependency.servicegroups_dependent._ids',function(){if($scope.init){return}
$scope.processChosenServicegroups()},!0);$scope.loadContainer()});angular.module('openITCOCKPIT').controller('DowntimereportsIndexController',function($rootScope,$scope,$http,$timeout,NotyService,QueryStringService,$httpParamSerializer){$scope.init=!0;$scope.errors=null;$scope.hasEntries=null;$scope.setColorDynamically=!1;var now=new Date();$scope.tabName='reportConfig';$scope.post={evaluation_type:0,report_format:2,reflection_state:1,timeperiod_id:null,from_date:date('d.m.Y',now.getTime()/1000-(3600*24*30)),to_date:date('d.m.Y',now.getTime()/1000)};$scope.timeperiods={};$scope.reportData={hostsWithOutages:null,hostsWithoutOutages:null,downtimes:null};$scope.loadTimeperiods=function(searchString){$http.get("/timeperiods/index.json",{params:{'angular':!0,'filter[Timeperiod.name]':searchString}}).then(function(result){$scope.timeperiods=result.data.all_timeperiods})};$scope.createDowntimeReport=function(){if($scope.post.report_format===1){var GETParams={'angular':!0,'data[from_date]':$scope.post.from_date,'data[to_date]':$scope.post.to_date,'data[evaluation_type]':$scope.post.evaluation_type,'data[reflection_state]':$scope.post.reflection_state,'data[timeperiod_id]':$scope.post.timeperiod_id};$http.get("/downtimereports/createPdfReport.json",{params:GETParams}).then(function(result){window.location='/downtimereports/createPdfReport.pdf?'+$httpParamSerializer(GETParams)},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}else{$http.post("/downtimereports/index.json",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.reportMessage.successMessage});$scope.errors=null;$scope.reportData.downtimes=result.data.downtimeReport.downtimes;$scope.reportData.hostsWithOutages=result.data.downtimeReport.hostsWithOutages;$scope.reportData.hostsWithoutOutages=result.data.downtimeReport.hostsWithoutOutages;$scope.tabName='calendarOverview'},function errorCallback(result){NotyService.genericError({message:$scope.reportMessage.errorMessage});if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}};$scope.loadTimeperiods()});angular.module('openITCOCKPIT').controller('RegistersIndexController',function($scope,$http,NotyService){$scope.post={Registers:{license:''}};$scope.license={};$scope.valid=!1;$scope.scrollInterval=null;document.addEventListener("fullscreenchange",function(){if(document.fullscreenElement===null){$scope.fullscreen=!1;if($scope.scrollInterval!==null){clearInterval($scope.scrollInterval)}
$('#credits-container').hide()}},!1);$scope.$on('$destroy',function(){if($scope.scrollInterval!==null){clearInterval($scope.scrollInterval)}});var handleLicenseResponse=function(licenseResponse,showNotyMsg){if(licenseResponse.success===!0){if(showNotyMsg){NotyService.genericSuccess({message:'Valid openITCOCKPIT Enterprise license.',timeout:5500})}
$scope.license=licenseResponse.license;$scope.valid=!0;return}
if(licenseResponse.error.hasOwnProperty('error')){var errorMsg='[ '+licenseResponse.error.errno+' ] '+licenseResponse.error.error;NotyService.genericError({message:errorMsg,timeout:5500})}else{NotyService.genericError({message:licenseResponse.error})}};$scope.load=function(){$http.get("/registers/index.json",{params:{'angular':!0}}).then(function(result){$scope.hasLicense=result.data.hasLicense;if($scope.hasLicense){$scope.post.Registers=result.data.license}
var licenseResponse=result.data.licenseResponse;handleLicenseResponse(licenseResponse,!1)})};$scope.submit=function(){$http.post("/registers/index.json?angular=true",$scope.post).then(function(result){var licenseResponse=result.data.licenseResponse;handleLicenseResponse(licenseResponse,!0)},function errorCallback(result){console.log(result);if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.toggleFullscreenMode=function(){$('#credits-container').show();var elem=document.getElementById('credits-container');if($scope.fullscreen===!0){if(document.exitFullscreen){document.exitFullscreen()}else if(document.webkitExitFullscreen){document.webkitExitFullscreen()}else if(document.mozCancelFullScreen){document.mozCancelFullScreen()}else if(document.msExitFullscreen){document.msExitFullscreen()}}else{if(elem.requestFullscreen){elem.requestFullscreen()}else if(elem.mozRequestFullScreen){elem.mozRequestFullScreen()}else if(elem.webkitRequestFullscreen){elem.webkitRequestFullscreen()}else if(elem.msRequestFullscreen){elem.msRequestFullscreen()}
$('#credits-container').css({'width':$(window).width(),'height':$(window).height()});var bottom=$('#credits').height()+10;bottom=bottom*-1;$('#credits').css('bottom',bottom+'px');var stopPosition=($(window).height()/2)-(114/2);var stopInterval=($(window).height()/2)+100;var marginTop=1;$scope.scrollInterval=null;$scope.scrollInterval=setInterval(function(){var bottom=parseInt($('#credits').css('bottom'),10);bottom++;if(bottom>stopPosition){marginTop++;$('#credits-oitc-logo').css('margin-top',marginTop+'px')}else{$('#credits').css('bottom',bottom+'px')}
if(marginTop>stopInterval){clearInterval($scope.scrollInterval)}},15);$scope.fullscreen=!0}};$scope.load()});angular.module('openITCOCKPIT').controller('ServiceescalationsIndexController',function($scope,$http,MassChangeService,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','Serviceescalations.id'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;$scope.serviceFocus=!0;$scope.serviceExcludeFocus=!1;$scope.servicegroupFocus=!0;$scope.servicegroupExcludeFocus=!1;var defaultFilter=function(){$scope.filter={Serviceescalations:{first_notification:'',last_notification:'',escalate_on_recovery:'',escalate_on_warning:'',escalate_on_critical:'',escalate_on_unknown:'',notification_interval:null},Services:{servicename:''},ServicesExcluded:{servicename:''},Servicegroups:{name:''},ServicegroupsExcluded:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/serviceescalations/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/serviceescalations/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'page':$scope.currentPage,'filter[Serviceescalations.first_notification]':$scope.filter.Serviceescalations.first_notification,'filter[Serviceescalations.last_notification]':$scope.filter.Serviceescalations.last_notification,'filter[Serviceescalations.escalate_on_recovery]':$scope.filter.Serviceescalations.escalate_on_recovery,'filter[Serviceescalations.escalate_on_warning]':$scope.filter.Serviceescalations.escalate_on_warning,'filter[Serviceescalations.escalate_on_critical]':$scope.filter.Serviceescalations.escalate_on_critical,'filter[Serviceescalations.escalate_on_unknown]':$scope.filter.Serviceescalations.escalate_on_unknown,'filter[Serviceescalations.notification_interval]':$scope.filter.Serviceescalations.notification_interval,'filter[Services.servicename]':$scope.filter.Services.servicename,'filter[ServicesExcluded.servicename]':$scope.filter.ServicesExcluded.servicename,'filter[Servicegroups.name]':$scope.filter.Servicegroups.name,'filter[ServicegroupsExcluded.name]':$scope.filter.ServicegroupsExcluded.name}}).then(function(result){$scope.serviceescalations=result.data.all_serviceescalations;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.serviceescalations){for(var key in $scope.serviceescalations){if($scope.serviceescalations[key].allowEdit===!0){var id=$scope.serviceescalations[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(serviceescalation){var object={};object[serviceescalation.id]=$scope.objectName+serviceescalation.id;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.serviceescalations){for(var id in selectedObjects){if(id==$scope.serviceescalations[key].id){if($scope.serviceescalations[key].allowEdit===!0){objects[id]=$scope.objectName+$scope.serviceescalations[key].id}}}}
return objects};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServiceescalationsAddController',function($scope,$http,$state,NotyService,RedirectService){$scope.post={Serviceescalation:{container_id:null,first_notification:1,last_notification:5,notification_interval:7200,timeperiod_id:null,escalate_on_recovery:0,escalate_on_warning:0,escalate_on_critical:0,escalate_on_unknown:0,contacts:{_ids:[]},contactgroups:{_ids:[]},services:{_ids:[]},services_excluded:{_ids:[]},servicegroups:{_ids:[]},servicegroups_excluded:{_ids:[]}}};$scope.containers={};$scope.load=function(){var params={'angular':!0};$http.get("/serviceescalations/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadElementsByContainerId=function(){$http.get("/serviceescalations/loadElementsByContainerId/"+$scope.post.Serviceescalation.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.servicegroups=result.data.servicegroups;$scope.servicegroups_excluded=result.data.servicegroupsExcluded;$scope.timeperiods=result.data.timeperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups})};$scope.loadServices=function(searchString){if($scope.post.Serviceescalation.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Serviceescalation.container_id,'filter[Services.servicename]':searchString,'selected[]':$scope.post.Serviceescalation.services._ids}}).then(function(result){$scope.services=result.data.services;$scope.processChosenServices();$scope.processChosenExcludedServices()})}};$scope.loadExcludedServices=function(searchString){if($scope.post.Serviceescalation.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Serviceescalation.container_id,'filter[Services.servicename]':searchString,'selected[]':$scope.post.Serviceescalation.services_excluded._ids}}).then(function(result){$scope.services_excluded=result.data.services;$scope.processChosenServices();$scope.processChosenExcludedServices()})}};$scope.submit=function(){$http.post("/serviceescalations/add.json?angular=true",$scope.post).then(function(result){var serviceescalatingEditUrl=$state.href('ServiceescalationsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+serviceescalatingEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServiceescalationsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenServices=function(){for(var key in $scope.services){if(in_array($scope.services[key].key,$scope.post.Serviceescalation.services_excluded._ids)){$scope.services[key].disabled=!0}else{$scope.services[key].disabled=!1}}};$scope.processChosenExcludedServices=function(){for(var key in $scope.services_excluded){if(in_array($scope.services_excluded[key].key,$scope.post.Serviceescalation.services._ids)){$scope.services_excluded[key].disabled=!0}else{$scope.services_excluded[key].disabled=!1}}};$scope.processChosenServicegroups=function(){for(var key in $scope.servicegroups){if(in_array($scope.servicegroups[key].key,$scope.post.Serviceescalation.servicegroups_excluded._ids)){$scope.servicegroups[key].disabled=!0}else{$scope.servicegroups[key].disabled=!1}}};$scope.processChosenExcludedServicegroups=function(){for(var key in $scope.servicegroups_excluded){if(in_array($scope.servicegroups_excluded[key].key,$scope.post.Serviceescalation.servicegroups._ids)){$scope.servicegroups_excluded[key].disabled=!0}else{$scope.servicegroups_excluded[key].disabled=!1}}};$scope.$watch('post.Serviceescalation.container_id',function(){if($scope.post.Serviceescalation.container_id!=null){$scope.loadElementsByContainerId();$scope.loadServices();$scope.loadExcludedServices()}},!0);$scope.$watch('post.Serviceescalation.services._ids',function(){$scope.processChosenExcludedServices()},!0);$scope.$watch('post.Serviceescalation.services_excluded._ids',function(){$scope.processChosenServices()},!0);$scope.$watch('post.Serviceescalation.servicegroups._ids',function(){$scope.processChosenExcludedServicegroups()},!0);$scope.$watch('post.Serviceescalation.servicegroups_excluded._ids',function(){$scope.processChosenServicegroups()},!0);$scope.load()});angular.module('openITCOCKPIT').controller('ServiceescalationsEditController',function($scope,$http,$state,$stateParams,$location,NotyService,RedirectService){$scope.init=!0;$scope.id=$stateParams.id;$scope.post={Serviceescalation:{container_id:null,first_notification:1,last_notification:5,notification_interval:7200,timeperiod_id:null,escalate_on_recovery:0,escalate_on_warning:0,escalate_on_critical:0,escalate_on_unknown:1,contacts:{_ids:[]},contactgroups:{_ids:[]},services:{_ids:[]},services_excluded:{_ids:[]},servicegroups:{_ids:[]},servicegroups_excluded:{_ids:[]}}};$scope.containers={};$scope.load=function(){$http.get("/serviceescalations/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.serviceescalation=result.data.serviceescalation;$scope.post.Serviceescalation.container_id=$scope.serviceescalation.container_id;$scope.post.Serviceescalation.first_notification=$scope.serviceescalation.first_notification;$scope.post.Serviceescalation.last_notification=$scope.serviceescalation.last_notification;$scope.post.Serviceescalation.notification_interval=$scope.serviceescalation.notification_interval;$scope.post.Serviceescalation.timeperiod_id=$scope.serviceescalation.timeperiod_id;$scope.post.Serviceescalation.escalate_on_recovery=$scope.serviceescalation.escalate_on_recovery;$scope.post.Serviceescalation.escalate_on_warning=$scope.serviceescalation.escalate_on_warning;$scope.post.Serviceescalation.escalate_on_critical=$scope.serviceescalation.escalate_on_critical;$scope.post.Serviceescalation.escalate_on_unknown=$scope.serviceescalation.escalate_on_unknown;for(var contactIndex in $scope.serviceescalation.contacts){$scope.post.Serviceescalation.contacts._ids.push($scope.serviceescalation.contacts[contactIndex].id)}
for(var contactgroupIndex in $scope.serviceescalation.contactgroups){$scope.post.Serviceescalation.contactgroups._ids.push($scope.serviceescalation.contactgroups[contactgroupIndex].id)}
for(var serviceIndex in $scope.serviceescalation.services){if($scope.serviceescalation.services[serviceIndex]._joinData.excluded===0){$scope.post.Serviceescalation.services._ids.push($scope.serviceescalation.services[serviceIndex].id)}else{$scope.post.Serviceescalation.services_excluded._ids.push($scope.serviceescalation.services[serviceIndex].id)}}
for(var servicegroupIndex in $scope.serviceescalation.servicegroups){if($scope.serviceescalation.servicegroups[servicegroupIndex]._joinData.excluded===0){$scope.post.Serviceescalation.servicegroups._ids.push($scope.serviceescalation.servicegroups[servicegroupIndex].id)}else{$scope.post.Serviceescalation.servicegroups_excluded._ids.push($scope.serviceescalation.servicegroups[servicegroupIndex].id)}}
$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}});$scope.loadContainer()};$scope.loadContainer=function(){var params={'angular':!0};$http.get("/serviceescalations/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadElementsByContainerId=function(){$http.get("/serviceescalations/loadElementsByContainerId/"+$scope.post.Serviceescalation.container_id+".json",{params:{'angular':!0}}).then(function(result){$scope.servicegroups=result.data.servicegroups;$scope.servicegroups_excluded=result.data.servicegroupsExcluded;$scope.timeperiods=result.data.timeperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.processChosenServices();$scope.processChosenExcludedServices();$scope.processChosenServicegroups();$scope.processChosenExcludedServicegroups()})};$scope.loadServices=function(searchString){if($scope.post.Serviceescalation.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Serviceescalation.container_id,'filter[servicename]':searchString,'selected[]':$scope.post.Serviceescalation.services._ids}}).then(function(result){$scope.services=result.data.services;$scope.processChosenServices();$scope.processChosenExcludedServices()})}};$scope.loadExcludedServices=function(searchString){if($scope.post.Serviceescalation.container_id!=null){$http.get("/services/loadServicesByStringCake4.json",{params:{'angular':!0,'containerId':$scope.post.Serviceescalation.container_id,'filter[servicename]':searchString,'selected[]':$scope.post.Serviceescalation.services_excluded._ids}}).then(function(result){$scope.services_excluded=result.data.services;$scope.processChosenServices();$scope.processChosenExcludedServices()})}};$scope.submit=function(){$http.post("/serviceescalations/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var serviceescalatingEditUrl=$state.href('ServiceescalationsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+serviceescalatingEditUrl+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServiceescalationsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.processChosenServices=function(){for(var key in $scope.services){if(in_array($scope.services[key].key,$scope.post.Serviceescalation.services_excluded._ids)){$scope.services[key].disabled=!0}else{$scope.services[key].disabled=!1}}};$scope.processChosenExcludedServices=function(){for(var key in $scope.services_excluded){if(in_array($scope.services_excluded[key].key,$scope.post.Serviceescalation.services._ids)){$scope.services_excluded[key].disabled=!0}else{$scope.services_excluded[key].disabled=!1}}};$scope.processChosenServicegroups=function(){for(var key in $scope.servicegroups){if(in_array($scope.servicegroups[key].key,$scope.post.Serviceescalation.servicegroups_excluded._ids)){$scope.servicegroups[key].disabled=!0}else{$scope.servicegroups[key].disabled=!1}}};$scope.processChosenExcludedServicegroups=function(){for(var key in $scope.servicegroups_excluded){if(in_array($scope.servicegroups_excluded[key].key,$scope.post.Serviceescalation.servicegroups._ids)){$scope.servicegroups_excluded[key].disabled=!0}else{$scope.servicegroups_excluded[key].disabled=!1}}};$scope.$watch('post.Serviceescalation.container_id',function(){if($scope.post.Serviceescalation.container_id!=null){$scope.loadElementsByContainerId();$scope.loadServices();$scope.loadExcludedServices()}},!0);$scope.$watch('post.Serviceescalation.services._ids',function(){if($scope.init){return}
$scope.processChosenExcludedServices()},!0);$scope.$watch('post.Serviceescalation.services_excluded._ids',function(){if($scope.init){return}
$scope.processChosenServices()},!0);$scope.$watch('post.Serviceescalation.servicegroups._ids',function(){if($scope.init){return}
$scope.processChosenExcludedServicegroups()},!0);$scope.$watch('post.Serviceescalation.servicegroups_excluded._ids',function(){if($scope.init){return}
$scope.processChosenServicegroups()},!0);$scope.load()});angular.module('openITCOCKPIT').controller('NagiostatsIndexController',function($scope,$http,$interval){$scope.init=!0;$scope.interval=null;$scope.sparklines={NUMSVCACTCHK1M:{values:[]},NUMSVCACTCHK5M:{values:[]},NUMSVCACTCHK15M:{values:[]},NUMSVCACTCHK60M:{values:[]},NUMSVCPSVCHK1M:{values:[]},NUMSVCPSVCHK5M:{values:[]},NUMSVCPSVCHK15M:{values:[]},NUMSVCPSVCHK60M:{values:[]},NUMHSTACTCHK1M:{values:[]},NUMHSTACTCHK5M:{values:[]},NUMHSTACTCHK15M:{values:[]},NUMHSTACTCHK60M:{values:[]},NUMHSTPSVCHK1M:{values:[]},NUMHSTPSVCHK5M:{values:[]},NUMHSTPSVCHK15M:{values:[]},NUMHSTPSVCHK60M:{values:[]}};$scope.load=function(){$http.get("/nagiostats/index.json",{params:{'angular':!0}}).then(function(result){$scope.stats=result.data.stats;for(var key in $scope.sparklines){if($scope.sparklines[key].values.length>50){$scope.sparklines[key].values.shift(1,1)}
$scope.sparklines[key].values.push($scope.stats[key])}
$scope.updateSparklines();$scope.init=!1})};$scope.updateSparklines=function(){for(var key in $scope.sparklines){var sparkline=$('#'+key+'_sparkline').sparkline($scope.sparklines[key].values,{type:'line'})}};$scope.startRefresh=function(){$scope.stopRefresh();$scope.interval=$interval(function(){$scope.load()},10000)};$scope.stopRefresh=function(){if($scope.interval!==null){$interval.cancel($scope.interval)}};$scope.$on('$destroy',function(){$scope.stopRefresh()});$scope.load();$scope.startRefresh()});angular.module('openITCOCKPIT').controller('UsergroupsIndexController',function($scope,$http,$rootScope,MassChangeService){$scope.deleteUrl='/usergroups/delete/';$scope.load=function(){var params={'angular':!0,};$http.get("/usergroups/index.json",{params:params}).then(function(result){$scope.Usergroups=result.data.allUsergroups;$scope.init=!1})};$scope.getObjectForDelete=function(user){var object={};object[user.User.id]=user.User.full_name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.users){for(var id in selectedObjects){if(id==$scope.users[key].User.id){if($scope.users[key].User.allow_edit===!0){objects[id]=$scope.users[key].User.full_name}}}}
return objects};$scope.load()});angular.module('openITCOCKPIT').controller('UsergroupsEditController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.post={'Usergroup':{'name':'','description':''},'Aco':{}};$scope.init=!0;$scope.load=function(){$http.get("/usergroups/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){console.log(result.data);$scope.post.Usergroup=result.data.usergroup;$scope.acos=result.data.acos;$scope.aros=result.data.aros;$scope.alwaysAllowedAcos=result.data.alwaysAllowedAcos;$scope.acoDependencies=result.data.acoDependencies;$scope.dependentAcoIds=result.data.dependentAcoIds;$scope.selectChosen()})};$scope.selectChosen=function(){$scope.aros.forEach(function(v){$scope.post.Aco[v]=!0})};$scope.coreFilter=function(coreAco){if($scope.hasChildren(coreAco)){return!0}
return!1};$scope.acoFilter=function(aco){if(!$scope.isAllowedAco(aco)&&!$scope.isDependendAco(aco)){return!0}
return!1};$scope.isAllowedAco=function(aco){if($scope.alwaysAllowedAcos.hasOwnProperty(aco.Aco.id)){return!0}
return!1};$scope.isDependendAco=function(aco){if($scope.dependentAcoIds.hasOwnProperty(aco.Aco.id)){return!0}
return!1};$scope.hasChildren=function(aco){if(aco.children.length>0){return!0}
return!1};$scope.submit=function(){$http.post("/usergroups/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('UsergroupsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load();$scope.$watch('post',function(){console.log($scope.post)},!0)});angular.module('openITCOCKPIT').controller('ServicegroupsIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Containers.name');SortService.setDirection('asc');$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={containers:{name:''},servicegroups:{description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/servicegroups/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/servicegroups/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.containers.name,'filter[Servicegroups.description]':$scope.filter.servicegroups.description}}).then(function(result){$scope.servicegroups=result.data.all_servicegroups;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.servicegroups){for(var key in $scope.servicegroups){if($scope.servicegroups[key].allow_edit){var id=$scope.servicegroups[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(servicegroup){var object={};object[servicegroup.id]=servicegroup.container.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.servicegroups){for(var id in selectedObjects){if(id==$scope.servicegroups[key].id){objects[id]=$scope.servicegroups[key].container.name}}}
return objects};$scope.linkForPdf=function(){var baseUrl='/servicegroups/listToPdf.pdf';baseUrl+='?filter[Containers.name]='+encodeURI($scope.filter.containers.name);baseUrl+='&filter[Servicegroups.description]='+encodeURI($scope.filter.servicegroups.description);return baseUrl};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicegroupsEditController',function($scope,$http,QueryStringService,$stateParams,$state,NotyService,RedirectService){$scope.post={Servicegroup:{description:'',servicegroup_url:'',container:{name:'',parent_id:0},services:{_ids:[]},servicetemplates:{_ids:[]}}};$scope.id=$stateParams.id;$scope.deleteUrl="/servicegroups/delete/"+$scope.id+".json?angular=true";$scope.successState='ServicegroupsIndex';$scope.init=!0;$scope.load=function(){$http.get("/servicegroups/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post=result.data.servicegroup;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainers=function(){$http.get("/servicegroups/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.load()})};$scope.loadServices=function(searchString){$http.get("/services/loadServicesByContainerIdCake4.json",{params:{'angular':!0,'containerId':$scope.post.Servicegroup.container.parent_id,'filter[servicename]':searchString,'selected[]':$scope.post.Servicegroup.services._ids}}).then(function(result){$scope.services=result.data.services})};$scope.loadServicetemplates=function(searchString){$http.get("/servicegroups/loadServicetemplates.json",{params:{'angular':!0,'containerId':$scope.post.Servicegroup.container.parent_id,'filter[Servicetemplates.name]':searchString,'selected[]':$scope.post.Servicegroup.servicetemplates._ids}}).then(function(result){$scope.servicetemplates=result.data.servicetemplates})};$scope.submit=function(){$http.post("/servicegroups/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicegroupsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicegroupsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('post.Servicegroup.container.parent_id',function(){if($scope.init){return}
$scope.loadServices('');$scope.loadServicetemplates('')},!0);$scope.loadContainers()});angular.module('openITCOCKPIT').controller('ServicegroupsExtendedController',function($scope,$http,$interval,$stateParams){$scope.init=!0;$scope.servicegroupsStateFilter={};$scope.deleteUrl='/services/delete/';$scope.deactivateUrl='/services/deactivate/';$scope.activateUrl='/services/enable/';$scope.filter={servicename:''};$scope.post={Servicegroup:{id:null}};$scope.post.Servicegroup.id=$stateParams.id;if($scope.post.Servicegroup.id!==null){$scope.post.Servicegroup.id=parseInt($scope.post.Servicegroup.id,10)}
var graphStart=0;var graphEnd=0;$scope.load=function(){$http.get("/servicegroups/loadServicegroupsByString.json",{params:{'angular':!0}}).then(function(result){$scope.servicegroups=result.data.servicegroups;if($scope.post.Servicegroup.id===null){if($scope.servicegroups.length>0){$scope.post.Servicegroup.id=$scope.servicegroups[0].key}}else{$scope.loadServicesWithStatus()}
$scope.init=!1})};$scope.loadServicegroupsCallback=function(searchString){$http.get("/servicegroups/loadServicegroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':$scope.post.Servicegroup.id}}).then(function(result){$scope.servicegroups=result.data.servicegroups})};$scope.loadServicesWithStatus=function(){if($scope.post.Servicegroup.id){$http.get("/servicegroups/loadServicegroupWithServicesById/"+$scope.post.Servicegroup.id+".json",{params:{'angular':!0,'filter[servicename]':$scope.filter.servicename,}}).then(function(result){$scope.servicegroup=result.data.servicegroup;$scope.servicegroupsStateFilter={0:!0,1:!0,2:!0,3:!0}})}};$scope.getObjectForDelete=function(host,service){var object={};object[service.Service.id]=host.hostname+'/'+service.Service.servicename;return object};$scope.mouseenter=function($event,host,service){$scope.isLoadingGraph=!0;var offset={top:$event.relatedTarget.offsetTop+40,left:$event.relatedTarget.offsetLeft+40};offset.top+=$event.relatedTarget.offsetParent.offsetTop;var currentScrollPosition=$(window).scrollTop();var margin=15;var $popupGraphContainer=$('#serviceGraphContainer');if((offset.top-currentScrollPosition+margin+$popupGraphContainer.height())>$(window).innerHeight()){$popupGraphContainer.css({'top':parseInt(offset.top-$popupGraphContainer.height()-margin+10),'left':parseInt(offset.left+margin),'padding':'6px'})}else{$popupGraphContainer.css({'top':parseInt(offset.top+margin),'left':parseInt(offset.left+margin),'padding':'6px'})}
$popupGraphContainer.show();loadGraph(host,service)};$scope.mouseleave=function(){$('#serviceGraphContainer').hide();$('#serviceGraphFlot').html('')};$scope.loadTimezone=function(){$http.get("/angular/user_timezone.json",{params:{'angular':!0}}).then(function(result){$scope.timezone=result.data.timezone})};var loadGraph=function(host,service){var serverTime=new Date($scope.timezone.server_time);graphEnd=Math.floor(serverTime.getTime()/1000);graphStart=graphEnd-(3600*4);$http.get('/Graphgenerators/getPerfdataByUuid.json',{params:{angular:!0,host_uuid:host.uuid,service_uuid:service.Service.uuid,start:graphStart,end:graphEnd,jsTimestamp:1}}).then(function(result){$scope.isLoadingGraph=!1;renderGraph(result.data.performance_data)})};var renderGraph=function(performance_data){var graph_data=[];for(var dsCount in performance_data){graph_data[dsCount]=[];for(var timestamp in performance_data[dsCount].data){var frontEndTimestamp=(parseInt(timestamp,10)+($scope.timezone.user_time_to_server_offset*1000));graph_data[dsCount].push([frontEndTimestamp,performance_data[dsCount].data[timestamp]])}}
var GraphDefaultsObj=new GraphDefaults();var color_amount=performance_data.length<3?3:performance_data.length;var colors=GraphDefaultsObj.getColors(color_amount);var options=GraphDefaultsObj.getDefaultOptions();options.colors=colors.border;options.xaxis.tickFormatter=function(val,axis){var fooJS=new Date(val);var fixTime=function(value){if(value<10){return'0'+value}
return value};return fixTime(fooJS.getDate())+'.'+fixTime(fooJS.getMonth()+1)+'.'+fooJS.getFullYear()+' '+fixTime(fooJS.getHours())+':'+fixTime(fooJS.getMinutes())};options.xaxis.min=(graphStart+$scope.timezone.user_time_to_server_offset)*1000;options.xaxis.max=(graphEnd+$scope.timezone.user_time_to_server_offset)*1000;self.plot=$.plot('#serviceGraphFlot',graph_data,options)};$scope.getObjectsForExternalCommand=function(){var objects={};if($scope.post.Servicegroup.id){for(var key in $scope.servicegroup.Services){if($scope.servicegroup.Services[key].Service.allow_edit){objects[$scope.servicegroup.Services[key].Service.id]=$scope.servicegroup.Services[key]}}}
return objects};$scope.getNotOkObjectsForExternalCommand=function(){var objects={};if($scope.post.Servicegroup.id){for(var key in $scope.servicegroup.Services){if($scope.servicegroup.Services[key].Service.allow_edit&&$scope.servicegroup.Services[key].Servicestatus.currentState>0){objects[$scope.servicegroup.Services[key].Service.id]=$scope.servicegroup.Services[key]}}}
return objects};$scope.getObjectsForNotificationsExternalCommand=function(notificationsEnabled){var objects={};if($scope.post.Servicegroup.id){for(var key in $scope.servicegroup.Services){if($scope.servicegroup.Services[key].Service.allow_edit&&$scope.servicegroup.Services[key].Servicestatus.notifications_enabled===notificationsEnabled){objects[$scope.servicegroup.Services[key].Service.id]=$scope.servicegroup.Services[key]}}}
return objects};$scope.showFlashMsg=function(){$scope.showFlashSuccess=!0;$scope.autoRefreshCounter=5;var interval=$interval(function(){$scope.autoRefreshCounter--;if($scope.autoRefreshCounter===0){$scope.loadServicesWithStatus('');$interval.cancel(interval);$scope.showFlashSuccess=!1}},1000)};$scope.loadTimezone();$scope.load();$scope.$watch('post.Servicegroup.id',function(){if($scope.init){return}
$scope.loadServicesWithStatus('')},!0);$scope.$watch('filter',function(){if($scope.init){return}
if($scope.post.Servicegroup.id>0){$scope.loadServicesWithStatus('')}},!0)});angular.module('openITCOCKPIT').controller('ServicegroupsAppendController',function($scope,$http,QueryStringService,$stateParams,$state,NotyService,RedirectService){var preSelectedIds=$stateParams.ids;if(preSelectedIds!==null){var idsAsString=preSelectedIds.split(',');preSelectedIds=[];for(var i in idsAsString){preSelectedIds.push(parseInt(idsAsString[i],10))}}
if(preSelectedIds===null){preSelectedIds=[]}
$scope.post={Servicegroup:{id:0,services:{_ids:preSelectedIds}}};$scope.loadServicegroups=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
if($scope.post.Servicegroup.id){selected=[$scope.post.Servicegroup.id]}
$http.get("/servicegroups/loadServicegroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':selected}}).then(function(result){$scope.servicegroups=result.data.servicegroups})};$scope.submit=function(){$scope.errors={};if($scope.post.Servicegroup.id<1){$scope.errors.servicegroup='You need to selected at least one service group';return}
$http.post("/servicegroups/append/.json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicegroupsEdit',{id:$scope.post.Servicegroup.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicegroupsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadServicegroups('')});angular.module('openITCOCKPIT').controller('ServicegroupsAddController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){$scope.data={createAnother:!1};var preSelectedIds=$stateParams.ids;if(preSelectedIds!==null){var idsAsString=preSelectedIds.split(',');preSelectedIds=[];for(var i in idsAsString){preSelectedIds.push(parseInt(idsAsString[i],10))}}
if(preSelectedIds===null){preSelectedIds=[]}
var clearForm=function(){$scope.post={Servicegroup:{description:'',servicegroup_url:'',container:{name:'',parent_id:0},services:{_ids:preSelectedIds},servicetemplates:{_ids:[]}}}};clearForm();$scope.init=!0;$scope.load=function(){$http.get("/servicegroups/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadServices=function(searchString){$http.get("/services/loadServicesByContainerIdCake4.json",{params:{'angular':!0,'containerId':$scope.post.Servicegroup.container.parent_id,'filter[servicename]':searchString,'selected[]':$scope.post.Servicegroup.services._ids}}).then(function(result){$scope.services=result.data.services})};$scope.loadServicetemplates=function(searchString){$http.get("/servicegroups/loadServicetemplates.json",{params:{'angular':!0,'containerId':$scope.post.Servicegroup.container.parent_id,'filter[Servicetemplates.name]':searchString,'selected[]':$scope.post.Servicegroup.servicetemplates._ids}}).then(function(result){$scope.servicetemplates=result.data.servicetemplates})};$scope.submit=function(){$http.post("/servicegroups/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicegroupsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('ServicegroupsIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('post.Servicegroup.container.parent_id',function(){if($scope.init){return}
if($scope.post.Servicegroup.container.parent_id==0){return}
$scope.loadServices('');$scope.loadServicetemplates('')},!0);$scope.load()});angular.module('openITCOCKPIT').controller('ContainersShowDetailsController',function($scope,$http,$timeout,$stateParams){$scope.init=!0;$scope.post={Container:{id:null,tenant:null},backState:null};$scope.post.Container.id=$stateParams.id;if($stateParams.tenant){if(isNaN($stateParams.tenant)){$scope.post.backState=$stateParams.tenant}else{$scope.post.Container.tenant=$stateParams.tenant}}
$scope.loadContainerDetails=function(){$http.get('/containers/showDetails/'+$scope.post.Container.id+'.json',{params:{'angular':!0}}).then(function(result){$scope.containerDetails=result.data.containerDetails})};$scope.loadContainerDetails()});angular.module('openITCOCKPIT').controller('ContainersIndexController',function($scope,$http,$timeout,$stateParams,NotyService){$scope.init=!0;$scope.selectedContainerTypeId=null;var clearForm=function(){$scope.post={Container:{parent_id:null,name:null,},Location:{description:'',latitude:null,longitude:null,timezone:null,container:{name:'',parent_id:null}},Tenant:{description:'',firstname:'',lastname:'',street:'',zipcode:null,city:'',container:{name:''}}};$scope.errors=null};clearForm();$scope.selectedContainer={id:null};if($stateParams.id!=null){$scope.selectedContainer.id=parseInt($stateParams.id,10)}
$scope.load=function(){$http.get("/containers/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1;if($scope.selectedContainer.id!==null){var objectExist=_.isObject(_.find($scope.containers,function(obj){return obj.key===$scope.selectedContainer.id}));if(objectExist){$scope.loadContainers()}else{$scope.selectedContainer.id=null;$scope.subcontainers={}}}})};$scope.loadContainers=function(){if($scope.selectedContainer.id!==null){$http.get('/containers/loadContainersByContainerId/'+$scope.selectedContainer.id+'.json',{params:{'angular':!0}}).then(function(result){$scope.subcontainers=result.data.nest;$('#nestable').nestable({noDragClass:'dd-nodrag'})})}};$scope.saveNode=function(){$http.post("/containers/add.json?angular=true",$scope.post).then(function(result){$('#angularAddNodeModal').modal('hide');clearForm();NotyService.genericSuccess();$scope.load()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.saveTenant=function(){$http.post("/tenants/add.json?angular=true",$scope.post.Tenant).then(function(result){$('#angularAddNodeModal').modal('hide');clearForm();NotyService.genericSuccess();$scope.load()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.saveLocation=function(){$scope.post.Location.container.parent_id=$scope.post.Container.parent_id;$http.post("/locations/add.json?angular=true",$scope.post.Location).then(function(result){$('#angularAddNodeModal').modal('hide');clearForm();NotyService.genericSuccess();$scope.load()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.updateNode=function(){if(typeof $scope.post.Container.name==="undefined"||$scope.post.Container.name===''){$scope.errors={name:['This field cannot be left blank.']};return}
$http.post("/containers/edit.json?angular=true",$scope.post).then(function(result){$('#angularEditNodeModal').modal('hide');NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.openAddNodeModal=function(container){clearForm();$scope.selectedContainerTypeId=parseInt(container.containertype_id,10);$scope.post.Container.containertype_id=($scope.selectedContainerTypeId===1)?'2':'5';$scope.post.Container.parent_id=parseInt(container.id,10);$scope.post.Location.timezone='Europe/Berlin';$('#angularAddNodeModal').modal('show')};$scope.openEditNodeModal=function(container){clearForm();$scope.post.Container=container;$('#angularEditNodeModal').modal('show')};$scope.deleteNode=function(){$scope.isDeleting=!0;$http.post('/containers/delete/'+$scope.post.Container.id+'.json?angular=true').then(function(result){$('#angularEditNodeModal').modal('hide');NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.load();$scope.$watch('selectedContainer.id',function(){if($scope.init){return}
if($scope.selectedContainer.id!==null){$scope.loadContainers()}},!0)});angular.module('openITCOCKPIT').controller('ProxyIndexController',function($scope,$http,NotyService){$scope.post={Proxy:{id:1,ipaddress:'',port:null,enabled:!1}};$scope.hasError=null;$scope.load=function(){$http.get("/proxy/index.json",{params:{'angular':!0}}).then(function(result){$scope.post.Proxy=result.data.proxy;if($scope.post.Proxy.port===0){$scope.post.Proxy.port=null}})};$scope.submit=function(){$http.post("/proxy/index.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+' '+$scope.successMessage.message})},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('AdministratorsQuerylogController',function($scope,$http){$scope.init=!0;$scope.connectionError=!1;$scope.connected=!1;$scope.queryLog=[];$scope.onError=function(event){$scope.connectionError=!0;console.log(event)};$scope.onOpen=function(event){$scope.connected=!0};$scope.onMessage=function(event){$scope.queryLog.unshift(JSON.parse(event.data));if($scope.queryLog.length>15){$scope.queryLog.pop()}};$scope.truncate=function(){$scope.queryLog=[]};$scope.connectToQueryLogServer=function(){$http.get("/angular/websocket_configuration.json",{params:{'angular':!0}}).then(function(result){$scope.websocketConfig=result.data.websocket;$scope.connection=new WebSocket($scope.websocketConfig['QUERY_LOG.URL']);$scope.connection.onerror=$scope.onError;$scope.connection.onopen=$scope.onOpen;$scope.connection.onmessage=$scope.onMessage})};$scope.connectToQueryLogServer()});angular.module('openITCOCKPIT').controller('AdministratorsDebugController',function($scope,$http,$interval,NotyService){$scope.init=!0;$scope.graph={keepHistory:!1};$scope.processInformation={gearmanReachable:!0,isGearmanWorkerRunning:!0};$scope.sparklines={};var reloadInterval=null;var initTooltip=function(){var previousPoint=null;var $graph_data_tooltip=$('#graph_data_tooltip');$graph_data_tooltip.css({position:'absolute',display:'none','border-top-left-radius':'5px','border-top-right-radius':'0','border-bottom-left-radius':'0','border-bottom-right-radius':'5px',padding:'2px 4px','background-color':'#f2f2f2','border-radius':'5px',opacity:0.9,'box-shadow':'2px 2px 3px #888',transition:'all 1s'});$('#graphCanvas').bind('plothover',function(event,pos,item){$('#x').text(pos.pageX.toFixed(2));$('#y').text(pos.pageY.toFixed(2));if(item){if(previousPoint!=item.dataIndex){previousPoint=item.dataIndex;$('#graph_data_tooltip').hide();var value=item.datapoint[1];if(!isNaN(value)&&isFinite(value)){value=value.toFixed(4)}
var tooltip_text=value;if(item.series.unit){tooltip_text+=' '+item.series.unit}
showTooltip(item.pageX,item.pageY,tooltip_text,item.datapoint[0])}}else{$("#graph_data_tooltip").hide();previousPoint=null}})};var showTooltip=function(x,y,contents,timestamp){var self=this;var $graph_data_tooltip=$('#graph_data_tooltip');var fooJS=new Date(timestamp+($scope.timezone.user_offset*1000));var fixTime=function(value){if(value<10){return'0'+value}
return value};var humanTime=fixTime(fooJS.getUTCDate())+'.'+fixTime(fooJS.getUTCMonth()+1)+'.'+fooJS.getUTCFullYear()+' '+fixTime(fooJS.getUTCHours())+':'+fixTime(fooJS.getUTCMinutes());$graph_data_tooltip.html('<i class="fa fa-clock-o"></i> '+humanTime+'<br /><strong>'+contents+'</strong>').css({top:y,left:x+10}).appendTo('body').fadeIn(200)};var renderGraph=function(cpuLoadHistoryInformation){initTooltip();var GraphDefaultsObj=new GraphDefaults();var defaultColor=GraphDefaultsObj.defaultFillColor;var chart1=[];var chart2=[];var chart3=[];for(var timestamp in cpuLoadHistoryInformation[1]){chart1.push([timestamp,cpuLoadHistoryInformation[1][timestamp]]);chart2.push([timestamp,cpuLoadHistoryInformation[5][timestamp]]);chart3.push([timestamp,cpuLoadHistoryInformation[15][timestamp]])}
var options=GraphDefaultsObj.getDefaultOptions();options.height='300';options.tooltip=!0;options.tooltipOpts={defaultTheme:!1};options.xaxis.tickFormatter=function(val,axis){var fooJS=new Date(val+($scope.timezone.user_offset*1000));var fixTime=function(value){if(value<10){return'0'+value}
return value};return fixTime(fooJS.getUTCDate())+'.'+fixTime(fooJS.getUTCMonth()+1)+'.'+fooJS.getUTCFullYear()+' '+fixTime(fooJS.getUTCHours())+':'+fixTime(fooJS.getUTCMinutes())};options.colors=['#6595B4','#7E9D3A','#E24913'];options.lines.fill=!1;options.points={show:!0,radius:1};options.yaxis={axisLabel:'CPU load'};plot=$.plot('#graphCanvas',[chart1,chart2,chart3],options)};$scope.loadTimezone=function(){$http.get("/angular/user_timezone.json",{params:{'angular':!0}}).then(function(result){$scope.timezone=result.data.timezone})};$scope.load=function(){$http.get("/Administrators/debug.json",{params:{'angular':!0}}).then(function(result){$scope.interfaceInformation=result.data.interfaceInformation;$scope.processInformation=result.data.processInformation;$scope.renderGraph=result.data.renderGraph;$scope.currentCpuLoad=result.data.currentCpuLoad;$scope.serverInformation=result.data.serverInformation;$scope.memory=result.data.memory;$scope.diskUsage=result.data.diskUsage;$scope.gearmanStatus=result.data.gearmanStatus;$scope.emailInformation=result.data.emailInformation;$scope.userInformation=result.data.userInformation;if($scope.init){setTimeout(function(){jQuery(function(){jQuery("[rel=tooltip]").tooltip()})},250);$scope.cpuLoadHistoryInformation=result.data.cpuLoadHistoryInformation}
if($scope.renderGraph){var currentTime=new Date().getTime();if($scope.graph.keepHistory===!1){var oldestTimestamp=Object.keys($scope.cpuLoadHistoryInformation[1]);oldestTimestamp=oldestTimestamp.sort().shift();delete $scope.cpuLoadHistoryInformation[1][oldestTimestamp];delete $scope.cpuLoadHistoryInformation[5][oldestTimestamp];delete $scope.cpuLoadHistoryInformation[15][oldestTimestamp]}
$scope.cpuLoadHistoryInformation[1][currentTime]=$scope.currentCpuLoad[1];$scope.cpuLoadHistoryInformation[5][currentTime]=$scope.currentCpuLoad[5];$scope.cpuLoadHistoryInformation[15][currentTime]=$scope.currentCpuLoad[15];setTimeout(function(){renderGraph($scope.cpuLoadHistoryInformation)},250)}
for(var queueName in $scope.gearmanStatus){var jobs=parseInt($scope.gearmanStatus[queueName].jobs,10);if(!$scope.sparklines.hasOwnProperty(queueName)){$scope.sparklines[queueName]={values:[]}}
if($scope.sparklines[queueName].values.length>50){$scope.sparklines[queueName].values.shift(1,1)}
$scope.sparklines[queueName].values.push(jobs)}
$scope.updateSparklines();if(reloadInterval===null){$scope.startReloadInterval()}
$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.sendTestMail=function(){$http.post("/Administrators/testMail.json",{params:{'angular':!0}}).then(function(result){if(result.data.success){NotyService.genericSuccess({message:result.data.message});return}
NotyService.genericError({message:result.data.message})},function errorCallback(result){NotyService.genericError({message:"Unknown error"})})};$scope.getGearmanStatusClass=function(jobs,worker){jobs=parseInt(jobs,10);worker=parseInt(worker,10);var cssClass='txt-color-green';if(jobs>5){cssClass='text-primary'}
if(jobs>50){cssClass='txt-color-orangeDark'}
if(jobs>500){cssClass='txt-color-white bg-critical'}
if(worker===0){cssClass='txt-color-white bg-warning'}
return cssClass};$scope.updateSparklines=function(){for(var key in $scope.sparklines){var sparkline=$('#'+key+'_sparkline').sparkline($scope.sparklines[key].values,{type:'line'})}};$scope.startReloadInterval=function(){$scope.stop();reloadInterval=$interval(function(){$scope.load()},10000)};$scope.stop=function(){if(reloadInterval){$interval.cancel(reloadInterval)}
reloadInterval=null};$scope.$on('$destroy',function(){$scope.stop()});$scope.loadTimezone();$scope.load()});angular.module('openITCOCKPIT').controller('ServicetemplatesEditController',function($scope,$http,SudoService,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.post={Servicetemplate:{}};$scope.init=!0;$scope.loadServicetemplate=function(){var params={'angular':!0};$http.get("/servicetemplates/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Servicetemplate=result.data.servicetemplate.Servicetemplate;$scope.commands=result.data.commands;$scope.eventhandlerCommands=result.data.eventhandlerCommands;jQuery(function(){$('.tagsinput').tagsinput()});$scope.loadContainers();$scope.loadElements()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainers=function(){var params={'angular':!0};$http.get("/servicetemplates/loadContainers/"+$scope.id+".json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.areContainersRestricted=result.data.areContainersRestricted;$scope.init=!1})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Servicetemplate.command_id;$http.get("/servicetemplates/loadCommandArguments/"+commandId+"/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Servicetemplate.servicetemplatecommandargumentvalues=result.data.servicetemplatecommandargumentvalues})};$scope.loadEventHandlerCommandArguments=function(){var params={'angular':!0};var eventHandlerCommandId=$scope.post.Servicetemplate.eventhandler_command_id;$http.get("/servicetemplates/loadEventhandlerCommandArguments/"+eventHandlerCommandId+"/"+$scope.id+".json",{params:params}).then(function(result){$scope.post.Servicetemplate.servicetemplateeventcommandargumentvalues=result.data.servicetemplateeventhandlercommandargumentvalues})};$scope.loadElements=function(){var containerId=$scope.post.Servicetemplate.container_id;$http.post("/servicetemplates/loadElementsByContainerId/"+containerId+".json?angular=true",{}).then(function(result){$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.servicegroups=result.data.servicegroups})};$scope.setPriority=function(priority){$scope.post.Servicetemplate.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Servicetemplate.customvariables.push({objecttype_id:4096,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Servicetemplate.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.submit=function(){$http.post("/servicetemplates/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicetemplatesEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicetemplatesIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadServicetemplate();$scope.$watch('post.Servicetemplate.container_id',function(){if($scope.init){return}
$scope.loadElements()},!0);$scope.$watch('post.Servicetemplate.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0);$scope.$watch('post.Servicetemplate.eventhandler_command_id',function(){if($scope.init){return}
if($scope.post.Servicetemplate.eventhandler_command_id===0){$scope.post.Servicetemplate.servicetemplateeventcommandargumentvalues=[];return}
$scope.loadEventHandlerCommandArguments()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplatesCopyController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){var ids=$stateParams.ids.split(',');if(ids.length===0||ids[0]===''){RedirectService.redirectWithFallback('ServicetemplatesIndex');return}
var removeFieldsFromServicetemplatecommandargumentvalues=function(servicetemplatecommandargumentvalues){if(servicetemplatecommandargumentvalues.length===0){return[]}
for(var i in servicetemplatecommandargumentvalues){delete servicetemplatecommandargumentvalues[i].id;delete servicetemplatecommandargumentvalues[i].servicetemplate_id}
return servicetemplatecommandargumentvalues};$scope.load=function(){$http.get("/servicetemplates/copy/"+ids.join('/')+".json",{params:{'angular':!0,}}).then(function(result){$scope.sourceServicetemplates=[];$scope.commands=result.data.commands;for(var key in result.data.servicetemplates){var sourceId=result.data.servicetemplates[key].id;delete result.data.servicetemplates[key].id;var servicetemplate={Source:{id:sourceId,template_name:result.data.servicetemplates[key].template_name},Servicetemplate:result.data.servicetemplates[key]};servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues=removeFieldsFromServicetemplatecommandargumentvalues(servicetemplate.Servicetemplate.servicetemplatecommandargumentvalues);$scope.sourceServicetemplates.push(servicetemplate)}
$scope.init=!1})};$scope.loadCommandArguments=function(sourceTemplateId,commandId,$index){var params={'angular':!0};$http.get("/servicetemplates/loadCommandArguments/"+commandId+"/"+sourceTemplateId+".json",{params:params}).then(function(result){$scope.sourceServicetemplates[$index].Servicetemplate.servicetemplatecommandargumentvalues=result.data.servicetemplatecommandargumentvalues})};$scope.copy=function(){$http.post("/servicetemplates/copy/.json?angular=true",{data:$scope.sourceServicetemplates}).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('ServicetemplatesIndex')},function errorCallback(result){NotyService.genericError();$scope.sourceServicetemplates=result.data.result})};$scope.load()});angular.module('openITCOCKPIT').controller('ServicetemplatesAgentController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService,$state){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Servicetemplates.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Servicetemplates:{name:'',template_name:'',description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/servicetemplates/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Servicetemplates.name]':$scope.filter.Servicetemplates.name,'filter[Servicetemplates.template_name]':$scope.filter.Servicetemplates.template_name,'filter[Servicetemplates.description]':$scope.filter.Servicetemplates.description};$http.get("/servicetemplates/agent.json",{params:params}).then(function(result){$scope.servicetemplates=result.data.all_servicetemplates;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.servicetemplates){for(var key in $scope.servicetemplates){if($scope.servicetemplates[key].Servicetemplate.allow_edit===!0){var id=$scope.servicetemplates[key].Servicetemplate.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(servicetemplate){var object={};object[servicetemplate.Servicetemplate.id]=servicetemplate.Servicetemplate.template_name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.servicetemplates){for(var id in selectedObjects){if(id==$scope.servicetemplates[key].Servicetemplate.id){if($scope.servicetemplates[key].Servicetemplate.allow_edit===!0){objects[id]=$scope.servicetemplates[key].Servicetemplate.template_name}}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplatesAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService,$stateParams){var servicetemplateTypeId=1;if(typeof $stateParams.servicetemplateTypeId!=="undefined"){if($stateParams.servicetemplateTypeId!==null){servicetemplateTypeId=parseInt($stateParams.servicetemplateTypeId,10)}}
$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Servicetemplate:{name:'',template_name:'',description:'',command_id:0,eventhandler_command_id:0,check_interval:60,retry_interval:60,max_check_attempts:3,first_notification_delay:0,notification_interval:7200,notify_on_recovery:1,notify_on_warning:1,notify_on_critical:1,notify_on_unknown:1,notify_on_flapping:0,notify_on_downtime:0,flap_detection_enabled:0,flap_detection_on_ok:0,flap_detection_on_warning:0,flap_detection_on_critical:0,flap_detection_on_unknown:0,low_flap_threshold:0,high_flap_threshold:0,process_performance_data:1,freshness_threshold:3600,passive_checks_enabled:1,event_handler_enabled:0,active_checks_enabled:1,retain_status_information:0,retain_nonstatus_information:0,notifications_enabled:0,notes:'',priority:1,check_period_id:0,notify_period_id:0,tags:'',container_id:0,service_url:'',is_volatile:0,freshness_checks_enabled:0,servicetemplatetype_id:servicetemplateTypeId,contacts:{_ids:[]},contactgroups:{_ids:[]},servicegroups:{_ids:[]},customvariables:[],servicetemplatecommandargumentvalues:[],servicetemplateeventcommandargumentvalues:[]}}};clearForm();$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/servicetemplates/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadCommands=function(){var params={'angular':!0};$http.get("/servicetemplates/loadCommands.json",{params:params}).then(function(result){$scope.commands=result.data.commands;$scope.eventhandlerCommands=result.data.eventhandlerCommands;$scope.init=!1})};$scope.loadCommandArguments=function(){var params={'angular':!0};var commandId=$scope.post.Servicetemplate.command_id;if(commandId===0){return}
$http.get("/servicetemplates/loadCommandArguments/"+commandId+".json",{params:params}).then(function(result){$scope.post.Servicetemplate.servicetemplatecommandargumentvalues=result.data.servicetemplatecommandargumentvalues;$scope.init=!1})};$scope.loadEventHandlerCommandArguments=function(){var params={'angular':!0};var eventHandlerCommandId=$scope.post.Servicetemplate.eventhandler_command_id;if(eventHandlerCommandId===0){return}
$http.get("/servicetemplates/loadEventhandlerCommandArguments/"+eventHandlerCommandId+".json",{params:params}).then(function(result){$scope.post.Servicetemplate.servicetemplateeventcommandargumentvalues=result.data.servicetemplateeventhandlercommandargumentvalues;$scope.init=!1})};$scope.loadElements=function(){var containerId=$scope.post.Servicetemplate.container_id;if(containerId===0){return}
$http.post("/servicetemplates/loadElementsByContainerId/"+containerId+".json?angular=true",{}).then(function(result){$scope.timeperiods=result.data.timeperiods;$scope.checkperiods=result.data.checkperiods;$scope.contacts=result.data.contacts;$scope.contactgroups=result.data.contactgroups;$scope.servicegroups=result.data.servicegroups})};$scope.setPriority=function(priority){$scope.post.Servicetemplate.priority=parseInt(priority,10)};$scope.addMacro=function(){$scope.post.Servicetemplate.customvariables.push({objecttype_id:4096,name:'',value:''})};$scope.deleteMacroCallback=function(macro,index){$scope.post.Servicetemplate.customvariables.splice(index,1)};$scope.getMacroErrors=function(index){if(typeof $scope.errors!=="undefined"){if(typeof $scope.errors.customvariables!=="undefined"){if(typeof $scope.errors.customvariables[index]!=='undefined'){return $scope.errors.customvariables[index]}}}
return!1};$scope.submit=function(){$http.post("/servicetemplates/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicetemplatesEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('ServicetemplatesIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error;if($scope.errors.hasOwnProperty('customvariables')){if($scope.errors.customvariables.hasOwnProperty('custom')){$scope.errors.customvariables_unique=[$scope.errors.customvariables.custom]}}}})};$scope.loadContainers();$scope.loadCommands();jQuery(function(){$('.tagsinput').tagsinput()});$scope.$watch('post.Servicetemplate.container_id',function(){if($scope.init){return}
$scope.loadElements()},!0);$scope.$watch('post.Servicetemplate.command_id',function(){if($scope.init){return}
$scope.loadCommandArguments()},!0);$scope.$watch('post.Servicetemplate.eventhandler_command_id',function(){if($scope.init){return}
if($scope.post.Servicetemplate.eventhandler_command_id===0){$scope.post.Servicetemplate.servicetemplateeventcommandargumentvalues=[];return}
$scope.loadEventHandlerCommandArguments()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplatesUsedByController',function($scope,$http,QueryStringService,MassChangeService,$state,$stateParams){$scope.id=$stateParams.id;$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/services/delete/';$scope.filter={includeDisabled:!0};$scope.load=function(){$http.get("/servicetemplates/usedBy/"+$scope.id+".json",{params:{'angular':!0,'filter[Services.disabled]':$scope.filter.includeDisabled}}).then(function(result){$scope.servicetemplate=result.data.servicetemplate;$scope.hostsWithServices=result.data.hostsWithServices;$scope.count=result.data.count},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.selectAll=function(){if($scope.hostsWithServices){for(var hostId in $scope.hostsWithServices){if($scope.hostsWithServices[hostId].allow_edit){for(var key in $scope.hostsWithServices[hostId].services){var serviceId=$scope.hostsWithServices[hostId].services[key].id;$scope.massChange[serviceId]=!0}}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var hostId in $scope.hostsWithServices){for(var id in selectedObjects){for(var key in $scope.hostsWithServices[hostId].services){if(id==$scope.hostsWithServices[hostId].services[key].id){objects[id]=$scope.hostsWithServices[hostId].name+'/'+$scope.hostsWithServices[hostId].services[key].servicename}}}}
return objects};$scope.getObjectForDelete=function(host,service){var object={};object[service.id]=service.servicename;return object};$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0);$scope.$watch('filter',function(){$scope.undoSelection();$scope.load()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplatesIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService,$state){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Servicetemplates.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Servicetemplates:{name:'',template_name:'',description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/servicetemplates/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Servicetemplates.name]':$scope.filter.Servicetemplates.name,'filter[Servicetemplates.template_name]':$scope.filter.Servicetemplates.template_name,'filter[Servicetemplates.description]':$scope.filter.Servicetemplates.description};$http.get("/servicetemplates/index.json",{params:params}).then(function(result){$scope.servicetemplates=result.data.all_servicetemplates;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.servicetemplates){for(var key in $scope.servicetemplates){if($scope.servicetemplates[key].Servicetemplate.allow_edit===!0){var id=$scope.servicetemplates[key].Servicetemplate.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(servicetemplate){var object={};object[servicetemplate.Servicetemplate.id]=servicetemplate.Servicetemplate.template_name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.servicetemplates){for(var id in selectedObjects){if(id==$scope.servicetemplates[key].Servicetemplate.id){if($scope.servicetemplates[key].Servicetemplate.allow_edit===!0){objects[id]=$scope.servicetemplates[key].Servicetemplate.template_name}}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('MacrosIndexController',function($scope,$http,NotyService){$scope.availableMacros=[];$scope.post={};$scope.load=function(){var params={'angular':!0};$http.get("/macros/index.json",{params:params}).then(function(result){$scope.macros=result.data.all_macros;$scope.init=!1})};$scope.loadAvailableMacroNames=function(macroToInclude,callback){$scope.availableMacros=[];var params={'angular':!0,'include':macroToInclude};$http.get("/macros/getAvailableMacroNames.json",{params:params}).then(function(result){$scope.availableMacros=result.data.availableMacroNames;callback(macroToInclude)})};$scope.saveMacro=function(){$http.post("/macros/add.json?angular=true",$scope.post).then(function(result){$scope.errors={};$('#addMacroModal').modal('hide');$scope.post={};$scope.load();NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.editMacro=function(){$http.post("/macros/edit/"+$scope.editPost.Macro.id+".json?angular=true",$scope.editPost).then(function(result){$scope.errors={};$('#editMacroModal').modal('hide');$scope.editPost={};$scope.load();NotyService.genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
NotyService.genericError()})};$scope.triggerAddModal=function(){$scope.post={Macro:{name:'',value:'',description:'',password:0}};$scope.loadAvailableMacroNames('',function(){$('#addMacroModal').modal('show')})};$scope.triggerEditModal=function(macro){$scope.editPost={Macro:JSON.parse(JSON.stringify(macro))};$scope.loadAvailableMacroNames($scope.editPost.Macro.name,function(macroname){$scope.editPost.Macro.name=macroname;$('#editMacroModal').modal('show')})};$scope.deleteMacro=function(macro){$http.post("/macros/delete/"+$scope.editPost.Macro.id+".json?angular=true",$scope.editPost).then(function(result){$scope.load();$('#editMacroModal').modal('hide');NotyService.deleteSuccess()},function errorCallback(result){NotyService.deleteError()})};$scope.load()});angular.module('openITCOCKPIT').controller('HostgroupsEditController',function($scope,$http,QueryStringService,$stateParams,$state,NotyService,RedirectService){$scope.post={Hostgroup:{description:'',hostgroup_url:'',container:{name:'',parent_id:0},hosts:{_ids:[]},hosttemplates:{_ids:[]}}};$scope.id=$stateParams.id;$scope.deleteUrl="/hostgroups/delete/"+$scope.id+".json?angular=true";$scope.successState='HostgroupsIndex';$scope.init=!0;$scope.load=function(){$http.get("/hostgroups/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post=result.data.hostgroup;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainers=function(){$http.get("/hostgroups/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.load()})};$scope.loadHosts=function(searchString){$http.get("/hostgroups/loadHosts.json",{params:{'angular':!0,'containerId':$scope.post.Hostgroup.container.parent_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostgroup.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})};$scope.loadHosttemplates=function(searchString){$http.get("/hostgroups/loadHosttemplates.json",{params:{'angular':!0,'containerId':$scope.post.Hostgroup.container.parent_id,'filter[Hosttemplates.name]':searchString,'selected[]':$scope.post.Hostgroup.hosttemplates._ids}}).then(function(result){$scope.hosttemplates=result.data.hosttemplates})};$scope.submit=function(){$http.post("/hostgroups/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('HostgroupsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HostgroupsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('post.Hostgroup.container.parent_id',function(){if($scope.init){return}
$scope.loadHosts('');$scope.loadHosttemplates('')},!0);$scope.loadContainers()});angular.module('openITCOCKPIT').controller('HostgroupsAppendController',function($scope,$http,QueryStringService,$stateParams,$state,NotyService,RedirectService){var preSelectedIds=$stateParams.ids;if(preSelectedIds!==null){var idsAsString=preSelectedIds.split(',');preSelectedIds=[];for(var i in idsAsString){preSelectedIds.push(parseInt(idsAsString[i],10))}}
if(preSelectedIds===null){preSelectedIds=[]}
$scope.post={Hostgroup:{id:0,hosts:{_ids:preSelectedIds}}};$scope.loadHostgroups=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
if($scope.post.Hostgroup.id){selected=[$scope.post.Hostgroup.id]}
$http.get("/hostgroups/loadHostgroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':selected}}).then(function(result){$scope.hostgroups=result.data.hostgroups})};$scope.submit=function(){$scope.errors={};if($scope.post.Hostgroup.id<1){$scope.errors.hostgroup='You need to selected at least one host group';return}
$http.post("/hostgroups/append/.json?angular=true",$scope.post).then(function(result){var url=$state.href('HostgroupsEdit',{id:$scope.post.Hostgroup.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('HostgroupsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadHostgroups('')});angular.module('openITCOCKPIT').controller('HostgroupsExtendedController',function($scope,$http,$interval,$stateParams){$scope.init=!0;$scope.servicegroupsStateFilter={};$scope.deleteUrl='/hosts/delete/';$scope.deactivateUrl='/hosts/deactivate/';$scope.post={Hostgroup:{id:null}};$scope.post.Hostgroup.id=$stateParams.id;if($scope.post.Hostgroup.id!==null){$scope.post.Hostgroup.id=parseInt($scope.post.Hostgroup.id,10)}
$scope.showServices={};var defaultFilter=function(){$scope.filter={Host:{name:''}}};$scope.load=function(){$http.get("/hostgroups/loadHostgroupsByString.json",{params:{'angular':!0}}).then(function(result){$scope.hostgroups=result.data.hostgroups;if($scope.post.Hostgroup.id===null){if($scope.hostgroups.length>0){$scope.post.Hostgroup.id=$scope.hostgroups[0].key}}else{$scope.loadHostsWithStatus()}
$scope.init=!1})};$scope.loadHostgroupsCallback=function(searchString){$http.get("/hostgroups/loadHostgroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':$scope.post.Hostgroup.id}}).then(function(result){$scope.hostgroups=result.data.hostgroups})};$scope.loadHostsWithStatus=function(){if($scope.post.Hostgroup.id){$http.get("/hostgroups/loadHostgroupWithHostsById/"+$scope.post.Hostgroup.id+".json",{params:{'angular':!0,'selected':$scope.post.Hostgroup.id,'filter[Hosts.name]':$scope.filter.Host.name}}).then(function(result){$scope.hostgroup=result.data.hostgroup;for(var host in $scope.hostgroup.Hosts){$scope.showServices[$scope.hostgroup.Hosts[host].Host.id]=!1}
$scope.hostgroupsStateFilter={0:!0,1:!0,2:!0}})}};$scope.loadTimezone=function(){$http.get("/angular/user_timezone.json",{params:{'angular':!0}}).then(function(result){$scope.timezone=result.data.timezone})};$scope.getObjectForDelete=function(host){var object={};object[host.Host.id]=host.Host.hostname;return object};$scope.getObjectsForExternalCommand=function(){var object={};for(var host in $scope.hostgroup.Hosts){object[$scope.hostgroup.Hosts[host].Host.id]=$scope.hostgroup.Hosts[host]}
return object};$scope.showFlashMsg=function(){$scope.showFlashSuccess=!0;$scope.autoRefreshCounter=5;var interval=$interval(function(){$scope.autoRefreshCounter--;if($scope.autoRefreshCounter===0){$interval.cancel(interval);$scope.showFlashSuccess=!1}},1000)};$scope.showServicesCallback=function(hostId){if($scope.showServices[hostId]===!1){$scope.showServices[hostId]=!0}else{$scope.showServices[hostId]=!1}};$scope.loadTimezone();$scope.load();defaultFilter();$scope.$watch('post.Hostgroup.id',function(){if($scope.init){return}
defaultFilter();$scope.loadHostsWithStatus('')},!0);$scope.$watch('filter',function(){if($scope.init){return}
$scope.loadHostsWithStatus()},!0)});angular.module('openITCOCKPIT').controller('HostgroupsAddController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){$scope.data={createAnother:!1};var preSelectedIds=$stateParams.ids;if(preSelectedIds!==null){var idsAsString=preSelectedIds.split(',');preSelectedIds=[];for(var i in idsAsString){preSelectedIds.push(parseInt(idsAsString[i],10))}}
if(preSelectedIds===null){preSelectedIds=[]}
var clearForm=function(){$scope.post={Hostgroup:{description:'',hostgroup_url:'',container:{name:'',parent_id:0},hosts:{_ids:preSelectedIds},hosttemplates:{_ids:[]}}}};clearForm();$scope.init=!0;$scope.load=function(){$http.get("/hostgroups/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadHosts=function(searchString){$http.get("/hostgroups/loadHosts.json",{params:{'angular':!0,'containerId':$scope.post.Hostgroup.container.parent_id,'filter[Hosts.name]':searchString,'selected[]':$scope.post.Hostgroup.hosts._ids}}).then(function(result){$scope.hosts=result.data.hosts})};$scope.loadHosttemplates=function(searchString){$http.get("/hostgroups/loadHosttemplates.json",{params:{'angular':!0,'containerId':$scope.post.Hostgroup.container.parent_id,'filter[Hosttemplates.name]':searchString,'selected[]':$scope.post.Hostgroup.hosttemplates._ids}}).then(function(result){$scope.hosttemplates=result.data.hosttemplates})};$scope.submit=function(){$http.post("/hostgroups/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('HostgroupsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('HostgroupsIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('post.Hostgroup.container.parent_id',function(){if($scope.init){return}
if($scope.post.Hostgroup.container.parent_id==0){return}
$scope.loadHosts('');$scope.loadHosttemplates('')},!0);$scope.load()});angular.module('openITCOCKPIT').controller('HostgroupsIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Containers.name');SortService.setDirection('asc');$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={containers:{name:''},hostgroups:{description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/hostgroups/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/hostgroups/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.containers.name,'filter[Hostgroups.description]':$scope.filter.hostgroups.description}}).then(function(result){$scope.hostgroups=result.data.all_hostgroups;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.hostgroups){for(var key in $scope.hostgroups){if($scope.hostgroups[key].allowEdit){var id=$scope.hostgroups[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(hostgroup){var object={};object[hostgroup.id]=hostgroup.Containers.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.hostgroups){for(var id in selectedObjects){if(id==$scope.hostgroups[key].id){objects[id]=$scope.hostgroups[key].Containers.name}}}
return objects};$scope.linkForPdf=function(){var baseUrl='/hostgroups/listToPdf.pdf';baseUrl+='?filter[Containers.name]='+encodeURI($scope.filter.containers.name);baseUrl+='&filter[Hostgroups.description]='+encodeURI($scope.filter.hostgroups.description);return baseUrl};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('Error404Controller',function($scope,$http){});angular.module('openITCOCKPIT').controller('Error403Controller',function($scope,$http){});angular.module('openITCOCKPIT').controller('ServicetemplategroupsAllocateToHostgroupController',function($scope,$http,SudoService,$state,NotyService,$stateParams,RedirectService){$scope.isProcessing=!1;$scope.percentage=0;$scope.id=0;var urlId=$stateParams.id;if(urlId!==null){$scope.id=parseInt(urlId,10)}
$scope.init=!0;$scope.hostgroupId=0;var urlHostgroupId=$stateParams.hostgroupId;if(urlHostgroupId!==null){$scope.hostgroupId=parseInt(urlHostgroupId,10)}
$scope.loadServicetemplategroups=function(searchString,selected){var params={'angular':!0,'filter[Containers.name]':searchString,'selected[]':$scope.id};if(typeof selected!=="undefined"){if(selected>0){params['selected[]']=selected}}
$http.get("/servicetemplategroups/loadServicetemplategroupsByString.json",{params:params}).then(function(result){$scope.servicetemplategroups=result.data.servicetemplategroups})};$scope.loadHostgroups=function(searchString,selected){var params={'angular':!0,'filter[Containers.name]':searchString};if(typeof selected!=="undefined"){if(selected>0){params['selected[]']=selected}}
if($scope.hostgroupId){params['selected[]']=[$scope.hostgroupId]}
$http.get("/servicetemplategroups/loadHostgroupsByString.json",{params:params}).then(function(result){$scope.hostgroups=result.data.hostgroups;$scope.init=!1;if(selected&&$scope.id>0){$scope.loadServices()}})};$scope.loadServices=function(){$http.get("/servicetemplategroups/allocateToHostgroup/"+$scope.id+".json",{params:{'angular':!0,'hostgroupId':$scope.hostgroupId}}).then(function(result){$scope.hostsWithServicesToDeploy=result.data.hostsWithServicetemplatesForDeploy;setTimeout(function(){jQuery("[rel=tooltip]").tooltip()},250)})};$scope.submit=function(){var count=$scope.hostsWithServicesToDeploy.length;$scope.isProcessing=!0;var i=0;for(var hostIndex in $scope.hostsWithServicesToDeploy){var hostId=$scope.hostsWithServicesToDeploy[hostIndex].host.id;var servicetemplateIds=[];for(var serviceIndex in $scope.hostsWithServicesToDeploy[hostIndex].services){if($scope.hostsWithServicesToDeploy[hostIndex].services[serviceIndex].createServiceOnTargetHost===!0){servicetemplateIds.push($scope.hostsWithServicesToDeploy[hostIndex].services[serviceIndex].servicetemplate.id)}}
if(servicetemplateIds.length>0){$http.post("/servicetemplategroups/allocateToHost/"+$scope.id+".json?angular=true",{Host:{id:hostId},Servicetemplates:{_ids:servicetemplateIds}}).then(function(result){i++;$scope.percentage=Math.round(i/count*100);if(i===count){NotyService.genericSuccess();RedirectService.redirectWithFallback('ServicesNotMonitored');console.log('Data saved successfully')}},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}}};$scope.selectAll=function(){if(typeof $scope.hostsWithServicesToDeploy==="undefined"){return}
for(var hostIndex in $scope.hostsWithServicesToDeploy){for(var serviceIndex in $scope.hostsWithServicesToDeploy[hostIndex].services){$scope.hostsWithServicesToDeploy[hostIndex].services[serviceIndex].createServiceOnTargetHost=!0}}};$scope.undoSelection=function(){if(typeof $scope.hostsWithServicesToDeploy==="undefined"){return}
for(var hostIndex in $scope.hostsWithServicesToDeploy){for(var serviceIndex in $scope.hostsWithServicesToDeploy[hostIndex].services){$scope.hostsWithServicesToDeploy[hostIndex].services[serviceIndex].createServiceOnTargetHost=!1}}};$scope.loadServicetemplategroups('',$scope.id);$scope.loadHostgroups('',$scope.hostgroupId);$scope.$watch('hostgroupId',function(){if($scope.init){return}
$scope.loadServices()},!0);$scope.$watch('id',function(){if($scope.init){return}
if($scope.hostgroupId<=0){return}
$scope.loadServices()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplategroupsAppendController',function($scope,$http,QueryStringService,$stateParams,$state,NotyService,RedirectService){var preSelectedIds=$stateParams.ids;if(preSelectedIds!==null){var idsAsString=preSelectedIds.split(',');preSelectedIds=[];for(var i in idsAsString){preSelectedIds.push(parseInt(idsAsString[i],10))}}
if(preSelectedIds===null){preSelectedIds=[]}
$scope.post={Servicetemplategroup:{id:0,servicetemplates:{_ids:preSelectedIds}}};$scope.loadServicetemplategroups=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
if($scope.post.Servicetemplategroup.id){selected=[$scope.post.Servicetemplategroup.id]}
$http.get("/servicetemplategroups/loadServicetemplategroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':selected}}).then(function(result){$scope.servicetemplategroups=result.data.servicetemplategroups})};$scope.submit=function(){$scope.errors={};if($scope.post.Servicetemplategroup.id<1){$scope.errors.servicetemplategroup='You need to selected at least one host group';return}
$http.post("/servicetemplategroups/append/.json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicetemplategroupsEdit',{id:$scope.post.Servicetemplategroup.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicetemplategroupsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadServicetemplategroups('')});angular.module('openITCOCKPIT').controller('ServicetemplategroupsAllocateToHostController',function($scope,$http,SudoService,$state,NotyService,$stateParams,RedirectService){$scope.id=0;var urlId=$stateParams.id;if(urlId!==null){$scope.id=parseInt(urlId,10)}
$scope.init=!0;$scope.hostId=0;var urlHostId=$stateParams.hostId;if(urlHostId!==null){$scope.hostId=parseInt(urlHostId,10)}
$scope.loadServicetemplategroups=function(searchString,selected){var params={'angular':!0,'filter[Containers.name]':searchString,'selected[]':$scope.id};if(typeof selected!=="undefined"){if(selected>0){params['selected[]']=selected}}
$http.get("/servicetemplategroups/loadServicetemplategroupsByString.json",{params:params}).then(function(result){$scope.servicetemplategroups=result.data.servicetemplategroups})};$scope.loadHosts=function(searchString,selected){var params={'angular':!0,'filter[Hosts.name]':searchString,'includeDisabled':'false'};if(typeof selected!=="undefined"){if(selected>0){params['selected[]']=selected}}
if($scope.hostId){params['selected[]']=[$scope.hostId]}
$http.get("/hosts/loadHostsByString/1.json",{params:params}).then(function(result){$scope.hosts=result.data.hosts;$scope.init=!1;if(selected&&$scope.id>0){$scope.loadServices()}})};$scope.loadServices=function(){$http.get("/servicetemplategroups/allocateToHost/"+$scope.id+".json",{params:{'angular':!0,'hostId':$scope.hostId}}).then(function(result){$scope.servicesToDeploy=result.data.servicetemplatesForDeploy;setTimeout(function(){jQuery("[rel=tooltip]").tooltip()},250)})};$scope.submit=function(){var servicetemplatestoDeploy=[];for(var index in $scope.servicesToDeploy){if($scope.servicesToDeploy[index].createServiceOnTargetHost===!0){servicetemplatestoDeploy.push($scope.servicesToDeploy[index].servicetemplate.id)}}
$http.post("/servicetemplategroups/allocateToHost/"+$scope.id+".json?angular=true",{Host:{id:$scope.hostId},Servicetemplates:{_ids:servicetemplatestoDeploy}}).then(function(result){var url=$state.href('HostsBrowser',{id:$scope.hostId});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicetemplategroupsIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.selectAll=function(){if(typeof $scope.servicesToDeploy==="undefined"){return}
for(var index in $scope.servicesToDeploy){$scope.servicesToDeploy[index].createServiceOnTargetHost=!0}};$scope.undoSelection=function(){if(typeof $scope.servicesToDeploy==="undefined"){return}
for(var index in $scope.servicesToDeploy){$scope.servicesToDeploy[index].createServiceOnTargetHost=!1}};$scope.loadServicetemplategroups('',$scope.id);$scope.loadHosts('',$scope.hostId);$scope.$watch('hostId',function(){if($scope.init){return}
$scope.loadServices()},!0);$scope.$watch('id',function(){if($scope.init){return}
if($scope.hostId<=0){return}
$scope.loadServices()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplategroupsIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService,NotyService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Containers.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Containers:{name:''},Servicetemplategroups:{description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/servicetemplategroups/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.Containers.name,'filter[Servicetemplategroups.description]':$scope.filter.Servicetemplategroups.description};$http.get("/servicetemplategroups/index.json",{params:params}).then(function(result){$scope.servicetemplategroups=result.data.all_servicetemplategroups;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.servicetemplategroups){for(var key in $scope.servicetemplategroups){if($scope.servicetemplategroups[key].Servicetemplategroup.allow_edit===!0){var id=$scope.servicetemplategroups[key].Servicetemplategroup.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(servicetemplategroup){var object={};object[servicetemplategroup.Servicetemplategroup.id]=servicetemplategroup.Servicetemplategroup.container.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.servicetemplategroups){for(var id in selectedObjects){if(id==$scope.servicetemplategroups[key].Servicetemplategroup.id){if($scope.servicetemplategroups[key].Servicetemplategroup.allow_edit===!0){objects[id]=$scope.servicetemplategroups[key].Servicetemplategroup.container.name}}}}
return objects};$scope.allocateToMatchingHostgroup=function(servicetemplategroupId){$('#loaderModal').modal('show');$http.post("/servicetemplategroups/allocateToMatchingHostgroup/"+servicetemplategroupId+".json?angular=true",{}).then(function(result){if(result.data.hasOwnProperty('success')&&result.data.hasOwnProperty('message')){if(result.data.success){NotyService.genericSuccess({message:result.data.message});$('#loaderModal').modal('hide')}}},function errorCallback(result){if(result.data.hasOwnProperty('success')&&result.data.hasOwnProperty('message')){NotyService.genericWarning({message:result.data.message})}else{NotyService.genericError()}
if(result.data.hasOwnProperty('errors')){$scope.errors=result.data.errors}
$('#loaderModal').modal('hide')})};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplategroupsEditController',function($scope,$http,SudoService,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/servicetemplategroups/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadServicetemplategroup=function(){var params={'angular':!0};$http.get("/servicetemplategroups/edit/"+$scope.id+".json",{params:params}).then(function(result){$scope.post=result.data.servicetemplategroup;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadServicetemplates=function(){var containerId=$scope.post.Servicetemplategroup.container.parent_id;if(containerId===0){return}
$http.get("/servicetemplategroups/loadServicetemplatesByContainerId/"+containerId+".json?angular=true").then(function(result){$scope.servicetemplates=result.data.servicetemplates})};$scope.submit=function(){$http.post("/servicetemplategroups/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicetemplategroupsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('ServicetemplategroupsIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers();$scope.loadServicetemplategroup();$scope.$watch('post.Servicetemplategroup.container.parent_id',function(){if($scope.init){return}
$scope.loadServicetemplates()},!0)});angular.module('openITCOCKPIT').controller('ServicetemplategroupsAddController',function($scope,$http,SudoService,$state,NotyService,$stateParams,RedirectService){$scope.data={createAnother:!1};var preSelectedIds=$stateParams.ids;if(preSelectedIds!==null){var idsAsString=preSelectedIds.split(',');preSelectedIds=[];for(var i in idsAsString){preSelectedIds.push(parseInt(idsAsString[i],10))}}
if(preSelectedIds===null){preSelectedIds=[]}
var clearForm=function(){$scope.post={Servicetemplategroup:{description:'',container:{parent_id:0,name:''},servicetemplates:{_ids:preSelectedIds}}}};clearForm();$scope.init=!0;$scope.loadContainers=function(){var params={'angular':!0};$http.get("/servicetemplategroups/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadServicetemplates=function(){var containerId=$scope.post.Servicetemplategroup.container.parent_id;if(containerId===0){return}
$http.get("/servicetemplategroups/loadServicetemplatesByContainerId/"+containerId+".json?angular=true").then(function(result){$scope.servicetemplates=result.data.servicetemplates})};$scope.submit=function(){$http.post("/servicetemplategroups/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('ServicetemplategroupsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('ServicetemplategroupsIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers();$scope.$watch('post.Servicetemplategroup.container.parent_id',function(){if($scope.init){return}
$scope.loadServicetemplates()},!0)});angular.module('openITCOCKPIT').controller('TenantsIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Containers.name');SortService.setDirection('asc');$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={containers:{name:''},tenants:{description:'',is_active:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/tenants/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/tenants/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.containers.name,'filter[Tenants.description]':$scope.filter.tenants.description}}).then(function(result){$scope.tenants=result.data.all_tenants;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.tenants){for(var key in $scope.tenants){if($scope.tenants[key].Tenant.allowEdit){var id=$scope.tenants[key].Tenant.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(tenant){var object={};object[tenant.Tenant.id]=tenant.Tenant.container.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.tenants){for(var id in selectedObjects){if(id==$scope.tenants[key].Tenant.id){objects[id]=$scope.tenants[key].Tenant.container.name}}}
return objects};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('TenantsEditController',function($scope,$http,$state,NotyService,$stateParams,RedirectService){$scope.id=$stateParams.id;$scope.load=function(){$http.get("/tenants/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post=result.data.tenant;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/tenants/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('TenantsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('TenantsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('TenantsAddController',function($scope,$http,$state,NotyService,$location,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.post={id:0,description:'',firstname:'',lastname:'',street:'',zipcode:null,city:'',container:{name:''}}};clearForm();$scope.submit=function(){$http.post("/tenants/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('TenantsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('TenantsIndex')}else{clearForm();NotyService.scrollTop()}},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}});angular.module('openITCOCKPIT').controller('LocationsEditController',function($scope,$http,$state,NotyService,$stateParams,RedirectService){$scope.id=$stateParams.id;$scope.containers={};$scope.post={description:'',latitude:null,longitude:null,timezone:null,container:{name:'',parent_id:null}};$scope.mapDiv=$('#mapDiv');$scope.mapDiv.vectorMap({map:'world_mill_en',backgroundColor:'#fff',regionStyle:{initial:{fill:'#c4c4c4'},hover:{'hoverColor':'#4C4C4C'}},markerStyle:{initial:{fill:'#800000',stroke:'#383f47'}},});$scope.$map=$scope.mapDiv.vectorMap('get','mapObject');$scope.load=function(){$http.get("/locations/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post=result.data.location;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}});$scope.loadContainer()};$scope.submit=function(){$http.post("/locations/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('LocationsEdit',{id:$scope.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('LocationsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainer=function(){var params={'angular':!0};$http.get("/locations/loadContainers.json",{params:params}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.$watchGroup(['post.latitude','post.longitude'],function(){if($scope.init){return}
if(!isBlank($scope.post.latitude)&&!isBlank($scope.post.longitude)){$scope.$map.removeAllMarkers();$scope.$map.reset();$scope.$map.addMarker('markerIndex',{latLng:[$scope.post.latitude,$scope.post.longitude]});$scope.$map.latLngToPoint($scope.post.latitude,$scope.post.longitude)}});var isBlank=function(str){return(!str||/^\s*$/.test(str))};$scope.load()});angular.module('openITCOCKPIT').controller('LocationsIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Containers.name');SortService.setDirection('asc');$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={containers:{name:''},locations:{description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/locations/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/locations/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Containers.name]':$scope.filter.containers.name,'filter[Locations.description]':$scope.filter.locations.description}}).then(function(result){$scope.locations=result.data.all_locations;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.locations){for(var key in $scope.locations){if($scope.locations[key].Location.allowEdit){var id=$scope.locations[key].Location.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(location){var object={};object[location.Location.id]=location.Location.container.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.locations){for(var id in selectedObjects){if(id==$scope.locations[key].Location.id){objects[id]=$scope.locations[key].Location.container.name}}}
return objects};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('LocationsAddController',function($scope,$http,$state,NotyService,RedirectService){$scope.data={createAnother:!1};$scope.mapDiv=$('#mapDiv');$scope.mapDiv.vectorMap({map:'world_mill_en',backgroundColor:'#fff',regionStyle:{initial:{fill:'#c4c4c4'},hover:{'hoverColor':'#4C4C4C'}},markerStyle:{initial:{fill:'#800000',stroke:'#383f47'}},});$scope.$map=$scope.mapDiv.vectorMap('get','mapObject');var clearForm=function(){$scope.post={description:'',latitude:null,longitude:null,timezone:null,container:{name:'',parent_id:null}}};clearForm();$scope.load=function(){$http.get("/locations/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.submit=function(){$http.post("/locations/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('LocationsEdit',{id:result.data.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('LocationsIndex')}else{clearForm();NotyService.scrollTop()}},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watchGroup(['post.latitude','post.longitude'],function(){if($scope.init){return}
if(!isBlank($scope.post.latitude)&&!isBlank($scope.post.longitude)){$scope.$map.removeAllMarkers();$scope.$map.reset();$scope.$map.addMarker('markerIndex',{latLng:[$scope.post.latitude,$scope.post.longitude]});$scope.$map.latLngToPoint($scope.post.latitude,$scope.post.longitude)}});var isBlank=function(str){return(!str||/^\s*$/.test(str))};$scope.load()});angular.module('openITCOCKPIT').controller('LogentriesIndexController',function($scope,$http,$httpParamSerializer,SortService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','Logentry.entry_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Logentry:{logentry_data:'',logentry_type:''},Host:{id:[]}}};$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Logentry.logentry_data]':$scope.filter.Logentry.logentry_data,'filter[Host.id][]':$scope.filter.Host.id};if($scope.filter.Logentry.logentry_type.length>0){params['filter[Logentry.logentry_type][]']=$scope.filter.Logentry.logentry_type}
$http.get("/logentries/index.json",{params:params}).then(function(result){$scope.logentries=result.data.all_logentries;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.loadHosts=function(searchString){$http.get("/hosts/loadHostsByString.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':$scope.filter.Host.id}}).then(function(result){$scope.hosts=result.data.hosts})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.loadHosts('');$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0)});angular.module('openITCOCKPIT').controller('DowntimesServiceController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,MassChangeService,$interval){SortService.setSort(QueryStringService.getValue('sort','DowntimeServices.scheduled_start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;var now=new Date();$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={DowntimeServices:{author_name:'',comment_data:'',was_cancelled:!1,was_not_cancelled:!1},Hosts:{name:''},Services:{name:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2)),isRunning:!1,hideExpired:!0}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/downtimes/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var wasCancelled='';if($scope.filter.DowntimeServices.was_cancelled^$scope.filter.DowntimeServices.was_not_cancelled){wasCancelled=$scope.filter.DowntimeServices.was_cancelled===!0}
$http.get("/downtimes/service.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[DowntimeServices.author_name]':$scope.filter.DowntimeServices.author_name,'filter[DowntimeServices.comment_data]':$scope.filter.DowntimeServices.comment_data,'filter[DowntimeServices.was_cancelled]':wasCancelled,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[servicename]':$scope.filter.Services.name,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to,'filter[hideExpired]':$scope.filter.hideExpired,'filter[isRunning]':$scope.filter.isRunning}}).then(function(result){$scope.downtimes=result.data.all_service_downtimes;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.selectAll=function(){if($scope.downtimes){for(var key in $scope.downtimes){if($scope.downtimes[key].DowntimeService.allowEdit&&$scope.downtimes[key].DowntimeService.isCancellable){var id=$scope.downtimes[key].DowntimeService.internalDowntimeId;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(downtime){var object={};object[downtime.DowntimeService.internalDowntimeId]=downtime.Service.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.downtimes){for(var id in selectedObjects){if(id==$scope.downtimes[key].DowntimeService.internalDowntimeId){objects[id]=$scope.downtimes[key].Service.name}}}
return objects};$scope.showServiceDowntimeFlashMsg=function(){$scope.showFlashSuccess=!0;$scope.autoRefreshCounter=5;var interval=$interval(function(){$scope.autoRefreshCounter--;if($scope.autoRefreshCounter===0){$scope.load();$interval.cancel(interval);$scope.showFlashSuccess=!1}},1000)};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('DowntimesHostController',function($scope,$http,$rootScope,$httpParamSerializer,SortService,QueryStringService,MassChangeService,$interval){SortService.setSort(QueryStringService.getValue('sort','DowntimeHosts.scheduled_start_time'));SortService.setDirection(QueryStringService.getValue('direction','desc'));$scope.currentPage=1;var now=new Date();$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={DowntimeHosts:{author_name:'',comment_data:'',was_cancelled:!1,was_not_cancelled:!1},Hosts:{name:''},from:date('d.m.Y H:i',now.getTime()/1000-(3600*24*30)),to:date('d.m.Y H:i',now.getTime()/1000+(3600*24*30*2)),isRunning:!1,hideExpired:!0}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/downtimes/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){var wasCancelled='';if($scope.filter.DowntimeHosts.was_cancelled^$scope.filter.DowntimeHosts.was_not_cancelled){wasCancelled=$scope.filter.DowntimeHosts.was_cancelled===!0}
$http.get("/downtimes/host.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[DowntimeHosts.author_name]':$scope.filter.DowntimeHosts.author_name,'filter[DowntimeHosts.comment_data]':$scope.filter.DowntimeHosts.comment_data,'filter[DowntimeHosts.was_cancelled]':wasCancelled,'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[from]':$scope.filter.from,'filter[to]':$scope.filter.to,'filter[hideExpired]':$scope.filter.hideExpired,'filter[isRunning]':$scope.filter.isRunning}}).then(function(result){$scope.downtimes=result.data.all_host_downtimes;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.selectAll=function(){if($scope.downtimes){for(var key in $scope.downtimes){var id=$scope.downtimes[key].DowntimeHost.internalDowntimeId;$scope.massChange[id]=!0}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(downtime){var object={};object[downtime.DowntimeHost.internalDowntimeId]=downtime.Host.hostname;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.downtimes){for(var id in selectedObjects){if($scope.downtimes[key].DowntimeHost.allowEdit&&$scope.downtimes[key].DowntimeHost.isCancellable){if(id==$scope.downtimes[key].DowntimeHost.internalDowntimeId){objects[id]=$scope.downtimes[key].Host.hostname}}}}
return objects};$scope.showHostDowntimeFlashMsg=function(){$scope.showFlashSuccess=!0;$scope.autoRefreshCounter=5;var interval=$interval(function(){$scope.autoRefreshCounter--;if($scope.autoRefreshCounter===0){$scope.load();$interval.cancel(interval);$scope.showFlashSuccess=!1}},1000)};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('DashboardsIndexController',function($scope,$http,$timeout,$interval){$scope.init=!0;$scope.activeTab=null;$scope.availableWidgets=[];$scope.fullscreen=!1;$scope.errors={};$scope.intervalText='disabled';$scope.dashboardIsLocked=!1;$scope.data={newTabName:'',createTabFromSharedTabId:null,viewTabRotateInterval:0,renameTabName:'',renameWidgetTitle:''};$scope.gridsterOpts={minRows:2,maxRows:999,columns:12,colWidth:'auto',rowHeight:25,margins:[10,10],defaultSizeX:2,defaultSizeY:1,mobileBreakPoint:600,resizable:{enabled:!0,start:function(event,uiWidget,$element){},resize:function(event,uiWidget,$element){},stop:function(event,uiWidget,$element){}},draggable:{enabled:!0,handle:'.ui-sortable-handle',start:function(event,uiWidget,$element){},drag:function(event,uiWidget,$element){},stop:function(event,uiWidget,$element){}}};var tabSortCreated=!1;var intervalId=null;var disableWatch=!1;var watchTimeout=null;var genericError=function(){new Noty({theme:'metroui',type:'error',text:'Error while saving data',timeout:3500}).show()};var genericSuccess=function(){new Noty({theme:'metroui',type:'success',text:'Data saved successfully',timeout:3500}).show()};$scope.enableWatch=function(){setTimeout(function(){disableWatch=!1},500)};$scope.load=function(){$http.get("/dashboards/index.json",{params:{'angular':!0}}).then(function(result){$scope.tabs=result.data.tabs;if($scope.activeTab===null){$scope.activeTab=$scope.tabs[0].id}
$scope.data.viewTabRotateInterval=result.data.tabRotationInterval;updateInterval();$scope.availableWidgets=result.data.widgets;createTabSort();$scope.loadTabContent($scope.activeTab);$scope.init=!1})};$scope.loadTabContent=function(tabId){disableWatch=!0;$http.get("/dashboards/getWidgetsForTab/"+tabId+".json",{params:{'angular':!0}}).then(function(result){$scope.activeTab=tabId;for(var k in $scope.tabs){if($scope.tabs[k].id===$scope.activeTab){if($scope.tabs[k].locked===!0){$scope.dashboardIsLocked=!0;$scope.gridsterOpts.resizable.enabled=!1;$scope.gridsterOpts.draggable.enabled=!1}else{$scope.dashboardIsLocked=!1;$scope.gridsterOpts.resizable.enabled=!0;$scope.gridsterOpts.draggable.enabled=!0}
break}}
var widgets=[];for(var i in result.data.widgets.Widget){widgets.push({sizeX:parseInt(result.data.widgets.Widget[i].width,10),sizeY:parseInt(result.data.widgets.Widget[i].height,10),col:parseInt(result.data.widgets.Widget[i].col,10),row:parseInt(result.data.widgets.Widget[i].row,10),id:parseInt(result.data.widgets.Widget[i].id,10),icon:result.data.widgets.Widget[i].icon,title:result.data.widgets.Widget[i].title,color:result.data.widgets.Widget[i].color,directive:result.data.widgets.Widget[i].directive})}
$scope.activeWidgets=widgets;for(var k in $scope.tabs){if($scope.tabs[k].id===$scope.activeTab&&$scope.tabs[k].source_tab_id>0){if($scope.tabs[k].check_for_updates===!0){checkForUpdates($scope.activeTab)}}}})};$scope.saveGrid=function(){if($scope.dashboardIsLocked){return}
if($scope.activeWidgets.length===0){return}
var postData=[];for(var i in $scope.activeWidgets){postData.push({Widget:{id:$scope.activeWidgets[i].id,dashboard_tab_id:$scope.activeTab,row:$scope.activeWidgets[i].row,col:$scope.activeWidgets[i].col,width:$scope.activeWidgets[i].sizeX,height:$scope.activeWidgets[i].sizeY,title:$scope.activeWidgets[i].title,color:$scope.activeWidgets[i].color}})}
$http.post("/dashboards/saveGrid/.json?angular=true",postData).then(function(result){genericSuccess();return!0},function errorCallback(result){genericError()})};$scope.addWidgetToTab=function(typeId){if($scope.dashboardIsLocked){return}
postData={Widget:{dashboard_tab_id:$scope.activeTab,typeId:typeId}};$http.post("/dashboards/addWidgetToTab/.json?angular=true",postData).then(function(result){$scope.activeWidgets.push({sizeX:parseInt(result.data.widget.Widget.width,10),sizeY:parseInt(result.data.widget.Widget.height,10),col:parseInt(result.data.widget.Widget.col,10),row:parseInt(result.data.widget.Widget.row,10),id:parseInt(result.data.widget.Widget.id,10),icon:result.data.widget.Widget.icon,title:result.data.widget.Widget.title,directive:result.data.widget.Widget.directive,color:result.data.widget.Widget.color});return!0},function errorCallback(result){genericError()})};$scope.removeWidgetFromTab=function(id){if($scope.dashboardIsLocked){return}
postData={Widget:{id:id,dashboard_tab_id:$scope.activeTab}};$http.post("/dashboards/removeWidgetFromTab/.json?angular=true",postData).then(function(result){var currentWidgets=[];for(var i in $scope.activeWidgets){if($scope.activeWidgets[i].id==id){$scope.activeWidgets.splice(i,1);break}}},function errorCallback(result){genericError()})};$scope.refresh=function(){$scope.load()};$scope.toggleFullscreenMode=function(){var elem=document.getElementById('widget-container');if($scope.fullscreen===!0){$scope.fullscreen=!1;if(document.exitFullscreen){document.exitFullscreen()}else if(document.webkitExitFullscreen){document.webkitExitFullscreen()}else if(document.mozCancelFullScreen){document.mozCancelFullScreen()}else if(document.msExitFullscreen){document.msExitFullscreen()}}else{if(elem.requestFullscreen){elem.requestFullscreen()}else if(elem.mozRequestFullScreen){elem.mozRequestFullScreen()}else if(elem.webkitRequestFullscreen){elem.webkitRequestFullscreen()}else if(elem.msRequestFullscreen){elem.msRequestFullscreen()}
$('#widget-container').css({'width':$(window).width(),'height':$(window).height()});$scope.fullscreen=!0}};$scope.addNewTab=function(){$http.post("/dashboards/addNewTab.json?angular=true",{DashboardTab:{name:$scope.data.newTabName}}).then(function(result){genericSuccess();$scope.activeTab=parseInt(result.data.DashboardTab.DashboardTab.id,10);$scope.load();$('#addNewTabModal').modal('hide')},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.addFromSharedTab=function(){$http.post("/dashboards/createFromSharedTab.json?angular=true",{DashboardTab:{id:$scope.data.createTabFromSharedTabId}}).then(function(result){genericSuccess();$scope.activeTab=parseInt(result.data.DashboardTab.DashboardTab.id,10);$scope.load();$('#addNewTabModal').modal('hide')},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.triggerRenameTabModal=function(currentTabName){if($scope.dashboardIsLocked){return}
$('#renameTabModal').modal('show');$scope.data.renameTabName=currentTabName};$scope.renameTab=function(){$http.post("/dashboards/renameDashboardTab.json?angular=true",{DashboardTab:{id:$scope.activeTab,name:$scope.data.renameTabName}}).then(function(result){$scope.errors={};for(var i in $scope.tabs){if($scope.tabs[i].id===$scope.activeTab){$scope.tabs[i].name=$scope.data.renameTabName}}
genericSuccess();$('#renameTabModal').modal('hide')},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.deleteTab=function(tabId){$http.post("/dashboards/deleteDashboardTab.json?angular=true",{DashboardTab:{id:tabId}}).then(function(result){genericSuccess();for(var i in $scope.tabs){if($scope.tabs[i].id===$scope.activeTab){$scope.tabs.splice(i,1);break}}
if(typeof $scope.tabs[0]!=='undefined'){$scope.loadTabContent($scope.tabs[0].id)}else{window.location.href='/'}},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.startSharing=function(tabId){$http.post("/dashboards/startSharing.json?angular=true",{DashboardTab:{id:tabId}}).then(function(result){new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Your dashboard is now shared. Other users of the system can use your shared dashboard tab as an template.',timeout:3500}).show();for(var i in $scope.tabs){if($scope.tabs[i].id===$scope.activeTab){$scope.tabs[i].shared=!0}}},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.stopSharing=function(tabId){$http.post("/dashboards/stopSharing.json?angular=true",{DashboardTab:{id:tabId}}).then(function(result){genericSuccess();for(var i in $scope.tabs){if($scope.tabs[i].id===$scope.activeTab){$scope.tabs[i].shared=!1}}},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.loadSharedTabs=function(){$http.get("/dashboards/getSharedTabs.json",{params:{'angular':!0}}).then(function(result){$scope.sharedTabs=result.data.tabs})};$scope.saveTabRotateInterval=function(){$http.post("/dashboards/saveTabRotateInterval.json?angular=true",{User:{dashboard_tab_rotation:$scope.data.viewTabRotateInterval}}).then(function(result){$scope.errors={};genericSuccess();updateInterval()},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.neverPerformUpdates=function(){$http.post("/dashboards/neverPerformUpdates.json?angular=true",{DashboardTab:{id:$scope.activeTab}}).then(function(result){for(var k in $scope.tabs){if($scope.tabs[k].id===$scope.activeTab&&$scope.tabs[k].source_tab_id>0){$scope.tabs[k].check_for_updates=!1;break}}
genericSuccess();$('#updateAvailableModal').modal('hide')},function errorCallback(result){genericError()})};$scope.performUpdate=function(){$http.post("/dashboards/updateSharedTab.json?angular=true",{DashboardTab:{id:$scope.activeTab}}).then(function(result){for(var k in $scope.tabs){if($scope.tabs[k].id===$scope.activeTab){$scope.tabs[k].locked=result.data.DashboardTab.DashboardTab.locked;$scope.dashboardIsLocked=result.data.DashboardTab.DashboardTab.locked;$scope.gridsterOpts.resizable.enabled=!$scope.dashboardIsLocked;$scope.gridsterOpts.draggable.enabled=!$scope.dashboardIsLocked;break}}
genericSuccess();$('#updateAvailableModal').modal('hide');$scope.loadTabContent($scope.activeTab)},function errorCallback(result){genericError()})};$scope.triggerRenameWidgetModal=function(widgetId){if($scope.dashboardIsLocked){return}
$scope.data.renameWidgetTitle='';for(var i in $scope.activeWidgets){if($scope.activeWidgets[i].id===widgetId){$scope.currentWidgetId=widgetId;$scope.data.renameWidgetTitle=$scope.activeWidgets[i].title;break}}
$('#renameWidgetModal').modal('show')};$scope.renameWidget=function(){if(typeof $scope.currentWidgetId==='undefined'||$scope.currentWidgetId===null){genericError();return}
$http.post("/dashboards/renameWidget.json?angular=true",{Widget:{id:$scope.currentWidgetId,name:$scope.data.renameWidgetTitle}}).then(function(result){$scope.errors={};for(var i in $scope.activeWidgets){if($scope.activeWidgets[i].id===$scope.currentWidgetId){$scope.activeWidgets[i].title=$scope.data.renameWidgetTitle}}
$scope.currentWidgetId=null;genericSuccess();$('#renameWidgetModal').modal('hide')},function errorCallback(result){$scope.errors=result.data.error;genericError()})};$scope.restoreDefault=function(){$http.post("/dashboards/restoreDefault.json?angular=true",{DashboardTab:{id:$scope.activeTab}}).then(function(result){genericSuccess();$scope.loadTabContent($scope.activeTab)},function errorCallback(result){genericError()})};if(document.addEventListener){document.addEventListener('webkitfullscreenchange',fullscreenExitHandler,!1);document.addEventListener('mozfullscreenchange',fullscreenExitHandler,!1);document.addEventListener('fullscreenchange',fullscreenExitHandler,!1);document.addEventListener('MSFullscreenChange',fullscreenExitHandler,!1)}
function fullscreenExitHandler(){if(document.webkitIsFullScreen===!1||document.mozFullScreen===!1||document.msFullscreenElement===!1){$scope.fullscreen=!1;$('#widget-container').css({'width':'100%','height':'100%'})}}
var createTabSort=function(){if(tabSortCreated===!0){return}
tabSortCreated=!0;$('.nav-tabs').sortable({update:function(){var $tabbar=$(this);var $tabs=$tabbar.children();var tabIdsOrdered=[];$tabs.each(function(key,tab){var $tab=$(tab);var tabId=parseInt($tab.data('tab-id'),10);tabIdsOrdered.push(tabId)});$http.post("/dashboards/saveTabOrder.json?angular=true",{order:tabIdsOrdered}).then(function(result){genericSuccess()},function errorCallback(result){genericError()})},placeholder:'tabTargetDestination'})};var rotateTab=function(){if($scope.tabs.length===0){return}
var nextTabId=$scope.tabs[0].id;var index=0;for(var i in $scope.tabs){if($scope.tabs[i].id===$scope.activeTab){var nextIndex=index+1;if(typeof $scope.tabs[nextIndex]!=='undefined'){nextTabId=$scope.tabs[nextIndex].id;break}}
index++}
disableWatch=!0;$('#updateAvailableModal').modal('hide');$scope.loadTabContent(nextTabId)};var updateInterval=function(){if(intervalId!==null){$interval.cancel(intervalId)}
if($scope.data.viewTabRotateInterval>0){intervalId=$interval(rotateTab,($scope.data.viewTabRotateInterval*1000))}};var checkForUpdates=function(tabId){$http.get("/dashboards/checkForUpdates.json",{params:{'angular':!0,'tabId':tabId}}).then(function(result){if(result.data.updateAvailable===!0){$('#updateAvailableModal').modal('show')}})};$scope.lockOrUnlockDashboard=function(){$scope.dashboardIsLocked=$scope.dashboardIsLocked!==!0;$scope.gridsterOpts.resizable.enabled=!$scope.dashboardIsLocked;$scope.gridsterOpts.draggable.enabled=!$scope.dashboardIsLocked;for(var k in $scope.tabs){if($scope.tabs[k].id===$scope.activeTab){$scope.tabs[k].locked=$scope.dashboardIsLocked;break}}
$http.post("/dashboards/lockOrUnlockTab.json?angular=true",{DashboardTab:{id:$scope.activeTab,locked:$scope.dashboardIsLocked.toString()}}).then(function(result){genericSuccess()},function errorCallback(result){genericError()})};$scope.$watch('data.viewTabRotateInterval',function(){if($scope.init){return}
if($scope.data.viewTabRotateInterval===0){$scope.intervalText='disabled'}else{var min=parseInt($scope.data.viewTabRotateInterval/60,10);var sec=parseInt($scope.data.viewTabRotateInterval%60,10);if(min>0){$scope.intervalText=min+' minutes, '+sec+' seconds';return}
$scope.intervalText=sec+' seconds'}});$scope.$watch('activeWidgets',function(){if($scope.init===!0||disableWatch===!0){return}
if(watchTimeout!==null){$timeout.cancel(watchTimeout)}
watchTimeout=$timeout(function(){$scope.saveGrid()},1500)},!0);$scope.load()});angular.module('openITCOCKPIT').controller('CurrentstatereportsIndexController',function($rootScope,$scope,$http,$timeout,NotyService,QueryStringService,$httpParamSerializer){$scope.init=!0;$scope.errors=null;$scope.hasEntries=null;$scope.post={services:[],report_format:'2',current_state:{ok:!0,warning:!0,critical:!0,unknown:!0},Servicestatus:{hasBeenAcknowledged:null,inDowntime:null,passive:null}};$scope.filter={Servicestatus:{acknowledged:QueryStringService.getValue('has_been_acknowledged',!1)==='1',not_acknowledged:QueryStringService.getValue('has_not_been_acknowledged',!1)==='1',in_downtime:QueryStringService.getValue('in_downtime',!1)==='1',not_in_downtime:QueryStringService.getValue('not_in_downtime',!1)==='1',passive:QueryStringService.getValue('passive',!1)==='1',active:QueryStringService.getValue('active',!1)==='1'}};$scope.servicestatus={};$scope.createCurrentStateReport=function(){$scope.post.Servicestatus.current_state=[];if($scope.post.current_state.ok===!0){$scope.post.Servicestatus.current_state.push(0)}
if($scope.post.current_state.warning===!0){$scope.post.Servicestatus.current_state.push(1)}
if($scope.post.current_state.critical===!0){$scope.post.Servicestatus.current_state.push(2)}
if($scope.post.current_state.unknown===!0){$scope.post.Servicestatus.current_state.push(3)}
if($scope.filter.Servicestatus.acknowledged^$scope.filter.Servicestatus.not_acknowledged){$scope.post.Servicestatus.hasBeenAcknowledged=$scope.filter.Servicestatus.acknowledged===!0}else if($scope.filter.Servicestatus.acknowledged&&$scope.filter.Servicestatus.not_acknowledged){$scope.post.Servicestatus.hasBeenAcknowledged=null}
if($scope.filter.Servicestatus.in_downtime^$scope.filter.Servicestatus.not_in_downtime){$scope.post.Servicestatus.inDowntime=$scope.filter.Servicestatus.in_downtime===!0}else if($scope.filter.Servicestatus.in_downtime&&$scope.filter.Servicestatus.not_in_downtime){$scope.post.Servicestatus.inDowntime=null}
if($scope.filter.Servicestatus.passive^$scope.filter.Servicestatus.active){$scope.post.Servicestatus.passive=!$scope.filter.Servicestatus.passive}else if($scope.filter.Servicestatus.passive&&$scope.filter.Servicestatus.active){$scope.post.Servicestatus.passive=null}
if($scope.post.report_format==='1'){var GETParams={'angular':!0,'data[current_state][ok]':$scope.post.current_state.ok,'data[current_state][warning]':$scope.post.current_state.warning,'data[current_state][critical]':$scope.post.current_state.critical,'data[current_state][unknown]':$scope.post.current_state.unknown,'data[services][]':$scope.post.services,'data[Servicestatus][hasBeenAcknowledged]':$scope.post.Servicestatus.hasBeenAcknowledged,'data[Servicestatus][inDowntime]':$scope.post.Servicestatus.inDowntime,'data[Servicestatus][passive]':$scope.post.Servicestatus.passive,'data[Servicestatus][current_state][]':$scope.post.Servicestatus.current_state};$http.get("/currentstatereports/createPdfReport.json",{params:GETParams}).then(function(result){window.location='/currentstatereports/createPdfReport.pdf?'+$httpParamSerializer(GETParams)},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}else{$http.post("/currentstatereports/index.json",$scope.post).then(function(result){$scope.servicestatus=result.data.all_services;if(result.data.all_services.length===0){$scope.hasEntries=!1}else{$scope.hasEntries=!0}
NotyService.genericSuccess({message:$scope.reportMessage.successMessage});$scope.errors=null},function errorCallback(result){NotyService.genericError({message:$scope.reportMessage.errorMessage});if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})}};$scope.loadServices=function(searchString){$http.get("/services/loadServicesByString.json",{params:{'angular':!0,'filter[Host.name]':searchString,'filter[Service.servicename]':searchString,'selected[]':$scope.post.services}}).then(function(result){$scope.services=result.data.services})};$scope.loadServices();$scope.createBackgroundForPerfdataMeter=function(attributes){var background={'background':'none'};if(!(attributes.min&&attributes.current&&attributes.warning&&attributes.critical&&attributes.min&&attributes.max)){return background}
var linearGradientArray=['to right'];var start=(attributes.min!==null)?attributes.min:0;var end=(attributes.max!==null)?attributes.max:(attributes.critical!=null)?attributes.critical:0;var currentValue=Number(attributes.current);var warningValue=Number(attributes.warning);var criticalValue=Number(attributes.critical);if(!isNaN(warningValue)&&!isNaN(criticalValue)&&warningValue<criticalValue){var curValPosInPercent=currentValue/(end-start)*100;curValPosInPercent=(curValPosInPercent>100)?100:curValPosInPercent;if((!isNaN(warningValue)&&currentValue>=warningValue)&&(!isNaN(criticalValue)&&currentValue<criticalValue)){linearGradientArray.push('#5CB85C 0%','#F0AD4E '+curValPosInPercent+'%')}else if((!isNaN(warningValue)&&currentValue>warningValue)&&(!isNaN(criticalValue)&&currentValue>=criticalValue)){linearGradientArray.push('#5CB85C 0%','#F0AD4E '+(warningValue/(end-start)*100)+'%','#D9534F '+curValPosInPercent+'%')}else if(currentValue<warningValue){linearGradientArray.push('#5CB85C '+curValPosInPercent+'%')}
if(curValPosInPercent>0&&curValPosInPercent<100){linearGradientArray.push('transparent '+curValPosInPercent+'%')}}
return{'background':'linear-gradient('+linearGradientArray.join(', ')+')'}}});angular.module('openITCOCKPIT').controller('TimeperiodsAddController',function($scope,$http,SudoService,$state,NotyService,RedirectService){$scope.post={Timeperiod:{container_id:'',name:'',calendar_id:'',timeperiod_timeranges:[],validate_timeranges:!0}};$scope.init=!0;$scope.hasError=null;$scope.errors={};$scope.timeperiod={ranges:[]};$scope.load=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadCalendars=function(searchString){$http.get("/calendars/loadCalendarsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Timeperiod.container_id,'filter[Calendar.name]':searchString}}).then(function(result){$scope.calendars=result.data.calendars})};$scope.removeTimerange=function(rangeIndex){var timeperiodranges=[];for(var i in $scope.timeperiod.ranges){if(i!==rangeIndex){timeperiodranges.push($scope.timeperiod.ranges[i])}}
if(typeof $scope.errors.validate_timeranges!=='undefined'||typeof $scope.errors.timeperiod_timeranges!=='undefined'){$scope.timeperiod.ranges=timeperiodranges}else{$scope.timeperiod.ranges=_(timeperiodranges).chain().flatten().sortBy(function(range){return[range.day,range.start]}).value()}};$scope.addTimerange=function(){var count=$scope.timeperiod.ranges.length+1;$scope.timeperiod.ranges.push({id:count,day:'1',start:'',end:''});if(typeof $scope.errors.validate_timeranges!=='undefined'||typeof $scope.errors.timeperiod_timeranges!=='undefined'){$scope.timeperiod.ranges=$scope.timeperiod.ranges}else{$scope.timeperiod.ranges=_($scope.timeperiod.ranges).chain().flatten().sortBy(function(range){return[range.day,range.start]}).value()}};$scope.submit=function(){var index=0;for(var i in $scope.timeperiod.ranges){$scope.post.Timeperiod.timeperiod_timeranges[index]={'day':$scope.timeperiod.ranges[i].day,'start':$scope.timeperiod.ranges[i].start,'end':$scope.timeperiod.ranges[i].end};index++}
$http.post("/timeperiods/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('TimeperiodsEdit',{id:result.data.timeperiod.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('TimeperiodsIndex')},function errorCallback(result){if(result.data.hasOwnProperty('error')){NotyService.genericError();$scope.errors=result.data.error}})};$scope.$watch('post.Timeperiod.container_id',function(){if($scope.init){return}
$scope.loadCalendars('')},!0);$scope.load()});angular.module('openITCOCKPIT').controller('TimeperiodsCopyController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){var ids=$stateParams.ids.split(',');if(ids.length===0||ids[0]===''){RedirectService.redirectWithFallback('TimeperiodsIndex');return}
$scope.load=function(){$http.get("/timeperiods/copy/"+ids.join('/')+".json",{params:{'angular':!0,}}).then(function(result){$scope.sourceTimeperiods=[];for(var key in result.data.timeperiods){$scope.sourceTimeperiods.push({Source:{id:result.data.timeperiods[key].Timeperiod.id,name:result.data.timeperiods[key].Timeperiod.name,},Timeperiod:{name:result.data.timeperiods[key].Timeperiod.name,description:result.data.timeperiods[key].Timeperiod.description}})}
$scope.init=!1})};$scope.copy=function(){$http.post("/timeperiods/copy/.json?angular=true",{data:$scope.sourceTimeperiods}).then(function(result){NotyService.genericSuccess();RedirectService.redirectWithFallback('TimeperiodsIndex')},function errorCallback(result){NotyService.genericError();$scope.sourceTimeperiods=result.data.result})};$scope.load()});angular.module('openITCOCKPIT').controller('TimeperiodsEditController',function($scope,$http,SudoService,$state,$stateParams,$location,NotyService,RedirectService){$scope.post={Timeperiod:{container_id:'',name:'',calendar_id:'',timeperiod_timeranges:[],validate_timeranges:!0}};$scope.id=$stateParams.id;$scope.init=!0;$scope.hasError=null;$scope.errors={};$scope.timeperiod={ranges:[]};$scope.load=function(){$http.get("/timeperiods/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.timeperiod=result.data.timeperiod;$scope.timeperiod.ranges=[];for(key in $scope.timeperiod.timeperiod_timeranges){$scope.timeperiod.ranges.push({id:$scope.timeperiod.timeperiod_timeranges[key].id,day:$scope.timeperiod.timeperiod_timeranges[key].day.toString(),start:$scope.timeperiod.timeperiod_timeranges[key].start,end:$scope.timeperiod.timeperiod_timeranges[key].end})}
$scope.post.Timeperiod.name=$scope.timeperiod.name;$scope.post.Timeperiod.description=$scope.timeperiod.description;$scope.post.Timeperiod.container_id=$scope.timeperiod.container_id;$scope.post.Timeperiod.calendar_id=$scope.timeperiod.calendar_id;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}});$scope.loadContainer()};$scope.loadContainer=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.loadCalendars=function(searchString){$http.get("/calendars/loadCalendarsByContainerId.json",{params:{'angular':!0,'containerId':$scope.post.Timeperiod.container_id,'filter[Calendar.name]':searchString}}).then(function(result){$scope.calendars=result.data.calendars})};$scope.removeTimerange=function(rangeIndex){var timeperiodranges=[];for(var i in $scope.timeperiod.ranges){if(i!==rangeIndex){timeperiodranges.push($scope.timeperiod.ranges[i])}}
if(typeof $scope.errors.validate_timeranges!=='undefined'||typeof $scope.errors.timeperiod_timeranges!=='undefined'){$scope.timeperiod.ranges=timeperiodranges}else{$scope.timeperiod.ranges=_(timeperiodranges).chain().flatten().sortBy(function(range){return[range.day,range.start]}).value()}};$scope.addTimerange=function(){$scope.timeperiod.ranges.push({id:null,day:'1',start:'',end:''});if(typeof $scope.errors.validate_timeranges!=='undefined'||typeof $scope.errors.timeperiod_timeranges!=='undefined'){$scope.timeperiod.ranges=$scope.timeperiod.ranges}else{$scope.timeperiod.ranges=_($scope.timeperiod.ranges).chain().flatten().sortBy(function(range){return[range.day,range.start]}).value()}};$scope.submit=function(){var index=0;for(var i in $scope.timeperiod.ranges){$scope.post.Timeperiod.timeperiod_timeranges[index]={'id':$scope.timeperiod.ranges[i].id,'day':$scope.timeperiod.ranges[i].day,'start':$scope.timeperiod.ranges[i].start,'end':$scope.timeperiod.ranges[i].end};index++}
$http.post("/timeperiods/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:'<u><a href="'+$location.absUrl()+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('TimeperiodsIndex')},function errorCallback(result){if(result.data.hasOwnProperty('error')){NotyService.genericError();$scope.errors=result.data.error}})};$scope.$watch('post.Timeperiod.container_id',function(){if($scope.init){return}
$scope.loadCalendars('')},!0);$scope.load()});angular.module('openITCOCKPIT').controller('TimeperiodsIndexController',function($scope,$http,$rootScope,SortService,MassChangeService,QueryStringService){$rootScope.lastObjectName=null;SortService.setSort(QueryStringService.getValue('sort','Timeperiods.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Timeperiods:{name:'',description:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/timeperiods/delete/';$scope.init=!0;$scope.showFilter=!1;var buildUrl=function(baseUrl){var ids=Object.keys(MassChangeService.getSelected());return baseUrl+ids.join('/')};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Timeperiods.name]':$scope.filter.Timeperiods.name,'filter[Timeperiods.description]':$scope.filter.Timeperiods.description};$http.get("/timeperiods/index.json",{params:params}).then(function(result){$scope.timeperiods=result.data.all_timeperiods;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.selectAll=function(){if($scope.timeperiods){for(var key in $scope.timeperiods){if($scope.timeperiods[key].Timeperiod.allow_edit===!0){var id=$scope.timeperiods[key].Timeperiod.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(timeperiod){var object={};object[timeperiod.Timeperiod.id]=timeperiod.Timeperiod.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.timeperiods){for(var id in selectedObjects){if(id==$scope.timeperiods[key].Timeperiod.id){if($scope.timeperiods[key].Timeperiod.allow_edit===!0){objects[id]=$scope.timeperiods[key].Timeperiod.name}}}}
return objects};$scope.linkForCopy=function(){var ids=Object.keys(MassChangeService.getSelected());return ids.join(',')};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('AgentconfigsConfigController',function($scope,$http,QueryStringService,$state,$stateParams,NotyService){$scope.hostId=$stateParams.hostId;$scope.post={Agentconfig:{port:3333,use_https:0,insecure:1,basic_auth:0,username:'',password:''}};$scope.load=function(){var params={'angular':!0};$http.get("/agentconfigs/config/"+$scope.hostId+".json",{params:params}).then(function(result){$scope.host=result.data.host;$scope.post.Agentconfig=result.data.config},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/agentconfigs/config/"+$scope.hostId+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+' '+$scope.successMessage.message});$state.go('AgentconfigsScan',{hostId:$scope.hostId});console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('AgentconfigsScanController',function($scope,$http,QueryStringService,$state,$stateParams,NotyService){$scope.hostId=$stateParams.hostId;$scope.discoveryIsRunning=!0;$scope.hasError=!1;$scope.hasAgentOutput=!1;$scope.selectedHealthChecks=[];$scope.selectedProcessChecks=[];$scope.totalServices=0;$scope.isCreatingServices=!1;$scope.percentage=0;$scope.ajaxCount=0;$scope.load=function(){var params={'angular':!0};$http.get("/agentconfigs/scan/"+$scope.hostId+".json",{params:params}).then(function(result){$scope.host=result.data.host;$scope.config=result.data.config;$scope.runDiscovery()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.runDiscovery=function(){$scope.hasError=!1;$scope.hasAgentOutput=!1;var params={'angular':!0,'runDiscovery':'true'};$http.get("/agentconfigs/scan/"+$scope.hostId+".json",{params:params}).then(function(result){$scope.discoveryIsRunning=!1;$scope.hasAgentOutput=!0;$scope.mapping=result.data.mapping},function errorCallback(result){$scope.discoveryIsRunning=!1;$scope.hasError=!0;if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}
if(result.status===400){$scope.error=result.data.error}})};$scope.createServices=function(){$scope.totalServices=$scope.selectedHealthChecks.length+$scope.selectedProcessChecks.length;if($scope.totalServices===0){NotyService.genericWarning({message:'No objects selected'});return}
$scope.isCreatingServices=!0;var postData={};if($scope.selectedHealthChecks.length>0){for(var index in $scope.selectedHealthChecks){var healthCheck=$scope.selectedHealthChecks[index];postData={Service:healthCheck.agentcheck.service};postData.Service.host_id=$scope.hostId;$scope.createService(postData)}}
if($scope.selectedProcessChecks.length>0){for(var index in $scope.selectedProcessChecks){var processCheck=$scope.selectedProcessChecks[index];postData={Service:processCheck.agentcheck.service};postData.Service.host_id=$scope.hostId;$scope.createService(postData)}}};$scope.createService=function(postData){$http.post("/agentconfigs/createService.json?angular=true",postData).then(function(result){$scope.ajaxCount++;$scope.percentage=Math.round($scope.ajaxCount/$scope.totalServices*100);if($scope.ajaxCount===$scope.totalServices){$state.go('ServicesServiceList',{id:$scope.hostId})}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('UsercontainerrolesAddController',function($scope,$http,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.selectedContainers=[];$scope.selectedContainerWithPermission={};$scope.post={Usercontainerrole:{name:'',ContainersUsercontainerrolesMemberships:{}}}};clearForm();var getContainerName=function(containerId){containerId=parseInt(containerId,10);for(var index in $scope.containers){if($scope.containers[index].key===containerId){return $scope.containers[index].value}}
return'ERROR UNKNOWN CONTAINER'};$scope.loadContainer=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.submit=function(){var ContainersUsercontainerrolesMemberships={};for(var containerId in $scope.selectedContainerWithPermission){ContainersUsercontainerrolesMemberships[containerId]=$scope.selectedContainerWithPermission[containerId].permission_level}
$scope.post.Usercontainerrole.ContainersUsercontainerrolesMemberships=ContainersUsercontainerrolesMemberships;$http.post("/usercontainerroles/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('UsercontainerrolesEdit',{id:result.data.usercontainerrole.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('UsercontainerrolesIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('selectedContainers',function(){if($scope.selectedContainers.length===0){$scope.selectedContainerWithPermission={};return}
for(var index in $scope.selectedContainers){var containerId=$scope.selectedContainers[index];if(!$scope.selectedContainerWithPermission.hasOwnProperty(containerId)){var permission_level=1;if(containerId===1){permission_level=2}
$scope.selectedContainerWithPermission[containerId]={name:getContainerName(containerId),container_id:parseInt(containerId,10),permission_level:permission_level.toString()}}}
for(var containerId in $scope.selectedContainerWithPermission){containerId=parseInt(containerId,10);if($scope.selectedContainers.indexOf(containerId)===-1){delete $scope.selectedContainerWithPermission[containerId]}}},!0);$scope.loadContainer()});angular.module('openITCOCKPIT').controller('UsercontainerrolesIndexController',function($scope,$http,MassChangeService,QueryStringService,NotyService,SortService){SortService.setSort(QueryStringService.getValue('sort','Usercontainerroles.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));var defaultFilter=function(){$scope.filter={Usercontainerroles:{name:''}}};$scope.currentPage=1;$scope.useScroll=!0;$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/usercontainerroles/delete/';$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Usercontainerroles.name]':$scope.filter.Usercontainerroles.name,};$http.get("/usercontainerroles/index.json",{params:params}).then(function(result){$scope.usercontainerroles=result.data.all_usercontainerroles;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.selectAll=function(){if($scope.usercontainerroles){for(var key in $scope.usercontainerroles){if($scope.usercontainerroles[key].allow_edit===!0){var id=$scope.usercontainerroles[key].id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(usercontainerrole){var object={};object[usercontainerrole.id]=usercontainerrole.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.usercontainerroles){for(var id in selectedObjects){if(id==$scope.usercontainerroles[key].id){if($scope.usercontainerroles[key].allow_edit===!0){objects[id]=$scope.usercontainerroles[key].name}}}}
return objects};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.load();$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('UsercontainerrolesEditController',function($scope,$http,$stateParams,$state,NotyService,RedirectService){$scope.id=$stateParams.id;var getContainerName=function(containerId){containerId=parseInt(containerId,10);for(var index in $scope.containers){if($scope.containers[index].key===containerId){return $scope.containers[index].value}}
return'ERROR UNKNOWN CONTAINER'};$scope.load=function(){$scope.selectedContainers=[];$scope.selectedContainerWithPermission={};$http.get("/usercontainerroles/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){var data=result.data.usercontainerrole;$scope.selectedContainers=data.containers._ids;delete data.containers;for(var containerId in data.ContainersUsercontainerrolesMemberships){$scope.selectedContainerWithPermission[containerId]={name:getContainerName(containerId),container_id:parseInt(containerId,10),permission_level:data.ContainersUsercontainerrolesMemberships[containerId].toString()}}
data.ContainersUsercontainerrolesMemberships={};$scope.post={Usercontainerrole:data}},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainer=function(){$http.get("/containers/loadContainersForAngular.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.load()})};$scope.submit=function(){var ContainersUsercontainerrolesMemberships={};for(var containerId in $scope.selectedContainerWithPermission){ContainersUsercontainerrolesMemberships[containerId]=$scope.selectedContainerWithPermission[containerId].permission_level}
$scope.post.Usercontainerrole.ContainersUsercontainerrolesMemberships=ContainersUsercontainerrolesMemberships;$http.post("/usercontainerroles/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('UsercontainerrolesEdit',{id:result.data.usercontainerrole.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('UsercontainerrolesIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.$watch('selectedContainers',function(){if(typeof $scope.selectedContainers==="undefined"){return}
if($scope.selectedContainers.length===0){$scope.selectedContainerWithPermission={};return}
for(var index in $scope.selectedContainers){var containerId=$scope.selectedContainers[index];if(!$scope.selectedContainerWithPermission.hasOwnProperty(containerId)){var permission_level=1;if(containerId===1){permission_level=2}
$scope.selectedContainerWithPermission[containerId]={name:getContainerName(containerId),container_id:parseInt(containerId,10),permission_level:permission_level.toString()}}}
for(var containerId in $scope.selectedContainerWithPermission){containerId=parseInt(containerId,10);if($scope.selectedContainers.indexOf(containerId)===-1){delete $scope.selectedContainerWithPermission[containerId]}}},!0);$scope.loadContainer()});angular.module('openITCOCKPIT').controller('SatellitesIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Satellites.name');SortService.setDirection('asc');$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={Satellites:{name:'',address:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/distribute_module/satellites/delete/';$scope.init=!0;$scope.showFilter=!1;$scope.load=function(){$http.get("/distribute_module/satellites/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Satellites.name]':$scope.filter.Satellites.name,'filter[Satellites.address]':$scope.filter.Satellites.address}}).then(function(result){$scope.satellites=result.data.all_satellites;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.selectAll=function(){if($scope.satellites){for(var key in $scope.satellites){if($scope.satellites[key].allow_edit){var id=$scope.satellites[key].id;$scope.massChange[id]=!0}}}};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.satellites){for(var id in selectedObjects){if(id==$scope.satellites[key].id){objects[id]=$scope.satellites[key].name}}}
return objects};$scope.getObjectForDelete=function(satellite){var object={};object[satellite.id]=satellite.name;return object};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('SatellitesAddController',function($scope,$http,$state,NotyService,RedirectService){$scope.data={createAnother:!1};var clearForm=function(){$scope.post={Satellite:{container_id:0,timezone:'',name:'',address:''}}};clearForm();$scope.loadContainers=function(){$http.get("/distribute_module/satellites/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.submit=function(){$http.post("/distribute_module/satellites/add.json?angular=true",$scope.post).then(function(result){var url=$state.href('SatellitesEdit',{id:result.data.satellite.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});if($scope.data.createAnother===!1){RedirectService.redirectWithFallback('SatellitesIndex')}else{clearForm();$scope.errors={};NotyService.scrollTop()}
console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers()});angular.module('openITCOCKPIT').controller('SatellitesEditController',function($scope,$http,$state,$stateParams,NotyService,RedirectService){$scope.id=$stateParams.id;$scope.loadContainers=function(){$http.get("/distribute_module/satellites/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.load=function(){$http.get("/distribute_module/satellites/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post={Satellite:result.data.satellite}},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/distribute_module/satellites/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){var url=$state.href('SatellitesEdit',{id:result.data.satellite.id});NotyService.genericSuccess({message:'<u><a href="'+url+'" class="txt-color-white"> '+$scope.successMessage.objectName+'</a></u> '+$scope.successMessage.message});RedirectService.redirectWithFallback('SatellitesIndex');console.log('Data saved successfully')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers();$scope.load()});angular.module('openITCOCKPIT').controller('SatellitesUsedByController',function($scope,$http,$stateParams){$scope.id=$stateParams.id;$scope.init=!0;$scope.load=function(){$http.get("/distribute_module/satellites/usedBy/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.satellite=result.data.satellite;$scope.all_hosts=result.data.all_hosts;$scope.init=!1})};$scope.load()});angular.module('openITCOCKPIT').controller('EventcorrelationsSummaryViewController',function($scope,$http,$stateParams,$timeout){$scope.id=$stateParams.id;$scope.init=!0;$scope.setTemplateUrl=function(){var now=new Date();var templateUrl="/eventcorrelation_module/eventcorrelations/summary_view_table/"+$scope.id+".html";templateUrl+='?ts='+now.getTime();$scope.templateUrl=templateUrl};$scope.showEvcServicestatusDelayed=function(serviceId){timer=$timeout(function(){$scope.showEvcServicestatus(serviceId)},500)};$scope.cancelEvcServicestatusDelayTimer=function(){$timeout.cancel(timer)};$scope.setTemplateUrl()});angular.module('openITCOCKPIT').controller('EventcorrelationsViewController',function($scope,$http,$stateParams,$timeout){$scope.id=$stateParams.id;var timer;$scope.init=!0;$scope.load=function(){$http.get("/eventcorrelation_module/eventcorrelations/view/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.evcTree=result.data.evcTree;$scope.rootElement=result.data.rootElement;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.positionEvcTimeout=function(){$timeout($scope.renderEvc,100)};$scope.renderEvc=function(){$('.connector').remove();var idsToConnect=[];for(var evcLayer in $scope.evcTree){if(evcLayer==='$$hashKey'){continue}
var operatorPositionsPerLayer={};for(var services in $scope.evcTree[evcLayer]){if(services==='$$hashKey'){continue}
var leftSideServiceGroupForOperatorPosition={};for(var eventCorrelation in $scope.evcTree[evcLayer][services]){if(eventCorrelation==='$$hashKey'){continue}
var evc=$scope.evcTree[evcLayer][services][eventCorrelation];var height=null;var position=null;var operatorTop=null;if(evcLayer==='1'){var $operatorsServicesContainer=$('#servicesContainer_'+evc.id);height=$operatorsServicesContainer.height();position=$operatorsServicesContainer.position();operatorTop=parseInt((height/2+position.top)-(38/2),10);$('#'+evc.id+'_nodeOperator').css({position:'absolute',top:operatorTop});$('#service_'+evc.id).css({position:'absolute',top:operatorTop});idsToConnect.push([evc.id,evc.id]);for(var indexToConnect in $scope.evcTree[evcLayer-1][evc.id]){var connectTo=$scope.evcTree[evcLayer-1][evc.id][indexToConnect];idsToConnect.push([connectTo.parent_id,connectTo.id])}}
if(evcLayer!=='0'){if(!leftSideServiceGroupForOperatorPosition.hasOwnProperty(evc.parent_id)){leftSideServiceGroupForOperatorPosition[evc.parent_id]=[]}
leftSideServiceGroupForOperatorPosition[evc.parent_id].push(evc.id)}}
if(evcLayer!=='0'){var allTopPositions=[];for(var operatorId in leftSideServiceGroupForOperatorPosition){for(var serviceIndex in leftSideServiceGroupForOperatorPosition[operatorId]){var serviceId=leftSideServiceGroupForOperatorPosition[operatorId][serviceIndex];var _position=$('#service_'+serviceId).position();allTopPositions.push(parseInt(_position.top,10));if(operatorId!==null&&operatorId!=='null'){idsToConnect.push([operatorId,serviceId])}}
var deepestPosition=Math.max.apply(null,allTopPositions);var highestPosition=Math.min.apply(null,allTopPositions);var gapCenterPosition=(deepestPosition-highestPosition)/2+(38/2);var operatorTopPosition=deepestPosition-gapCenterPosition+(38/2);do{var hasCollition=!1;for(var id in operatorPositionsPerLayer){if((operatorTopPosition>=operatorPositionsPerLayer[id].start&&operatorTopPosition<=operatorPositionsPerLayer[id].end)||((operatorTopPosition+38+3)>=operatorPositionsPerLayer[id].start&&(operatorTopPosition+38+3)<=operatorPositionsPerLayer[id].end)){hasCollition=!0}}
operatorTopPosition++}while(hasCollition);$('#'+operatorId+'_nodeOperator').css({position:'absolute',top:operatorTopPosition});$('#service_'+operatorId).css({position:'absolute',top:operatorTopPosition});operatorPositionsPerLayer[operatorId]={start:operatorTopPosition,end:operatorTopPosition+38+3};if(operatorId!==null&&operatorId!=='null'){idsToConnect.push([operatorId,operatorId])}}}}}
for(var i in idsToConnect){var connection=idsToConnect[i];var line=new $.connect('#service_'+connection[1],'#'+connection[0]+'_nodeOperator',{'container':'#evkDrawPad','mainDivClass':'evkWidgetBody'})}
var height=$('#layer_1').height();$('*[data-set-height="1"]').height(height)};$scope.showEvcServicestatusDelayed=function(serviceId){timer=$timeout(function(){$scope.showEvcServicestatus(serviceId)},500)};$scope.cancelEvcServicestatusDelayTimer=function(){$timeout.cancel(timer)};$scope.load()});angular.module('openITCOCKPIT').controller('EventcorrelationsIndexController',function($scope,$http,SortService,MassChangeService,QueryStringService){SortService.setSort(QueryStringService.getValue('sort','Hosts.name'));SortService.setDirection(QueryStringService.getValue('direction','asc'));var defaultFilter=function(){$scope.filter={Hosts:{name:'',description:''}}};$scope.currentPage=1;$scope.useScroll=!0;$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/eventcorrelation_module/eventcorrelations/delete';$scope.triggerFilter=function(){$scope.showFilter=!$scope.showFilter===!0};$scope.resetFilter=function(){defaultFilter()};$scope.load=function(){var params={'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Hosts.name]':$scope.filter.Hosts.name,'filter[Hosts.description]':$scope.filter.Hosts.description};$http.get("/eventcorrelation_module/eventcorrelations/index.json",{params:params}).then(function(result){$scope.evcHosts=result.data.all_evc_hosts;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1})};$scope.selectAll=function(){if($scope.evcHosts){for(var key in $scope.evcHosts){if($scope.evcHosts[key].hasWritePermission===!0){var id=$scope.evcHosts[key].Host.id;$scope.massChange[id]=!0}}}};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.getObjectForDelete=function(host){var object={};object[host.id]=host.name;return object};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.evcHosts){for(var id in selectedObjects){if(id==$scope.evcHosts[key].Host.id){if($scope.evcHosts[key].hasWritePermission===!0){objects[id]=$scope.evcHosts[key].Host.name}}}}
return objects};$scope.changepage=function(page){$scope.undoSelection();if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};defaultFilter();SortService.setCallback($scope.load);$scope.load();$scope.$watch('filter',function(){$scope.currentPage=1;$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('EventcorrelationsSettingsIndexController',function($scope,$http,NotyService){$scope.init=!0;var binaryConfigOptions={EVC_CONSIDER_STATETYPE:1<<0,EVC_CONSIDER_STATE_COUNT:1<<1,EVC_REFLECT_CRITICAL_STATE:1<<2};$scope.load=function(){$http.get("/eventcorrelation_module/eventcorrelation_settings/index.json",{params:{'angular':!0}}).then(function(result){var config=parseInt(result.data.currentEventcorrelationSettings.configuration_option,10);var monitoringEngine=result.data.currentEventcorrelationSettings.monitoring_system;$scope.post={monitoring_system:monitoringEngine};for(var key in binaryConfigOptions){$scope.post[key]=(binaryConfigOptions[key]&config)>0}
$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){var post={EventcorrelationSetting:{monitoring_system:$scope.post.monitoring_system,configuration_option:0}};for(var key in binaryConfigOptions){if($scope.post[key]===!0){post.EventcorrelationSetting.configuration_option+=binaryConfigOptions[key]}}
$http.post("/eventcorrelation_module/eventcorrelation_settings/index.json?angular=true",post).then(function(result){NotyService.genericSuccess({message:$scope.successMessage.objectName+' '+$scope.successMessage.message})},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('Grafana_userdashboardsAddController',function($scope,$http,$state,NotyService){$scope.post={GrafanaUserdashboard:{container_id:null,name:''}};$scope.hasGrafanaConfig=!0;$scope.loadContainers=function(){$http.get("/grafana_module/grafana_userdashboards/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.hasGrafanaConfig=result.data.hasGrafanaConfig},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/grafana_module/grafana_userdashboards/add.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$state.go('GrafanaUserdashboardsEditor',{id:result.data.id})},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers()});angular.module('openITCOCKPIT').controller('Grafana_userdashboardsViewController',function($scope,$http,$stateParams){$scope.id=$stateParams.id;$scope.selectedTimerange='now-3h';$scope.selectedAutorefresh='60s';$scope.dashboardFoundInGrafana=!1;$scope.load=function(){$http.get("/grafana_module/grafana_userdashboards/view/"+$scope.id+".json",{params:{'angular':!0,}}).then(function(result){$scope.dashboard=result.data.dashboard;$scope.allowEdit=result.data.allowEdit;$scope.dashboardFoundInGrafana=result.data.dashboardFoundInGrafana;$scope.loadIframeUrl()})};$scope.loadIframeUrl=function(){$http.get("/grafana_module/grafana_userdashboards/getViewIframeUrl/"+$scope.id+".json",{params:{'angular':!0,'from':$scope.selectedTimerange,'refresh':$scope.selectedAutorefresh}}).then(function(result){$scope.dashboardFoundInGrafana=result.data.dashboardFoundInGrafana;$scope.iframeUrl=result.data.iframeUrl})};$scope.grafanaTimepickerCallback=function(selectedTimerange,selectedAutorefresh){$scope.selectedTimerange=selectedTimerange;$scope.selectedAutorefresh=selectedAutorefresh;$scope.loadIframeUrl()};$scope.load()});angular.module('openITCOCKPIT').controller('Grafana_configurationIndexController',function($scope,$http,NotyService,$state){$scope.post={GrafanaConfiguration:{id:1,api_url:'',api_key:'',graphite_prefix:'',use_https:!1,use_proxy:!0,ignore_ssl_certificate:!1,dashboard_style:'',Hostgroup:[],Hostgroup_excluded:[]}};$scope.hasError=null;$scope.load=function(){$http.get("/grafana_module/grafana_configuration/index.json",{params:{'angular':!0}}).then(function(result){$scope.config=result.data.grafanaConfiguration;var selectedHostgroups=[];var selectedHostgroupsExcluded=[];for(var key in $scope.config.GrafanaConfiguration.Hostgroup){selectedHostgroups.push(parseInt($scope.config.GrafanaConfiguration.Hostgroup[key],10))}
for(var key in $scope.config.GrafanaConfiguration.Hostgroup_excluded){selectedHostgroupsExcluded.push(parseInt($scope.config.GrafanaConfiguration.Hostgroup_excluded[key],10))}
$scope.post.GrafanaConfiguration.api_url=$scope.config.GrafanaConfiguration.api_url;$scope.post.GrafanaConfiguration.api_key=$scope.config.GrafanaConfiguration.api_key;$scope.post.GrafanaConfiguration.graphite_prefix=$scope.config.GrafanaConfiguration.graphite_prefix;$scope.post.GrafanaConfiguration.use_https=parseInt($scope.config.GrafanaConfiguration.use_https,10)===1;$scope.post.GrafanaConfiguration.use_proxy=parseInt($scope.config.GrafanaConfiguration.use_proxy,10)===1;$scope.post.GrafanaConfiguration.ignore_ssl_certificate=parseInt($scope.config.GrafanaConfiguration.ignore_ssl_certificate,10)===1;$scope.post.GrafanaConfiguration.dashboard_style=$scope.config.GrafanaConfiguration.dashboard_style;$scope.post.GrafanaConfiguration.Hostgroup=selectedHostgroups;$scope.post.GrafanaConfiguration.Hostgroup_excluded=selectedHostgroupsExcluded},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadHostgroups=function(){$http.get("/grafana_module/grafana_configuration/loadHostgroups.json",{params:{'angular':!0}}).then(function(result){$scope.hostgroups=result.data.hostgroups})};$scope.checkGrafanaConnection=function(){$http.post("/grafana_module/grafana_configuration/testGrafanaConnection.json?angular=true",$scope.post).then(function(result){$scope.hasError=!1;console.log(result);if(result.data.status.status===!1){$scope.hasError=!0;$scope.grafanaErrors={status:400,statusText:'Bad Request',message:result.data.status.msg.message}}},function errorCallback(result){$scope.hasError=!0;$scope.grafanaErrors={status:result.status,statusText:result.statusText,message:result.data.message}})};$scope.submit=function(){$http.post("/grafana_module/grafana_configuration/index.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$scope.errors=null},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load();$scope.loadHostgroups()});angular.module('openITCOCKPIT').controller('Grafana_userdashboardsIndexController',function($scope,$http,SortService,MassChangeService,$state){SortService.setSort('GrafanaUserdashboard.name');SortService.setDirection('asc');$scope.currentPage=1;$scope.useScroll=!0;var defaultFilter=function(){$scope.filter={GrafanaUserdashboard:{name:''}}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/grafana_module/grafana_userdashboards/delete/';$scope.showFilter=!1;$scope.load=function(){$http.get("/grafana_module/grafana_userdashboards/index.json",{params:{'angular':!0,'scroll':$scope.useScroll,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[GrafanaUserdashboard.name]':$scope.filter.GrafanaUserdashboard.name}}).then(function(result){$scope.allUserdashboards=result.data.all_userdashboards;$scope.paging=result.data.paging;$scope.scroll=result.data.scroll;$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.selectAll=function(){if($scope.allUserdashboards){for(var key in $scope.allUserdashboards){if($scope.allUserdashboards[key].GrafanaUserdashboard.allowEdit){var id=$scope.allUserdashboards[key].GrafanaUserdashboard.id;$scope.massChange[id]=!0}}}};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.allUserdashboards){for(var id in selectedObjects){if(id==$scope.allUserdashboards[key].GrafanaUserdashboard.id){objects[id]=$scope.allUserdashboards[key].GrafanaUserdashboard.name}}}
return objects};$scope.getObjectForDelete=function(GrafanaUserdashboard){var object={};object[GrafanaUserdashboard.GrafanaUserdashboard.id]=GrafanaUserdashboard.GrafanaUserdashboard.name;return object};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.changeMode=function(val){$scope.useScroll=val;$scope.load()};$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0);defaultFilter();SortService.setCallback($scope.load)});angular.module('openITCOCKPIT').controller('Grafana_userdashboardsEditorController',function($scope,$http,$stateParams,$state){$scope.id=$stateParams.id;$scope.name='';$scope.load=function(){$http.get("/grafana_module/grafana_userdashboards/editor/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){var data=[];for(var i in result.data.userdashboardData.rows){if(!Array.isArray(result.data.userdashboardData.rows[i])){data.push(Object.values(result.data.userdashboardData.rows[i]))}else{data.push(result.data.userdashboardData.rows[i])}}
$scope.data=data;$scope.containerId=parseInt(result.data.userdashboardData.GrafanaUserdashboard.container_id,10);$scope.name=result.data.userdashboardData.GrafanaUserdashboard.name;$scope.grafanaUnits=result.data.grafanaUnits},function errorCallback(result){if(result.status===404){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}}})};$scope.addRow=function(){var data={id:$scope.id};$http.post("/grafana_module/grafana_userdashboards/addRow.json?angular=true",data).then(function(result){if(result.data.hasOwnProperty('success')){new Noty({theme:'metroui',type:'success',text:'Row added successfully',timeout:3500}).show();$scope.load()}},function errorCallback(result){new Noty({theme:'metroui',type:'error',text:'Error while adding row',timeout:3500}).show()})};$scope.synchronizeWithGrafana=function(){$('#synchronizeWithGrafanaModal').modal('show');$scope.syncError=!1;var data={id:$scope.id};$http.post("/grafana_module/grafana_userdashboards/synchronizeWithGrafana.json?angular=true",data).then(function(result){if(result.data.success){new Noty({theme:'metroui',type:'success',text:'Synchronization successfully',timeout:3500}).show();$('#synchronizeWithGrafanaModal').modal('hide');return}
$scope.syncError=result.data.message},function errorCallback(result){$scope.syncError=result.data.message})};$scope.removeRowCallback=function(){$scope.load()};$scope.load()});angular.module('openITCOCKPIT').controller('Grafana_userdashboardsEditController',function($scope,$http,$stateParams,$state,NotyService){$scope.post={GrafanaUserdashboard:{id:null,container_id:null,name:'',configuration_id:null}};$scope.id=$stateParams.id;$scope.deleteUrl="/grafana_module/grafana_userdashboards/delete/"+$scope.id+".json?angular=true";$scope.sucessUrl='/grafana_module/grafana_userdashboards/index';$scope.load=function(){$http.get("/grafana_module/grafana_userdashboards/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post.GrafanaUserdashboard.id=result.data.dashboard.GrafanaUserdashboard.id;$scope.post.GrafanaUserdashboard.container_id=result.data.dashboard.GrafanaUserdashboard.container_id;$scope.post.GrafanaUserdashboard.name=result.data.dashboard.GrafanaUserdashboard.name;$scope.post.GrafanaUserdashboard.configuration_id=result.data.dashboard.GrafanaUserdashboard.configuration_id},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainers=function(){$http.get("/grafana_module/grafana_userdashboards/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.load()},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/grafana_module/grafana_userdashboards/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$state.go('GrafanaUserdashboardsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers()});angular.module('openITCOCKPIT').controller('RotationsEditController',function($scope,$http,$stateParams,$state,NotyService){$scope.post={Rotation:{name:'',interval:90,container_id:[],Map:[]}};$scope.id=$stateParams.id;$scope.deleteUrl="/map_module/rotations/delete/"+$scope.id+".json?angular=true";$scope.sucessUrl='/map_module/rotations/index';$scope.load=function(){$http.get("/map_module/rotations/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.rotation=result.data.rotation;var selectedContainer=[];var selectedMaps=[];for(var key in $scope.rotation.Container){selectedContainer.push(parseInt($scope.rotation.Container[key].id,10))}
for(var key in $scope.rotation.Map){selectedMaps.push(parseInt($scope.rotation.Map[key].id,10))}
$scope.post.Rotation.container_id=selectedContainer;$scope.post.Rotation.Map=selectedMaps;$scope.post.Rotation.name=$scope.rotation.Rotation.name;$scope.post.Rotation.interval=parseInt($scope.rotation.Rotation.interval,10)},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainers=function(){$http.get("/map_module/rotations/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers})};$scope.loadMaps=function(){$http.get("/map_module/rotations/loadMaps.json",{params:{'angular':!0}}).then(function(result){$scope.maps=result.data.maps})};$scope.submit=function(){$http.post("/map_module/rotations/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$state.go('RotationsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers();$scope.loadMaps();$scope.load()});angular.module('openITCOCKPIT').controller('MapeditorsViewController',function($scope,$http,QueryStringService,$timeout,$interval,$stateParams){$scope.init=!0;$scope.id=$stateParams.id;$scope.rotate=null;$scope.fullscreen=($stateParams.fullscreen==='true');if($stateParams.rotation!=null)$scope.rotate=$stateParams.rotation;$scope.rotationInterval=parseInt($stateParams.interval,10)*1000;$scope.rotationPossition=1;$scope.interval=null;$scope.loadMapDetails=function(){$http.get("/map_module/mapeditors/mapDetails/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.map=result.data.map;$scope.refreshInterval=$scope.map.Map.refresh_interval;if($scope.refreshInterval!==0&&$scope.refreshInterval<5000){$scope.refreshInterval=5000}
$scope.init=!1})};$scope.loadMapDetails();if($scope.rotate!==null&&$scope.rotationInterval>0){$scope.rotate=$scope.rotate.split(',');$scope.interval=$interval(function(){$scope.rotationPossition++;if($scope.rotationPossition>$scope.rotate.length){$scope.rotationPossition=1}
$scope.id=$scope.rotate[$scope.rotationPossition-1];$scope.loadMapDetails()},$scope.rotationInterval)}
$scope.enterFullscreen=function(){document.getElementById('left-panel').style.display='none';document.getElementById('ribbon').style.display='none';document.getElementById('header').style.display='none';document.getElementById('main').style.marginLeft='0px';$('#content > .ng-scope > .row').css('display','none')};$scope.leaveFullscreen=function(){document.getElementById('left-panel').style.display='block';document.getElementById('ribbon').style.display='block';document.getElementById('header').style.display='block';document.getElementById('main').style.marginLeft='220px';$('#content > .ng-scope > .row').css('display','block')};$scope.$on('$destroy',function(){if($scope.interval!==null){$interval.cancel($scope.interval)}});$scope.$watch('fullscreen',function(){if($scope.fullscreen){$scope.enterFullscreen()}else{$scope.leaveFullscreen()}},!0)});angular.module('openITCOCKPIT').controller('MapsEditController',function($scope,$http,$stateParams,$state,NotyService){$scope.post={Map:{name:'',title:'',refresh_interval:90,container_id:[]}};$scope.id=$stateParams.id;$scope.deleteUrl="/map_module/maps/delete/"+$scope.id+".json?angular=true";$scope.sucessUrl='/map_module/maps/index';$scope.load=function(){$http.get("/map_module/maps/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.map=result.data.map;var selectedContainer=[];for(var key in $scope.map.Container){selectedContainer.push(parseInt($scope.map.Container[key].id,10))}
$scope.post.Map.container_id=selectedContainer;$scope.post.Map.name=$scope.map.Map.name;$scope.post.Map.title=$scope.map.Map.title;$scope.post.Map.refresh_interval=(parseInt($scope.map.Map.refresh_interval,10)/1000);$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.loadContainers=function(){$http.get("/map_module/maps/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.submit=function(){$http.post("/map_module/maps/edit/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$state.go('MapsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadContainers();$scope.load()});angular.module('openITCOCKPIT').controller('MapsIndexController',['$scope','$http','SortService','MassChangeService',function($scope,$http,SortService,MassChangeService){SortService.setSort('Map.name');SortService.setDirection('asc');$scope.currentPage=1;var defaultFilter=function(){$scope.filter={map:{name:'',title:'',},}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/map_module/maps/delete/';$scope.showFilter=!1;$scope.load=function(){$http.get('/map_module/maps/index.json',{params:{'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Map.name]':$scope.filter.map.name,'filter[Map.title]':$scope.filter.map.title}}).then(function(result){$scope.maps=result.data.all_maps;$scope.paging=result.data.paging})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.selectAll=function(){if($scope.maps){for(var key in $scope.maps){if($scope.maps[key].Map.allowEdit){var id=$scope.maps[key].Map.id;$scope.massChange[id]=!0;$scope.selectedElements=MassChangeService.getCount()}}}};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.maps){for(var id in selectedObjects){if(id==$scope.maps[key].Map.id){objects[id]=$scope.maps[key].Map.name}}}
return objects};$scope.getObjectForDelete=function(map){var object={};object[map.Map.id]=map.Map.name+'/'+map.Map.title;return object};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};$scope.linkForCopy=function(){var baseUrl='/map_module/maps/copy/';return buildUrl(baseUrl)};defaultFilter();SortService.setCallback($scope.load);$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)}]);angular.module('openITCOCKPIT').controller('RotationsIndexController',function($scope,$http,SortService,MassChangeService){SortService.setSort('Rotation.name');SortService.setDirection('asc');$scope.currentPage=1;var defaultFilter=function(){$scope.filter={rotation:{name:'',interval:'',},}};$scope.massChange={};$scope.selectedElements=0;$scope.deleteUrl='/map_module/rotations/delete/';$scope.showFilter=!1;$scope.load=function(){$http.get('/map_module/rotations/index.json',{params:{'angular':!0,'sort':SortService.getSort(),'page':$scope.currentPage,'direction':SortService.getDirection(),'filter[Rotation.name]':$scope.filter.rotation.name,'filter[Rotation.interval]':$scope.filter.rotation.interval}}).then(function(result){$scope.rotations=result.data.all_rotations;$scope.paging=result.data.paging})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.resetFilter=function(){defaultFilter();$scope.undoSelection()};$scope.undoSelection=function(){MassChangeService.clearSelection();$scope.massChange=MassChangeService.getSelected();$scope.selectedElements=MassChangeService.getCount()};$scope.selectAll=function(){if($scope.rotations){for(var key in $scope.rotations){if($scope.rotations[key].Rotation.allowEdit){var id=$scope.rotations[key].Rotation.id;$scope.massChange[id]=!0}}}};$scope.getObjectsForDelete=function(){var objects={};var selectedObjects=MassChangeService.getSelected();for(var key in $scope.rotations){for(var id in selectedObjects){if(id==$scope.rotations[key].Rotation.id){objects[id]=$scope.rotations[key].Rotation.name}}}
return objects};$scope.getObjectForDelete=function(rotation){var object={};object[rotation.Rotation.id]=rotation.Rotation.name;return object};$scope.changepage=function(page){if(page!==$scope.currentPage){$scope.currentPage=page;$scope.load()}};defaultFilter();SortService.setCallback($scope.load);$scope.load();$scope.$watch('filter',function(){$scope.currentPage=1;$scope.undoSelection();$scope.load()},!0);$scope.$watch('massChange',function(){MassChangeService.setSelected($scope.massChange);$scope.selectedElements=MassChangeService.getCount()},!0)});angular.module('openITCOCKPIT').controller('RotationsAddController',function($scope,$http,$state,NotyService){$scope.post={Rotation:{name:'',interval:90,container_id:[],Map:[]}};$scope.loadMaps=function(){$http.get("/map_module/rotations/loadMaps.json",{params:{'angular':!0}}).then(function(result){console.log(result.data);$scope.maps=result.data.maps})};$scope.loadContainers=function(){$http.get("/map_module/rotations/loadContainers.json",{params:{'angular':!0}}).then(function(result){console.log(result.data);$scope.containers=result.data.containers})};$scope.submit=function(){$http.post("/map_module/rotations/add.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$state.go('RotationsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.loadMaps();$scope.loadContainers()});angular.module('openITCOCKPIT').controller('MapsCopyController',function($scope,$http,$stateParams,$state,NotyService){$scope.post={Map:{name:'',title:'',refresh_interval:90,container_id:[]}};$scope.id=$stateParams.id;$scope.sucessUrl='/map_module/maps/index';$scope.load=function(){$http.get("/map_module/maps/copy/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.post={Map:{name:result.data.map.Map.name,title:result.data.map.Map.title,refresh_interval:(parseInt(result.data.map.Map.refresh_interval,10)/1000)}};$scope.init=!1},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/map_module/maps/copy/"+$scope.id+".json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$state.go('MapsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('MapsAddController',function($scope,$http,$state,NotyService){$scope.post={Map:{name:'',title:'',refresh_interval:90,container_id:[]}};$scope.init=!0;$scope.load=function(){$http.get("/map_module/maps/loadContainers.json",{params:{'angular':!0}}).then(function(result){$scope.containers=result.data.containers;$scope.init=!1})};$scope.submit=function(){$http.post("/map_module/maps/add.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$state.go('MapsIndex')},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('MapeditorsEditController',function($scope,$http,$stateParams){$scope.init=!0;$scope.id=$stateParams.id;$scope.backgrounds=[];$scope.addNewObject=!1;$scope.action=null;$scope.currentItem={};$scope.maxZIndex=0;$scope.clickCount=1;$scope.grid={enabled:!0,size:15};$scope.addLink=!1;$scope.uploadIconSet=!1;$scope.defaultLayer='0';$scope.visableLayers={};$scope.load=function(){$http.get("/map_module/mapeditors/edit/"+$scope.id+".json",{params:{'angular':!0}}).then(function(result){$scope.map=result.data.map;$scope.maxUploadLimit=result.data.maxUploadLimit;$scope.maxZIndex=result.data.max_z_index;$scope.layers=result.data.layers;for(var k in $scope.layers){$scope.visableLayers['layer_'+k]=!0}
$scope.currentBackground=$scope.map.Map.background;if($scope.init){createDropzones();loadBackgroundImages();setTimeout(makeDraggable,250)}
$scope.init=!1})};$scope.openChangeMapBackgroundModal=function(){$('#changeBackgroundModal').modal('show')};$scope.changeBackground=function(background){$http.post("/map_module/mapeditors/saveBackground.json?angular=true",{'Map':{id:$scope.id,background:background.image}}).then(function(result){$scope.errors={};$scope.map.Map.background=background.image;genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
genericError()})};var loadBackgroundImages=function(selectedImage){$http.get("/map_module/mapeditors/backgroundImages.json",{params:{'angular':!0}}).then(function(result){$scope.backgrounds=result.data.backgrounds;if(typeof selectedImage!=="undefined"){$scope.changeBackground({image:selectedImage})}})};var createDropzones=function(){$('.background-dropzone').dropzone({method:'post',maxFilesize:$scope.maxUploadLimit.value,acceptedFiles:'image/*',paramName:"file",success:function(obj){var $previewElement=$(obj.previewElement);var response=JSON.parse(obj.xhr.response);if(response.response.success){$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-success');new Noty({theme:'metroui',type:'success',text:response.response.message,timeout:3500}).show();loadBackgroundImages(response.response.filename);return}
$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');new Noty({theme:'metroui',type:'error',text:response.response.message,timeout:3500}).show()},error:function(obj,errorMessage,xhr){var $previewElement=$(obj.previewElement);$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');if(typeof xhr==="undefined"){new Noty({theme:'metroui',type:'error',text:errorMessage,timeout:3500}).show()}else{var response=JSON.parse(obj.xhr.response);new Noty({theme:'metroui',type:'error',text:response.response.message,timeout:3500}).show()}}});$('.icon-dropzone').dropzone({method:'post',maxFilesize:$scope.maxUploadLimit.value,acceptedFiles:'image/*',paramName:"file",success:function(obj){var $previewElement=$(obj.previewElement);var response=JSON.parse(obj.xhr.response);if(response.response.success){$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-success');new Noty({theme:'metroui',type:'success',text:response.response.message,timeout:3500}).show();loadIcons(response.response.filename);return}
$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');new Noty({theme:'metroui',type:'error',text:response.response.message,timeout:3500}).show()},error:function(obj,errorMessage,xhr){var $previewElement=$(obj.previewElement);$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');if(typeof xhr==="undefined"){new Noty({theme:'metroui',type:'error',text:errorMessage,timeout:3500}).show()}else{var response=JSON.parse(obj.xhr.response);new Noty({theme:'metroui',type:'error',text:response.response.message,timeout:3500}).show()}}});$('.iconset-dropzone').dropzone({method:'post',maxFilesize:$scope.maxUploadLimit.value,acceptedFiles:'.zip',paramName:"file",success:function(obj){var $previewElement=$(obj.previewElement);var response=JSON.parse(obj.xhr.response);if(response.response.success){$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-success');new Noty({theme:'metroui',type:'success',text:response.response.message,timeout:3500}).show();loadIconsets(response.response.iconsetname);$scope.uploadIconSet=!1;return}
$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');new Noty({theme:'metroui',type:'error',text:response.response.message,timeout:3500}).show()},error:function(obj,errorMessage,xhr){var $previewElement=$(obj.previewElement);$previewElement.removeClass('dz-processing');$previewElement.addClass('dz-error');if(typeof xhr==="undefined"){new Noty({theme:'metroui',type:'error',text:errorMessage,timeout:3500}).show()}else{var response=JSON.parse(obj.xhr.response);new Noty({theme:'metroui',type:'error',text:response.response.message,timeout:3500}).show()}}})};$scope.deleteBackground=function(background){$http.post("/map_module/BackgroundUploads/delete.json?angular=true",{'filename':background.image}).then(function(result){loadBackgroundImages();new Noty({theme:'metroui',type:'success',text:result.data.response.message,timeout:3500}).show()},function errorCallback(result){var text='';if(result.data.hasOwnProperty('message')){text=result.data.message}
if(result.data.hasOwnProperty('response')){text=result.data.response.message}
new Noty({theme:'metroui',type:'error',text:text,timeout:3500}).show()})};$scope.setCurrentIconset=function(iconset){$scope.currentItem.iconset=iconset};$scope.addNewLayer=function(){$scope.maxZIndex++;var newZIndex=$scope.maxZIndex;newZIndex=newZIndex.toString();$scope.layers[newZIndex]='Layer '+newZIndex;$scope.visableLayers['layer_'+newZIndex]=!0;if($scope.currentItem.hasOwnProperty('z_index')){$scope.currentItem.z_index=newZIndex}};var loadIconsets=function(selectedIconset){$http.get("/map_module/mapeditors/getIconsets.json",{params:{'angular':!0}}).then(function(result){$scope.iconsets=[];$scope.iconsets=result.data.iconsets;if(typeof selectedIconset!=="undefined"){$scope.currentItem.iconset=selectedIconset}})};var loadIcons=function(selectedIcon){$http.get("/map_module/mapeditors/getIcons.json",{params:{'angular':!0}}).then(function(result){$scope.icons=result.data.icons;if(typeof selectedIcon!=="undefined"){$scope.currentItem.icon=selectedIcon}})};$scope.addNewObjectFunc=function($event){if(!$scope.addNewObject){return}
var $mapEditor=$('#map-editor');switch($scope.action){case 'item':$mapEditor.css('cursor','default');$scope.addNewObject=!1;$('#addEditMapItemModal').modal('show');$scope.currentItem={iconset:'std_mid_64px',z_index:$scope.defaultLayer,x:$event.offsetX,y:$event.offsetY,show_label:!1,label_possition:2};$scope.action=null;break;case 'line':if($scope.clickCount===2){$mapEditor.css('cursor','default');$scope.addNewObject=!1;$scope.action=null;$scope.currentItem.endX=$event.offsetX;$scope.currentItem.endY=$event.offsetY;$('#addEditMapLineModal').modal('show')}
if($scope.clickCount===1){$scope.currentItem={z_index:$scope.defaultLayer,startX:$event.offsetX,startY:$event.offsetY,show_label:!1};new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Click a second time to define the endpoint of the line.',timeout:3500}).show()}
$scope.clickCount++;break;case 'gadget':$mapEditor.css('cursor','default');$scope.addNewObject=!1;$('#addEditMapGadgetModal').modal('show');$scope.currentItem={type:'service',z_index:$scope.defaultLayer,x:$event.offsetX,y:$event.offsetY,show_label:!1,label_possition:2,gadget:'RRDGraph',size_x:null,size_y:null,metric:null,output_type:null,font_size:13};$scope.action=null;break;case 'text':$mapEditor.css('cursor','default');$scope.addNewObject=!1;$('#AddEditStatelessTextModal').modal('show');$scope.currentItem={z_index:$scope.defaultLayer,x:$event.offsetX,y:$event.offsetY,text:''};$scope.action=null;break;case 'icon':$mapEditor.css('cursor','default');$scope.addNewObject=!1;$('#AddEditStatelessIconModal').modal('show');$scope.currentItem={z_index:$scope.defaultLayer,x:$event.offsetX,y:$event.offsetY};$scope.action=null;break;case 'summaryItem':$mapEditor.css('cursor','default');$scope.addNewObject=!1;$('#addEditSummaryItemModal').modal('show');$scope.currentItem={z_index:$scope.defaultLayer,x:$event.offsetX,y:$event.offsetY,show_label:!1,label_possition:2};$scope.action=null;break;default:new Noty({theme:'metroui',type:'warning',text:'Unknown action - sorry :(',timeout:3500}).show();$scope.action=null;$scope.addNewObject=!1;$mapEditor.css('cursor','default');break}};$scope.addItem=function(){new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Click at the position on the map, where you want to create a new object.',timeout:3500}).show();$('#map-editor').css('cursor','crosshair');$scope.addNewObject=!0;$scope.action='item'};$scope.editItem=function(item){$scope.action='item';$scope.currentItem=item;$('#addEditMapItemModal').modal('show')};$scope.saveItem=function(action){if(typeof action==='undefined'){action='add_or_edit'}
$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/saveItem.json?angular=true",{'Mapitem':$scope.currentItem,'action':action}).then(function(result){$scope.errors={};if($scope.currentItem.hasOwnProperty('id')){for(var i in $scope.map.Mapitem){if($scope.map.Mapitem[i].id==$scope.currentItem.id){$scope.map.Mapitem[i].x=$scope.currentItem.x;$scope.map.Mapitem[i].y=$scope.currentItem.y;break}}}else{if(typeof $scope.map.Mapitem==="undefined"){$scope.map.Mapitem=[]}
$scope.map.Mapitem.push(result.data.Mapitem.Mapitem);setTimeout(makeDraggable,250)}
$('#addEditMapItemModal').modal('hide');genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
genericError()})};$scope.deleteItem=function(){$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/deleteItem.json?angular=true",{'Mapitem':$scope.currentItem,'action':'delete'}).then(function(result){for(var i in $scope.map.Mapitem){if($scope.map.Mapitem[i].id==$scope.currentItem.id){$scope.map.Mapitem.splice(i,1);break}}
$('#addEditMapItemModal').modal('hide');genericSuccess();$scope.currentItem={}},function errorCallback(result){genericError()})};$scope.addLine=function(){new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Click at the position on the map, where the line should start.',timeout:3500}).show();$scope.clickCount=1;$('#map-editor').css('cursor','crosshair');$scope.addNewObject=!0;$scope.action='line'};$scope.editLine=function(lineItem){$scope.action='line';$scope.currentItem=lineItem;$('#addEditMapLineModal').modal('show')};$scope.saveLine=function(action){if(typeof action==='undefined'){action='add_or_edit'}
$scope.currentItem.map_id=$scope.id;if($scope.currentItem.type==='stateless'){$scope.currentItem.object_id=null}
$http.post("/map_module/mapeditors/saveLine.json?angular=true",{'Mapline':$scope.currentItem,'action':action}).then(function(result){$scope.errors={};if($scope.currentItem.hasOwnProperty('id')){for(var i in $scope.map.Mapline){if($scope.map.Mapline[i].id==$scope.currentItem.id){$scope.map.Mapline[i].startY=$scope.currentItem.startY;$scope.map.Mapline[i].endX=$scope.currentItem.endX;$scope.map.Mapline[i].endY=$scope.currentItem.endY;$scope.map.Mapline[i].startX=$scope.currentItem.startX;break}}}else{if(typeof $scope.map.Mapline==="undefined"){$scope.map.Mapline=[]}
$scope.map.Mapline.push(result.data.Mapline.Mapline);setTimeout(makeDraggable,250)}
$('#addEditMapLineModal').modal('hide');genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
genericError()})};$scope.deleteLine=function(){$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/deleteLine.json?angular=true",{'Mapline':$scope.currentItem,'action':'delete'}).then(function(result){for(var i in $scope.map.Mapline){if($scope.map.Mapline[i].id==$scope.currentItem.id){$scope.map.Mapline.splice(i,1);break}}
$('#addEditMapLineModal').modal('hide');genericSuccess();$scope.currentItem={}},function errorCallback(result){genericError()})};$scope.addGadget=function(){new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Click at the position on the map, where you want to place the new Gadget.',timeout:3500}).show();$('#map-editor').css('cursor','crosshair');$scope.addNewObject=!0;$scope.action='gadget'};$scope.editGadget=function(gadgetItem){$scope.action='gadget';$scope.currentItem=gadgetItem;$('#addEditMapGadgetModal').modal('show')};$scope.saveGadget=function(action){if(typeof action==='undefined'){action='add_or_edit'}
$scope.currentItem.map_id=$scope.id;if(action==='add_or_edit'){if($scope.currentItem.gadget!=='TrafficLight'&&$scope.currentItem.gadget!=='ServiceOutput'){if($scope.currentItem.hasOwnProperty('metric')===!1||$scope.currentItem.metric===null){$scope.errors={metric:['Please select a metric.']};return}}
if($scope.currentItem.gadget==='ServiceOutput'){if($scope.currentItem.hasOwnProperty('output_type')===!1||$scope.currentItem.output_type===null){$scope.errors={output_type:['Please select an output type.']};return}}}
$http.post("/map_module/mapeditors/saveGadget.json?angular=true",{'Mapgadget':$scope.currentItem,'action':action}).then(function(result){if(action==='resizestop'){genericSuccess();return}
$scope.errors={};if($scope.currentItem.hasOwnProperty('id')){for(var i in $scope.map.Mapgadget){if($scope.map.Mapgadget[i].id==$scope.currentItem.id){$scope.map.Mapgadget[i].x=$scope.currentItem.x;$scope.map.Mapgadget[i].y=$scope.currentItem.y;break}}}else{if(typeof $scope.map.Mapgadget==="undefined"){$scope.map.Mapgadget=[]}
$scope.map.Mapgadget.push(result.data.Mapgadget.Mapgadget);setTimeout(makeDraggable,250)}
$('#addEditMapGadgetModal').modal('hide');genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
genericError()})};$scope.deleteGadget=function(){$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/deleteGadget.json?angular=true",{'Mapgadget':$scope.currentItem,'action':'delete'}).then(function(result){for(var i in $scope.map.Mapgadget){if($scope.map.Mapgadget[i].id==$scope.currentItem.id){$scope.map.Mapgadget.splice(i,1);break}}
$('#addEditMapGadgetModal').modal('hide');genericSuccess();$scope.currentItem={}},function errorCallback(result){genericError()})};$scope.addText=function(){new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Click at the position on the map, where you want to create new text',timeout:3500}).show();$('#map-editor').css('cursor','crosshair');$scope.addNewObject=!0;$scope.action='text';$scope.addLink=!1;$('#docuText').val('')};$scope.editText=function(item){$scope.action='text';$scope.currentItem=item;$scope.addLink=!1;$('#docuText').val(item.text);$('#AddEditStatelessTextModal').modal('show')};$scope.saveText=function(action){if(typeof action==='undefined'){action='add_or_edit'}
$scope.currentItem.map_id=$scope.id;if(action==='add_or_edit'){$scope.currentItem.text=$('#docuText').val()}
$http.post("/map_module/mapeditors/saveText.json?angular=true",{'Maptext':$scope.currentItem,'action':action}).then(function(result){$scope.errors={};if($scope.currentItem.hasOwnProperty('id')){for(var i in $scope.map.Maptext){if($scope.map.Maptext[i].id==$scope.currentItem.id){$scope.map.Maptext[i].x=$scope.currentItem.x;$scope.map.Maptext[i].y=$scope.currentItem.y;if(action==='add_or_edit'){$scope.map.Maptext[i].text=$scope.currentItem.text}
break}}}else{if(typeof $scope.map.Maptext==="undefined"){$scope.map.Maptext=[]}
$scope.map.Maptext.push(result.data.Maptext.Maptext);setTimeout(makeDraggable,250)}
$('#AddEditStatelessTextModal').modal('hide');genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
genericError()})};$scope.deleteText=function(){$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/deleteText.json?angular=true",{'Maptext':$scope.currentItem,'action':'delete'}).then(function(result){for(var i in $scope.map.Maptext){if($scope.map.Maptext[i].id==$scope.currentItem.id){$scope.map.Maptext.splice(i,1);$('#docuText').val('');break}}
$('#AddEditStatelessTextModal').modal('hide');genericSuccess();$scope.currentItem={}},function errorCallback(result){genericError()})};$scope.addIcon=function(){new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Click at the position on the map, where you want to create a new icon',timeout:3500}).show();$('#map-editor').css('cursor','crosshair');$scope.addNewObject=!0;$scope.action='icon'};$scope.editIcon=function(item){$scope.action='icon';$scope.currentItem=item;$('#AddEditStatelessIconModal').modal('show')};$scope.saveIcon=function(action){if(typeof action==='undefined'){action='add_or_edit'}
$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/saveIcon.json?angular=true",{'Mapicon':$scope.currentItem,'action':action}).then(function(result){$scope.errors={};if($scope.currentItem.hasOwnProperty('id')){for(var i in $scope.map.Mapicon){if($scope.map.Mapicon[i].id==$scope.currentItem.id){$scope.map.Mapicon[i].x=$scope.currentItem.x;$scope.map.Mapicon[i].y=$scope.currentItem.y;break}}}else{if(typeof $scope.map.Mapicon==="undefined"){$scope.map.Mapicon=[]}
$scope.map.Mapicon.push(result.data.Mapicon.Mapicon);setTimeout(makeDraggable,250)}
$('#AddEditStatelessIconModal').modal('hide');genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
genericError()})};$scope.deleteIcon=function(){$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/deleteIcon.json?angular=true",{'Mapicon':$scope.currentItem,'action':'delete'}).then(function(result){for(var i in $scope.map.Mapicon){if($scope.map.Mapicon[i].id==$scope.currentItem.id){$scope.map.Mapicon.splice(i,1);break}}
$('#AddEditStatelessIconModal').modal('hide');genericSuccess();$scope.currentItem={}},function errorCallback(result){genericError()})};$scope.deleteIconImage=function(filename){$http.post("/map_module/BackgroundUploads/deleteIcon.json?angular=true",{'filename':filename}).then(function(result){loadIcons();new Noty({theme:'metroui',type:'success',text:result.data.response.message,timeout:3500}).show()},function errorCallback(result){var text='';if(result.data.hasOwnProperty('message')){text=result.data.message}
if(result.data.hasOwnProperty('response')){text=result.data.response.message}
new Noty({theme:'metroui',type:'error',text:text,timeout:3500}).show()})};$scope.addSummaryItem=function(){new Noty({theme:'metroui',type:'info',layout:'topCenter',text:'Click at the position on the map, where you want to create a new status summary icon',timeout:3500}).show();$('#map-editor').css('cursor','crosshair');$scope.addNewObject=!0;$scope.action='summaryItem'};$scope.editSummaryItem=function(item){$scope.action='summaryItem';$scope.currentItem=item;$('#addEditSummaryItemModal').modal('show')};$scope.saveSummaryItem=function(action){if(typeof action==='undefined'){action='add_or_edit'}
$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/saveSummaryitem.json?angular=true",{'Mapsummaryitem':$scope.currentItem,'action':action}).then(function(result){if(action==='resizestop'){genericSuccess();return}
$scope.errors={};if($scope.currentItem.hasOwnProperty('id')){for(var i in $scope.map.Mapsummaryitem){if($scope.map.Mapsummaryitem[i].id==$scope.currentItem.id){$scope.map.Mapsummaryitem[i].x=$scope.currentItem.x;$scope.map.Mapsummaryitem[i].y=$scope.currentItem.y;break}}}else{if(typeof $scope.map.Mapsummaryitem==="undefined"){$scope.map.Mapsummaryitem=[]}
$scope.map.Mapsummaryitem.push(result.data.Mapsummaryitem.Mapsummaryitem);setTimeout(makeDraggable,250)}
$('#addEditSummaryItemModal').modal('hide');genericSuccess()},function errorCallback(result){if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}
genericError()})};$scope.deleteSummaryItem=function(){$scope.currentItem.map_id=$scope.id;$http.post("/map_module/mapeditors/deleteSummaryitem.json?angular=true",{'Mapsummaryitem':$scope.currentItem,'action':'delete'}).then(function(result){for(var i in $scope.map.Mapsummaryitem){if($scope.map.Mapsummaryitem[i].id==$scope.currentItem.id){$scope.map.Mapsummaryitem.splice(i,1);break}}
$('#addEditSummaryItemModal').modal('hide');genericSuccess();$scope.currentItem={}},function errorCallback(result){genericError()})};var loadMetrics=function(){$http.get("/map_module/mapeditors/getPerformanceDataMetrics/"+$scope.currentItem.object_id+".json",{params:{'angular':!0}}).then(function(result){var metrics={};var firstMetric=null;for(var metricName in result.data.perfdata){if(firstMetric===null){firstMetric=metricName}
metrics[metricName]=metricName}
if($scope.currentItem.metric===null){$scope.currentItem.metric=firstMetric}
$scope.metrics=metrics})};var genericSuccess=function(){new Noty({theme:'metroui',type:'success',text:'Data saved successfully',timeout:3500}).show()};var genericError=function(){new Noty({theme:'metroui',type:'error',text:'Error while saving data',timeout:3500}).show()};$scope.loadMoreItemObjects=function(searchString){if(typeof $scope.currentItem.type!=="undefined"){var objectId=undefined;if(typeof $scope.currentItem.object_id!=='undefined'){if($scope.currentItem.object_id!==null&&$scope.currentItem.object_id>0){objectId=$scope.currentItem.object_id}}
if($scope.currentItem.type==='host'){loadHosts(searchString,objectId)}
if($scope.currentItem.type==='service'){loadServices(searchString,objectId)}
if($scope.currentItem.type==='hostgroup'){loadHostgroups(searchString,objectId)}
if($scope.currentItem.type==='servicegroup'){loadServicegroups(searchString,objectId)}
if($scope.currentItem.type==='map'){loadMaps(searchString,objectId)}}};var loadHosts=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
$http.get("/hosts/loadHostsByString.json",{params:{'angular':!0,'filter[Hosts.name]':searchString,'selected[]':selected,'includeDisabled':'true'}}).then(function(result){$scope.itemObjects=result.data.hosts})};var loadServices=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
$http.get("/services/loadServicesByString.json",{params:{'angular':!0,'filter[Host.name]':searchString,'filter[Service.servicename]':searchString,'selected[]':selected,'includeDisabled':'true'}}).then(function(result){var tmpServices=[];for(var i in result.data.services){var tmpService=result.data.services[i];var serviceName=tmpService.value.Service.name;if(serviceName===null||serviceName===''){serviceName=tmpService.value.Servicetemplate.name}
tmpServices.push({key:tmpService.key,value:tmpService.value.Host.name+'/'+serviceName})}
$scope.itemObjects=tmpServices})};var loadHostgroups=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
$http.get("/hostgroups/loadHostgroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':selected}}).then(function(result){$scope.itemObjects=result.data.hostgroups})};var loadServicegroups=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
$http.get("/servicegroups/loadServicegroupsByString.json",{params:{'angular':!0,'filter[Containers.name]':searchString,'selected[]':selected}}).then(function(result){$scope.itemObjects=result.data.servicegroups})};var loadMaps=function(searchString,selected){if(typeof selected==="undefined"){selected=[]}
$http.get("/map_module/mapeditors/loadMapsByString.json",{params:{'angular':!0,'filter[Map.name]':searchString,'selected[]':selected,'excluded[]':$scope.id}}).then(function(result){$scope.itemObjects=result.data.maps})};$scope.changeGridSize=function(size){$scope.grid.size=parseInt(size,10);if($scope.grid.enabled){makeDraggable()}};$scope.setDefaultLayer=function(layerNo){$scope.defaultLayer=layerNo.toString()};$scope.hideLayer=function(key){key=key.toString();$scope.visableLayers['layer_'+key]=!1;var objectsToHide=['Mapitem','Mapline','Mapgadget','Mapicon','Maptext','Mapsummaryitem'];for(var arrayKey in objectsToHide){var objectName=objectsToHide[arrayKey];if($scope.map.hasOwnProperty(objectName)){for(var i in $scope.map[objectName]){if($scope.map[objectName][i].z_index===key){$scope.map[objectName][i].display=!1}}}}};$scope.showLayer=function(key){key=key.toString();$scope.visableLayers['layer_'+key]=!0;var objectsToHide=['Mapitem','Mapline','Mapgadget','Mapicon','Maptext','Mapsummaryitem'];for(var arrayKey in objectsToHide){var objectName=objectsToHide[arrayKey];if($scope.map.hasOwnProperty(objectName)){for(var i in $scope.map[objectName]){if($scope.map[objectName][i].z_index===key){$scope.map[objectName][i].display=!0}}}}};var makeDraggable=function(){var options={grid:!1,stop:function(event){var $this=$(this);var x=$this.css('left');var y=$this.css('top');var id=$this.data('id');var type=$this.data('type');x=parseInt(x.replace('px',''),10);y=parseInt(y.replace('px',''),10);switch(type){case 'item':$scope.currentItem={id:id,x:x,y:y};$scope.saveItem('dragstop');break;case 'line':var position=$this.position();x=position.left;y=position.top;var oldStartX=parseInt($this.data('oldstartx'),10);var oldStartY=parseInt($this.data('oldstarty'),10);var oldEndX=parseInt($this.data('oldendx'),10);var oldEndY=parseInt($this.data('oldendy'),10);var distanceX=oldStartX-x;distanceX=distanceX*-1;var distanceY=oldStartY-y;distanceY=distanceY*-1;var endX=oldEndX+distanceX;var endY=oldEndY+distanceY;$scope.currentItem={id:id,startX:parseInt(x,10),startY:parseInt(y,10),endX:parseInt(endX,10),endY:parseInt(endY,10)};$scope.saveLine('dragstop');break;case 'gadget':$scope.currentItem={id:id,x:x,y:y};$scope.saveGadget('dragstop');break;case 'text':$scope.currentItem={id:id,x:x,y:y};$scope.saveText('dragstop');break;case 'icon':$scope.currentItem={id:id,x:x,y:y};$scope.saveIcon('dragstop');break;case 'summaryItem':$scope.currentItem={id:id,x:x,y:y};$scope.saveSummaryItem('dragstop');break;default:console.log('Unknown map object type');genericError()}}};if($scope.grid.enabled){options.grid=[$scope.grid.size,$scope.grid.size]}
$('.draggable').draggable(options);$('.resizable').resizable({aspectRatio:!0,helper:'ui-resizable-helper',stop:function(event,ui){var $this=$(this);var id=$this.data('id');var type=$this.data('type');var newWidth=parseInt(ui.size.width);var newHeight=parseInt(ui.size.height);switch(type){case 'gadget':console.log('HIER');for(var key in $scope.map.Mapgadget){if($scope.map.Mapgadget[key].id===id){$scope.map.Mapgadget[key].size_y=newHeight;$scope.map.Mapgadget[key].size_x=newWidth}}
$scope.currentItem={id:id,size_x:newWidth,size_y:newHeight};$scope.saveGadget('resizestop');break;case 'summaryItem':for(var key in $scope.map.Mapsummaryitem){if($scope.map.Mapsummaryitem[key].id===id){$scope.map.Mapsummaryitem[key].size_y=newHeight;$scope.map.Mapsummaryitem[key].size_x=newWidth}}
$scope.currentItem={id:id,size_x:newWidth,size_y:newHeight};$scope.saveSummaryItem('resizestop');break;default:console.log('Unknown map object type');genericError()}}});$('.resizable-no-aspect-ratio').resizable({aspectRatio:!1,helper:'ui-resizable-helper',stop:function(event,ui){var $this=$(this);var id=$this.data('id');var type=$this.data('type');var newWidth=parseInt(ui.size.width);var newHeight=parseInt(ui.size.height);switch(type){case 'gadget':for(var key in $scope.map.Mapgadget){if($scope.map.Mapgadget[key].id===id){$scope.map.Mapgadget[key].size_y=newHeight;$scope.map.Mapgadget[key].size_x=newWidth}}
$scope.currentItem={id:id,size_x:newWidth,size_y:newHeight};$scope.saveGadget('resizestop');break;default:console.log('Unknown map object type');genericError()}}})};$scope.load();loadIconsets();loadIcons();$('#mapToolbar').draggable({handle:"#mapToolsDragger",containment:"parent"});var $layersBox=$('#layersBox');$layersBox.draggable({handle:"#layersBoxDragger",containment:"parent"});$layersBox.resizable({ghost:!0,minWidth:250,maxWidth:250,minHeight:150,stop:function(event,ui){var newHeight=parseInt(ui.size.height);newHeight=newHeight-20;$('.layersContainer').css({height:newHeight+'px'})}});$("[wysiwyg='true']").click(function(){var $textarea=$('#docuText');var task=$(this).attr('task');switch(task){case 'bold':$textarea.surroundSelectedText('[b]','[/b]');break;case 'italic':$textarea.surroundSelectedText('[i]','[/i]');break;case 'underline':$textarea.surroundSelectedText('[u]','[/u]');break;case 'left':$textarea.surroundSelectedText('[left]','[/left]');break;case 'center':$textarea.surroundSelectedText('[center]','[/center]');break;case 'right':$textarea.surroundSelectedText('[right]','[/right]');break;case 'justify':$textarea.surroundSelectedText('[justify]','[/justify]');break}});$("[select-color='true']").click(function(){var color=$(this).attr('color');var $textarea=$('#docuText');$textarea.surroundSelectedText("[color='"+color+"']",'[/color]')});$("[select-fsize='true']").click(function(){var fontSize=$(this).attr('fsize');var $textarea=$('#docuText');$textarea.surroundSelectedText("[text='"+fontSize+"']","[/text]")});$('#perform-insert-link').click(function(){var $textarea=$('#docuText');var url=$('#modalLinkUrl').val();var description=$('#modalLinkDescription').val();var selection=$textarea.getSelection();var newTab=$('#modalLinkNewTab').is(':checked')?" tab":"";$textarea.insertText("[url='"+url+"'"+newTab+"]"+description+'[/url]',selection.start,"collapseToEnd");$('#modalLinkUrl').val('');$('#modalLinkDescription').val('');$scope.addLink=!1});$scope.$watchGroup(['currentItem.type','currentItem.object_id'],function(){var objectId=undefined;if(typeof $scope.currentItem.object_id!=='undefined'){if($scope.currentItem.object_id!==null&&$scope.currentItem.object_id>0){objectId=$scope.currentItem.object_id}}
if(typeof $scope.currentItem.type!=="undefined"){if($scope.currentItem.type==='host'){loadHosts('',objectId)}
if($scope.currentItem.type==='service'){loadServices('',objectId)}
if($scope.currentItem.type==='hostgroup'){loadHostgroups('',objectId)}
if($scope.currentItem.type==='servicegroup'){loadServicegroups('',objectId)}
if($scope.currentItem.type==='map'){loadMaps('',objectId)}}
if($scope.currentItem.hasOwnProperty('gadget')&&typeof objectId!=="undefined"){if($scope.currentItem.gadget!=='TrafficLight'){loadMetrics()}}},!0);$scope.$watch('grid.enabled',function(){if($scope.init){return}
makeDraggable()},!0)});angular.module("openITCOCKPIT").controller("OpenstreetmapIndexController",function($scope,$q,$http,$timeout,$interval,NotyService){$scope.mapRefIntervalSeconds=15000;$scope.mapMinimumIntervalSeconds=15000;$scope.mapURL="";$scope.showFilter=!1;$scope.parametersMissing=null;$scope.initParametersMissing=null;$scope.locations=[];$scope.emptyLocations=[];$scope.init=!1;$scope.mapControlInit=!1;$scope.mapOptions={center:{lat:0,lng:0},zoom:0,fullscreenControl:!0};$scope.post={settings:{state_filter:null,filter:{up_ok:1,warning:1,down_critical:1,unreachable_unknown:1},hide_empty_locations:null,hide_not_monitored_locations:null}};$scope.filter={up_ok:1,warning:2,down_critical:4,unreachable_unknown:8};$scope.included={Location:{id:[]}};$scope.allLocations=[];angular.element(document).ready(function(){$scope.map=L.map("map",$scope.mapOptions);$scope.loadSettings()});var intervalId=null;$scope.loadLocationsInMap=function(includeLocations){if(includeLocations===!0){$scope.included.Location.id=[];var bounds=$scope.map.getBounds();for(key in $scope.allLocations){if(bounds.contains(new L.LatLng($scope.allLocations[key].Location.latitude,$scope.allLocations[key].Location.longitude))){$scope.included.Location.id.push($scope.allLocations[key].Location.id)}}
if($scope.included.Location.id.length===0){return}}
$http.get("/openstreetmap_module/openstreetmap/index.json",{params:{"angular":!0,'includedLocationId[]':$scope.included.Location.id,'OpenstreetmapSetting[hide_empty_locations]':$scope.post.settings.hide_empty_locations,'OpenstreetmapSetting[hide_not_monitored_locations]':$scope.post.settings.hide_not_monitored_locations,'OpenstreetmapSetting[state_filter]':$scope.post.settings.state_filter}}).then(function(result){if($scope.init===!1){$scope.allLocations=result.data.locations;$scope.locationPoints=result.data.locationPoints}
$scope.locations=result.data.locations;$scope.emptyLocations=result.data.emptyLocations;$scope.parametersMissing=!0;if($scope.init===!1){$scope.initParametersMissing=!0}
if($scope.mapURL){$scope.parametersMissing=!1}
if($scope.mapURL){if(result.data.locationPoints){loadMap(result.data.locationPoints)}else{loadMap([])}
if($scope.init===!1){$scope.initParametersMissing=!1}
$scope.init=!0}
if(!$scope.parametersMissing&&$scope.mapRefIntervalSeconds>=$scope.mapMinimumIntervalSeconds){if(intervalId===null){intervalId=$interval(function(){$scope.loadLocationsInMap(!0)},$scope.mapRefIntervalSeconds)}}})};$scope.loadSettings=function(){$http.get("/openstreetmap_module/openstreetmap/getAclAndSettings.json",{params:{"angular":!0}}).then(function(result){$scope.acl=result.data.acl;$scope.mapRefIntervalSeconds=parseInt(result.data.settings.reload_interval,10)*1000;$scope.mapURL=result.data.settings.server_url;$scope.titleResetButton=result.data.settings.titleResetButton;$scope.state_filter=parseInt(result.data.settings.state_filter,10);$scope.post.settings.hide_empty_locations=parseInt(result.data.settings.hide_empty_locations,10);$scope.post.settings.hide_not_monitored_locations=parseInt(result.data.settings.hide_not_monitored_locations,10);for(key in $scope.filter){$scope.post.settings.filter[key]=$scope.state_filter&$scope.filter[key]}
$scope.loadLocationsInMap(!1)})};$scope.triggerFilter=function(){if($scope.showFilter===!0){$scope.showFilter=!1}else{$scope.showFilter=!0}};$scope.problemsOnly=function(){if($scope.init===!0){$scope.state_filter=$scope.post.settings.filter.warning|$scope.post.settings.filter.down_critical|$scope.filter.unreachable_unknown;for(key in $scope.filter){$scope.post.settings.filter[key]=$scope.state_filter&$scope.filter[key]}
$scope.loadLocationsInMap(!1)}};$scope.resetFilter=function(){$scope.init=!1;$scope.loadLocationsInMap(!1)};$scope.$watch('post.settings',function(){if($scope.init===!0){$scope.state_filter=$scope.post.settings.filter.up_ok|$scope.post.settings.filter.warning|$scope.post.settings.filter.down_critical|$scope.filter.unreachable_unknown;$scope.loadLocationsInMap(!1)}},!0);var hasChanges=function hasChanges(mapOptions){if(mapOptions.zoom===0){return!1}
if(mapOptions.zoom!==$scope.map.getZoom()){return!0}
if(mapOptions.center.lat!==$scope.map.getCenter()['lat']&&mapOptions.center.lng!==$scope.map.getCenter()['lng']){return!0}
return!1};var newCustomControl=L.Control.extend({options:{position:"topleft"},onAdd:function onAdd(){var container=L.DomUtil.create("div","leaflet-bar leaflet-control leaflet-control-custom");container.title=$scope.titleResetButton;container.onclick=function(){$scope.mapOptions.zoom=0;$scope.resetFilter();$scope.loadLocationsInMap(!1)};return container}});var loadMap=function loadMap(locationPoints){if(typeof locationPoints==="undefined"){return}
if(!hasChanges($scope.mapOptions)&&locationPoints.length>0){$scope.map.fitBounds(new L.LatLngBounds(locationPoints));$scope.mapOptions.zoom=$scope.map.getZoom();$scope.mapOptions.center=$scope.map.getCenter()}
L.tileLayer($scope.mapURL,{maxNativeZoom:18,maxZoom:18,attribution:"&copy; <a target='_blank' href='http://openstreetmap.org/copyright'>OpenStreetMap</a> contributors | <a target='_blank' href='https://it-novum.com'>it-novum.com</a>",noWrap:!1}).addTo($scope.map);var options={click:function click(data){if($scope.map.isFullscreen()===!0){return}
var containerIds=[];data.forEach(function(point){containerIds.push(point.o.id)});$scope.showOpenstreetMapSummaryState(containerIds,$scope.acl)}};var cells=_.chain($scope.locations).groupBy(function(location){return location.Container.id}).map(function(values){return{latitude:Number(values[0].Location.latitude),longitude:Number(values[0].Location.longitude),id:values[0].Container.id,name:values[0].Container.name,colorcode:values[0].Location.colorcode}}).value();L.hexbinLayer(options).addTo($scope.map).data(cells);if($scope.mapControlInit===!1){$scope.map.addControl(new newCustomControl());$scope.mapControlInit=!0}}});angular.module('openITCOCKPIT').controller('Openstreetmap_settingsIndexController',function($scope,$http,$state,NotyService){$scope.post={OpenstreetmapSetting:{id:1,server_url:'',reload_interval:15,state_filter:0,filter:{up_ok:1,warning:1,down_critical:1,unreachable_unknown:1},hide_empty_locations:1,hide_not_monitored_locations:1}};$scope.filter={up_ok:1,warning:2,down_critical:4,unreachable_unknown:8};$scope.load=function(){$http.get("/openstreetmap_module/openstreetmap_settings/index.json",{params:{'angular':!0}}).then(function(result){$scope.post.OpenstreetmapSetting.server_url=result.data.settings.OpenstreetmapSetting.server_url;$scope.post.OpenstreetmapSetting.reload_interval=result.data.settings.OpenstreetmapSetting.reload_interval;$scope.post.OpenstreetmapSetting.state_filter=parseInt(result.data.settings.OpenstreetmapSetting.state_filter,10);for(key in $scope.filter){$scope.post.OpenstreetmapSetting.filter[key]=$scope.post.OpenstreetmapSetting.state_filter&$scope.filter[key]}
$scope.post.OpenstreetmapSetting.hide_empty_locations=parseInt(result.data.settings.OpenstreetmapSetting.hide_empty_locations);$scope.post.OpenstreetmapSetting.hide_not_monitored_locations=parseInt(result.data.settings.OpenstreetmapSetting.hide_not_monitored_locations)},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$scope.post.OpenstreetmapSetting.state_filter=0;for(i in $scope.post.OpenstreetmapSetting.filter){$scope.post.OpenstreetmapSetting.state_filter|=$scope.post.OpenstreetmapSetting.filter[i]}
$http.post("/openstreetmap_module/openstreetmap_settings/index.json?angular=true",$scope.post).then(function(result){$scope.errors=[];NotyService.genericSuccess()},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('SettingsEditController',function($scope,$http,NotyService,$state){$scope.post={PagerdutySettings:{api_key:'',integration_key:'',api_url:'',webhook:'',two_way:!1,use_proxy:!1,}};$scope.load=function(){$http.get("/pagerduty_module/settings/edit.json",{params:{'angular':!0}}).then(function(result){$scope.post=result.data.settings},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/pagerduty_module/settings/edit.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$scope.errors=null},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()});angular.module('openITCOCKPIT').controller('EditIndexController',function($scope,$http,NotyService,$state){$scope.post={SlackSettings:{api_url:'',oauth_access_token:'',two_way:!1,use_proxy:!1,}};$scope.load=function(){$http.get("/slack_module/edit/index.json",{params:{'angular':!0}}).then(function(result){$scope.post=result.data.settings},function errorCallback(result){if(result.status===403){$state.go('403')}
if(result.status===404){$state.go('404')}})};$scope.submit=function(){$http.post("/slack_module/edit/index.json?angular=true",$scope.post).then(function(result){NotyService.genericSuccess();$scope.errors=null},function errorCallback(result){NotyService.genericError();if(result.data.hasOwnProperty('error')){$scope.errors=result.data.error}})};$scope.load()})